saas_config:
  fides_key: <instance_fides_key>
  name: Greenhouse
  type: greenhouse
  description: A sample schema representing the Greenhouse integration for Fides
  user_guide: https://docs.ethyca.com/user-guides/integrations/saas-integrations/greenhouse
  version: 0.1.0

  connector_params:
    - name: domain
      label: Domain
      description: The Harvest domain. Default harvest.greenhouse.io
      default_value: harvest.greenhouse.io
    - name: api_key
      label: API key
      description: The Harvest API key value. You can view and manage your API keys from your Greenhouse main page, selecting the gear icon, then from the left hand list choose Dev Center and from the list presented you can select API Credential Management.
      sensitive: True
    - name: greenhouse_user_id
      label: Greenhouse User ID
      # the id below is made up but has the typical number of characters
      description: Your Greenhouse USER id. This value can be seen by any Greenhouse user from the main page by examining the URL when viewing this user. From the Greenhouse main page, navigate to Configure select Users then Select the desired user. The URL when viewing the account will look like this https://app8.greenhouse.io/account/users/4054555008/edit where the numeric value is the Greenhouse user ID.

  client_config:
    protocol: https
    host: <domain>
    authentication:
      strategy: api_key
      configuration:
        headers:
          - name: Authorization
            value: <api_key>
          - name: On-Behalf-Of
            value: <greenhouse_user_id>

  # In this case this endpoint will return all candidates, but the per page will limit this to 1 to cut down on the response size
  test_request:
    method: GET
    path: /v1/candidates
    query_params:
      - name: per_page
        value: "1"

  endpoints:
    - name: user
      requests:
        read:
          method: GET
          path: /v1/candidates
          query_params:
            - name: email
              value: <email>
          param_values:
            - name: email
              identity: email
        update:
          method: PUT
          path: /v1/candidates/<user_id>/anonymize
          param_values:
            - name: user_id
              references:
                - dataset: <instance_fides_key>
                  field: user.id
                  direction: from
          query_params:
            - name: fields
              # these are all the fields supported for anonymizing, I figured it wouldn't hurt to send them all along. It also seems to just remove entries in all but the 'full name' field which gets populated with Anonymized
              value: "full_name,current_company,current_title,tags,phone_numbers,emails,social_media_links,websites,addresses,location,custom_candidate_fields,source,recruiter,coordinator,attachments,application_questions,referral_questions,notes,rejection_notes,email_addresses,activity_items,innotes,inmails,rejection_reason,scorecards_and_interviews,offers,credited_to,headline,all_offer_versions,follow_up_reminders,custom_application_fields,education,employment,candidate_stage_data,prospect_owner,custom_rejection_question_fields,touchpoints,prospect_pool_and_stage,prospect_jobs,prospect_offices,prospect_offices_and_departments,third_party_integrations"
