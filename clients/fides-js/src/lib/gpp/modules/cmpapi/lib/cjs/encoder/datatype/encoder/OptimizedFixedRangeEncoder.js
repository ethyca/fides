"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OptimizedFixedRangeEncoder=void 0;const DecodingError_js_1=require("../../error/DecodingError.js"),FixedBitfieldEncoder_js_1=require("./FixedBitfieldEncoder.js"),FixedIntegerEncoder_js_1=require("./FixedIntegerEncoder.js"),FixedIntegerRangeEncoder_js_1=require("./FixedIntegerRangeEncoder.js");class OptimizedFixedRangeEncoder{static encode(e){let r=e.length>0?e[e.length-1]:0,d=FixedIntegerRangeEncoder_js_1.FixedIntegerRangeEncoder.encode(e),n=r;if(d.length<=n)return FixedIntegerEncoder_js_1.FixedIntegerEncoder.encode(r,16)+"1"+d;{let d=[],i=0;for(let n=0;n<r;n++)n===e[i]-1?(d[n]=!0,i++):d[n]=!1;return FixedIntegerEncoder_js_1.FixedIntegerEncoder.encode(r,16)+"0"+FixedBitfieldEncoder_js_1.FixedBitfieldEncoder.encode(d,n)}}static decode(e){if(!/^[0-1]*$/.test(e)||e.length<2||e.indexOf("11")!==e.length-2)throw new DecodingError_js_1.DecodingError("Undecodable FibonacciInteger '"+e+"'");if("1"===e.charAt(16))return FixedIntegerRangeEncoder_js_1.FixedIntegerRangeEncoder.decode(e.substring(17));{let r=[],d=FixedBitfieldEncoder_js_1.FixedBitfieldEncoder.decode(e.substring(17));for(let e=0;e<d.length;e++)!0===d[e]&&r.push(e+1);return r}}}exports.OptimizedFixedRangeEncoder=OptimizedFixedRangeEncoder;