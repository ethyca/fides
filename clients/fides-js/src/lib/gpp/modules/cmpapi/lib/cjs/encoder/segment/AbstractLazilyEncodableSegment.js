"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractLazilyEncodableSegment=void 0;const InvalidFieldError_js_1=require("../error/InvalidFieldError.js");class AbstractLazilyEncodableSegment{constructor(){this.encodedString=null,this.dirty=!1,this.decoded=!0,this.fields=this.initializeFields()}validate(){}hasField(e){return this.fields.containsKey(e)}getFieldValue(e){if(this.decoded||(this.decodeSegment(this.encodedString,this.fields),this.dirty=!1,this.decoded=!0),this.fields.containsKey(e))return this.fields.get(e).getValue();throw new InvalidFieldError_js_1.InvalidFieldError("Invalid field: '"+e+"'")}setFieldValue(e,t){if(this.decoded||(this.decodeSegment(this.encodedString,this.fields),this.dirty=!1,this.decoded=!0),!this.fields.containsKey(e))throw new InvalidFieldError_js_1.InvalidFieldError(e+" not found");this.fields.get(e).setValue(t),this.dirty=!0}toObj(){let e={},t=this.getFieldNames();for(let i=0;i<t.length;i++){let d=t[i],s=this.getFieldValue(d);e[d]=s}return e}encode(){return(null==this.encodedString||0===this.encodedString.length||this.dirty)&&(this.validate(),this.encodedString=this.encodeSegment(this.fields),this.dirty=!1,this.decoded=!0),this.encodedString}decode(e){this.encodedString=e,this.dirty=!1,this.decoded=!1}}exports.AbstractLazilyEncodableSegment=AbstractLazilyEncodableSegment;