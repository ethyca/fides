"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractLazilyEncodableSection=void 0;const InvalidFieldError_js_1=require("../error/InvalidFieldError.js");class AbstractLazilyEncodableSection{constructor(){this.encodedString=null,this.dirty=!1,this.decoded=!0,this.segments=this.initializeSegments()}hasField(e){this.decoded||(this.segments=this.decodeSection(this.encodedString),this.dirty=!1,this.decoded=!0);for(let t=0;t<this.segments.length;t++){let i=this.segments[t];if(i.getFieldNames().includes(e))return i.hasField(e)}return!1}getFieldValue(e){this.decoded||(this.segments=this.decodeSection(this.encodedString),this.dirty=!1,this.decoded=!0);for(let t=0;t<this.segments.length;t++){let i=this.segments[t];if(i.hasField(e))return i.getFieldValue(e)}throw new InvalidFieldError_js_1.InvalidFieldError("Invalid field: '"+e+"'")}setFieldValue(e,t){this.decoded||(this.segments=this.decodeSection(this.encodedString),this.dirty=!1,this.decoded=!0);for(let i=0;i<this.segments.length;i++){let s=this.segments[i];if(s.hasField(e))return void s.setFieldValue(e,t)}throw new InvalidFieldError_js_1.InvalidFieldError("Invalid field: '"+e+"'")}toObj(){let e={};for(let t=0;t<this.segments.length;t++){let i=this.segments[t].toObj();for(const[t,s]of Object.entries(i))e[t]=s}return e}encode(){return(null==this.encodedString||0===this.encodedString.length||this.dirty)&&(this.encodedString=this.encodeSection(this.segments),this.dirty=!1,this.decoded=!0),this.encodedString}decode(e){this.encodedString=e,this.segments=this.decodeSection(this.encodedString),this.dirty=!1,this.decoded=!1}setIsDirty(e){this.dirty=e}}exports.AbstractLazilyEncodableSection=AbstractLazilyEncodableSection;