"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncodableOptimizedFixedRange=void 0;const FixedBitfieldEncoder_js_1=require("./encoder/FixedBitfieldEncoder.js"),FixedIntegerEncoder_js_1=require("./encoder/FixedIntegerEncoder.js"),FixedIntegerRangeEncoder_js_1=require("./encoder/FixedIntegerRangeEncoder.js"),AbstractEncodableBitStringDataType_js_1=require("./AbstractEncodableBitStringDataType.js"),EncodableFixedIntegerRange_js_1=require("./EncodableFixedIntegerRange.js"),EncodingError_js_1=require("../error/EncodingError.js"),DecodingError_js_1=require("../error/DecodingError.js"),SubstringError_js_1=require("./SubstringError.js"),StringUtil_js_1=require("../util/StringUtil.js");class EncodableOptimizedFixedRange extends AbstractEncodableBitStringDataType_js_1.AbstractEncodableBitStringDataType{constructor(e,r=!0){super(r),this.setValue(e)}encode(){try{let e=this.value.length>0?this.value[this.value.length-1]:0,r=FixedIntegerRangeEncoder_js_1.FixedIntegerRangeEncoder.encode(this.value),t=r.length,n=e;if(t<=n)return FixedIntegerEncoder_js_1.FixedIntegerEncoder.encode(e,16)+"1"+r;{let r=[],t=0;for(let n=0;n<e;n++)n===this.value[t]-1?(r[n]=!0,t++):r[n]=!1;return FixedIntegerEncoder_js_1.FixedIntegerEncoder.encode(e,16)+"0"+FixedBitfieldEncoder_js_1.FixedBitfieldEncoder.encode(r,n)}}catch(e){throw new EncodingError_js_1.EncodingError(e)}}decode(e){try{if("1"===e.charAt(16))this.value=FixedIntegerRangeEncoder_js_1.FixedIntegerRangeEncoder.decode(e.substring(17));else{let r=[],t=FixedBitfieldEncoder_js_1.FixedBitfieldEncoder.decode(e.substring(17));for(let e=0;e<t.length;e++)!0===t[e]&&r.push(e+1);this.value=r}}catch(e){throw new DecodingError_js_1.DecodingError(e)}}substring(e,r){try{let t=FixedIntegerEncoder_js_1.FixedIntegerEncoder.decode(StringUtil_js_1.StringUtil.substring(e,r,r+16));return"1"===e.charAt(r+16)?StringUtil_js_1.StringUtil.substring(e,r,r+17)+new EncodableFixedIntegerRange_js_1.EncodableFixedIntegerRange([]).substring(e,r+17):StringUtil_js_1.StringUtil.substring(e,r,r+17+t)}catch(e){throw new SubstringError_js_1.SubstringError(e)}}getValue(){return[...super.getValue()]}setValue(e){super.setValue(Array.from(new Set(e)).sort(((e,r)=>e-r)))}}exports.EncodableOptimizedFixedRange=EncodableOptimizedFixedRange;