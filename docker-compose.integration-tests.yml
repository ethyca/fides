services:
  fidesctl:
    depends_on:
      - postgres-test
      - mysql-test

  postgres-test:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres_example
    expose:
      - 6432
    ports:
      - "6432:5432"
    volumes:
      # NOTE: consider running initialization SQL in Python instead of this
      # (see "Initialization scripts" section at https://hub.docker.com/_/postgres)
      - ./fidesctl/tests/data/example_sql/postgres_example.sql:/docker-entrypoint-initdb.d/postgres_example.sql

  mysql-test:
    image: mysql
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_HOST=mysql_example
      - MYSQL_DATABASE=mysql_example
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_USER=mysql_user
      - MYSQL_PASSWORD=mysql_pw
    expose:
      - 3306
    ports:
      - "3306:3306"
    volumes:
      - ./fidesctl/tests/data/example_sql/mysql_example.sql:/docker-entrypoint-initdb.d/mysql_example.sql

  sqlserver-test:
    image: docker pull mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=example
    expose:
      - 1433
    ports:
      - "0.0.0.0:1433:1433"
    volumes:
      # NOTE: consider running initialization SQL in Python instead of this
      # (see "Initialization scripts" section at https://hub.docker.com/_/postgres)
      - ./data/sql/postgres_example.sql:/docker-entrypoint-initdb.d/postgres_example.sql
