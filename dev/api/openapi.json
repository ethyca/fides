{
  "openapi": "3.1.0",
  "info": {
    "title": "fides",
    "version": "2.68.1b4.post0.dev12"
  },
  "paths": {
    "/api/v1/data_category": {
      "get": {
        "tags": [
          "DataCategory"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_data_category_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataCategory"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Data Category Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DataCategory"
        ],
        "summary": "Update",
        "description": "Update a data category. Ensures updates to \"active\" are appropriately cascaded.",
        "operationId": "Update_api_v1_data_category_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCategoryCreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DataCategory"
        ],
        "summary": "Create",
        "description": "Create a data category",
        "operationId": "Create_api_v1_data_category_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCategoryCreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:create"
            ]
          }
        ]
      }
    },
    "/api/v1/data_category/{fides_key}": {
      "get": {
        "tags": [
          "DataCategory"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_data_category__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataCategory"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_data_category__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Data Category  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "data_category",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data_category/upsert": {
      "post": {
        "tags": [
          "DataCategory"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_data_category_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DataCategory"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Data Category Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 data_category(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 data_category(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_category:create",
              "data_category:update"
            ]
          }
        ]
      }
    },
    "/api/v1/data_subject": {
      "get": {
        "tags": [
          "DataSubject"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_data_subject_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataSubject"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Data Subject Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DataSubject"
        ],
        "summary": "Update",
        "description": "Update a resource by its fides_key.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "update_api_v1_data_subject_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubject"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "data_subject",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DataSubject"
        ],
        "summary": "Create",
        "description": "Create a data subject",
        "operationId": "Create_api_v1_data_subject_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubjectCreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:create"
            ]
          }
        ]
      }
    },
    "/api/v1/data_subject/{fides_key}": {
      "get": {
        "tags": [
          "DataSubject"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_data_subject__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataSubject"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_data_subject__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Data Subject  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "data_subject",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data_subject/upsert": {
      "post": {
        "tags": [
          "DataSubject"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_data_subject_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DataSubject"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Data Subject Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 data_subject(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 data_subject(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_subject:create",
              "data_subject:update"
            ]
          }
        ]
      }
    },
    "/api/v1/data_use": {
      "get": {
        "tags": [
          "DataUse"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_data_use_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataUse"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Data Use Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DataUse"
        ],
        "summary": "Update",
        "description": "Update a data use. Ensures updates to \"active\" are appropriately cascaded.",
        "operationId": "Update_api_v1_data_use_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataUseCreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DataUse"
        ],
        "summary": "Create",
        "description": "Create a data use. Updates existing data use if data use with name already exists and is disabled.",
        "operationId": "Create_api_v1_data_use_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataUseCreateOrUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:create"
            ]
          }
        ]
      }
    },
    "/api/v1/data_use/{fides_key}": {
      "get": {
        "tags": [
          "DataUse"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_data_use__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataUse"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_data_use__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Data Use  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "data_use",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data_use/upsert": {
      "post": {
        "tags": [
          "DataUse"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_data_use_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DataUse"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Data Use Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 data_use(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 data_use(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "data_use:create",
              "data_use:update"
            ]
          }
        ]
      }
    },
    "/api/v1/evaluation": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_evaluation_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Evaluation Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Update",
        "description": "Update a resource by its fides_key.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "update_api_v1_evaluation_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "evaluation",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Create",
        "description": "Create a resource.\n\nPayloads with an is_default field can only be set to False,\nwill return a `403 Forbidden`.",
        "operationId": "Create_api_v1_evaluation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "evaluation",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:create"
            ]
          }
        ]
      }
    },
    "/api/v1/evaluation/{fides_key}": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_evaluation__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_evaluation__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Evaluation  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "evaluation",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/evaluation/upsert": {
      "post": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_evaluation_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Evaluation"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Evaluation Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 evaluation(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 evaluation(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "evaluation:create",
              "evaluation:update"
            ]
          }
        ]
      }
    },
    "/api/v1/generate": {
      "post": {
        "tags": [
          "Generate"
        ],
        "summary": "Generate",
        "description": "A multi-purpose endpoint to generate Fides resources based on existing\ninfrastructure\n\nCurrently generates Fides resources for the following:\n* AWS: Systems\n* Okta: Systems\n* DB: Datasets\n* BigQuery: Datasets\n* DynamoDB: Datasets\n\nIn the future, this will include options for other Systems & Datasets,\nexamples include:\n* Snowflake: Datasets\n\nAll production deployments should implement HTTPS for security purposes",
        "operationId": "generate_api_v1_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Unable to generate resources."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "generate:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/organization": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_organization_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Organization Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update",
        "description": "Update a resource by its fides_key.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "update_api_v1_organization_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "organization",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create",
        "description": "Create a resource.\n\nPayloads with an is_default field can only be set to False,\nwill return a `403 Forbidden`.",
        "operationId": "Create_api_v1_organization_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "organization",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:create"
            ]
          }
        ]
      }
    },
    "/api/v1/organization/{fides_key}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_organization__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_organization__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Organization  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "organization",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organization/upsert": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_organization_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Organization"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Organization Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 organization(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 organization(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "organization:create",
              "organization:update"
            ]
          }
        ]
      }
    },
    "/api/v1/policy": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "List",
        "description": "Get a list of all of the resources of this type.",
        "operationId": "List_api_v1_policy_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/fideslang__models__Policy"
                  },
                  "type": "array",
                  "title": "Response List Api V1 Policy Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Policy"
        ],
        "summary": "Update",
        "description": "Update a resource by its fides_key.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "update_api_v1_policy_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fideslang__models__Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fideslang__models__Policy"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "policy",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:update"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "Create",
        "description": "Create a resource.\n\nPayloads with an is_default field can only be set to False,\nwill return a `403 Forbidden`.",
        "operationId": "Create_api_v1_policy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fideslang__models__Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fideslang__models__Policy"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "policy",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:create"
            ]
          }
        ]
      }
    },
    "/api/v1/policy/{fides_key}": {
      "get": {
        "tags": [
          "Policy"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_policy__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fideslang__models__Policy"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policy"
        ],
        "summary": "Delete",
        "description": "Delete a resource by its fides_key.\n\nResources that have `is_default=True` cannot be deleted and will respond\nwith a `403 Forbidden`.",
        "operationId": "delete_api_v1_policy__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 Policy  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "policy",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/policy/upsert": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "Upsert",
        "description": "For any resource in `resources` that already exists in the database,\nupdate the resource by its `fides_key`. Otherwise, create a new resource.\n\nResponds with a `201 Created` if even a single resource in `resources`\ndid not previously exist. Otherwise, responds with a `200 OK`.\n\nThe `is_default` field cannot be updated and will respond\nwith a `403 Forbidden` if attempted.",
        "operationId": "upsert_api_v1_policy_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/fideslang__models__Policy"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 Policy Upsert Post"
                },
                "example": {
                  "message": "Upserted 3 policy(s)",
                  "inserted": 0,
                  "updated": 3
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "message": "Upserted 3 policy(s)",
                  "inserted": 1,
                  "updated": 2
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "DataCategory",
                    "fides_key": "example.key"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_policy:create",
              "ctl_policy:update"
            ]
          }
        ]
      }
    },
    "/api/v1/system/{fides_key}/connection/instantiate/{saas_connector_type}": {
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Instantiate Connection From Template",
        "description": "Instantiates a SaaS connection from the available template and the template values.\nAssociates the newly instantiated connection with the provided system.",
        "operationId": "instantiate_connection_from_template_api_v1_system__fides_key__connection_instantiate__saas_connector_type__post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:instantiate"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          },
          {
            "name": "saas_connector_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Saas Connector Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasConnectionTemplateValues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasConnectionTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/{fides_key}/connection": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get System Connections",
        "description": "Return all the connection configs related to a system.",
        "operationId": "get_system_connections_api_v1_system__fides_key__connection_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ConnectionConfigurationResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "System"
        ],
        "summary": "Patch Connections",
        "description": "Given a valid System fides key, a list of connection config data elements, optionally\ncontaining the secrets, create or update corresponding ConnectionConfig objects or report\nfailure.\n\nIf the key in the payload exists, it will be used to update an existing ConnectionConfiguration.\nOtherwise, a new ConnectionConfiguration will be created for you.",
        "operationId": "patch_connections_api_v1_system__fides_key__connection_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateConnectionConfigurationWithSecrets"
                },
                "maxItems": 50,
                "title": "Configs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutConnectionConfiguration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "System"
        ],
        "summary": "Delete Connection",
        "operationId": "delete_connection_api_v1_system__fides_key__connection_delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/{fides_key}/connection/secrets": {
      "patch": {
        "tags": [
          "System"
        ],
        "summary": "Patch Connection Secrets",
        "description": "Patch secrets that will be used to connect to a specified connection_type.\n\nThe specific secrets will be connection-dependent. For example, the components needed to connect to a Postgres DB\nwill differ from Dynamo DB.",
        "operationId": "patch_connection_secrets_api_v1_system__fides_key__connection_secrets_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Verify"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/BigQueryDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DatahubDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamicErasureEmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/EmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/FidesDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ManualWebhookDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MariaDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MongoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MSSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/OktaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/PostgreSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RedshiftDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/S3DocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SaaSSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ScyllaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SnowflakeDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SovrnDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/TimescaleDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/WebsiteSchema"
                  }
                ],
                "title": "Unvalidated Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system": {
      "put": {
        "tags": [
          "System"
        ],
        "summary": "Update",
        "description": "Update a System by the fides_key extracted from the request body.  Defined outside of the crud routes\nto add additional \"system manager\" permission checks.",
        "operationId": "update_api_v1_system_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:update"
            ]
          },
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResponse"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "system",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Create",
        "description": "Override `System` create/POST to handle `.privacy_declarations` defined inline,\nfor backward compatibility and ease of use for API users.",
        "operationId": "create_api_v1_system_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:create"
            ]
          },
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "System"
        ],
        "summary": "List Systems (Optionally Paginated)",
        "description": "Get a list of all of the Systems.\nIf any parameters or filters are provided the response will be paginated and/or filtered.\nOtherwise all Systems will be returned (this may be a slow operation if there are many systems,\nso using the pagination parameters is recommended).",
        "operationId": "List_systems__optionally_paginated__api_v1_system_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "data_uses",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Uses"
            }
          },
          {
            "name": "data_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Categories"
            }
          },
          {
            "name": "data_subjects",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Subjects"
            }
          },
          {
            "name": "show_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Show Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BasicSystemResponse"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/Page_BasicSystemResponse_"
                    }
                  ],
                  "title": "Response List Systems  Optionally Paginated  Api V1 System Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/upsert": {
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Upsert",
        "operationId": "upsert_api_v1_system_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/System"
                },
                "type": "array",
                "title": "Resources"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Api V1 System Upsert Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:create",
              "system:update"
            ]
          },
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ]
      }
    },
    "/api/v1/system/{fides_key}": {
      "delete": {
        "tags": [
          "System"
        ],
        "summary": "Delete",
        "description": "Delete a System by its fides_key. Defined outside of the crud routes\nto add additional \"system manager\" permission checks.",
        "operationId": "delete_api_v1_system__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Api V1 System  Fides Key  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "error": "user does not have permission to modify this resource",
                    "resource_type": "system",
                    "fides_key": "example.key"
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get",
        "description": "Get a resource by its fides_key.",
        "operationId": "get_api_v1_system__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/hidden": {
      "patch": {
        "tags": [
          "System"
        ],
        "summary": "Patch Hidden",
        "description": "Patch the hidden status of a list of systems. Request body must be a list of system Fides keys.",
        "operationId": "patch_hidden_api_v1_system_hidden_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "hidden",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Hidden"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Fides Keys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Patch Hidden Api V1 System Hidden Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/validate": {
      "post": {
        "tags": [
          "Validate"
        ],
        "summary": "Validate",
        "description": "Endpoint used to validate different resource targets.",
        "operationId": "validate_api_v1_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "validate:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Get Config",
        "description": "Returns the current API exposable Fides configuration.",
        "operationId": "get_config_api_v1_config_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "config:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "api_set",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Api Set"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Config Api V1 Config Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Config"
        ],
        "summary": "Patch Settings",
        "description": "Updates the global application settings record.\n\nOnly keys provided will be updated, others will be unaffected,\ni.e. true PATCH behavior.",
        "operationId": "patch_settings_api_v1_config_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "config:update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Config"
        ],
        "summary": "Put Settings",
        "description": "Updates the global application settings record.\n\nThe record will look exactly as it is provided, i.e. true PUT behavior.",
        "operationId": "put_settings_api_v1_config_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "config:update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config"
        ],
        "summary": "Reset Settings",
        "description": "Resets the global application settings record.\n\nOnly the \"api-set\" values are cleared, \"config-set\" values are\nnot updated via any API calls",
        "operationId": "reset_settings_api_v1_config_delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "config:update"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Reset Settings Api V1 Config Delete"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection_type": {
      "get": {
        "tags": [
          "Connection Types"
        ],
        "summary": "Get All Connection Types",
        "description": "Returns a list of connection options in Fides - includes only database and saas options here.\n\nQuery params for types of requests supported - `consent`, `access` and `erasure` - act as filters.\nIf set to `true`, only connections that support the specified type of request will be returned.\nIf no filters are specified, then no filtering is performed.\nWhen applied together, the filters act as a union: result sets are additive.",
        "operationId": "get_all_connection_types_api_v1_connection_type_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection_type:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 100,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "system_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SystemType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Type"
            }
          },
          {
            "name": "consent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Consent"
            }
          },
          {
            "name": "access",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access"
            }
          },
          {
            "name": "erasure",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Erasure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ConnectionSystemTypeMap_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection_type/{connection_type}/secret": {
      "get": {
        "tags": [
          "Connection Types"
        ],
        "summary": "Get Connection Type Secret Schema Route",
        "description": "Returns the secret fields that should be supplied to authenticate with a particular connection type\n\nNote that this endpoint should never return actual secrets, we return the *types* of secret fields needed\nto authenticate.",
        "operationId": "get_connection_type_secret_schema_route_api_v1_connection_type__connection_type__secret_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection_type:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Connection Type Secret Schema Route Api V1 Connection Type  Connection Type  Secret Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "Get Connections",
        "description": "Returns all connection configurations in the database.\nOptionally filter the key, name, and description with a search query param.\n\nCan also filter on disabled, connection_type, test_status, and system_type.\n\nConnection_type supports \"or\" filtering:\n?connection_type=postgres&connection_type=mongo will be translated\ninto an \"or\" query. This parameter can also be used to filter by specific\nSaaS connector types.",
        "operationId": "get_connections_api_v1_connection_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Disabled"
            }
          },
          {
            "name": "test_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TestStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Test Status"
            }
          },
          {
            "name": "system_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SystemType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "System Type"
            }
          },
          {
            "name": "orphaned_from_system",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Orphaned From System"
            }
          },
          {
            "name": "connection_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connection Type"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ConnectionConfigurationResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Connections"
        ],
        "summary": "Patch Connections",
        "description": "Given a list of connection config data elements, optionally containing the secrets,\ncreate or update corresponding ConnectionConfig objects or report failure\n\nIf the key in the payload exists, it will be used to update an existing ConnectionConfiguration.\nOtherwise, a new ConnectionConfiguration will be created for you.",
        "operationId": "patch_connections_api_v1_connection_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateConnectionConfigurationWithSecrets"
                },
                "maxItems": 50,
                "title": "Configs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutConnectionConfiguration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "Get Connection Detail",
        "description": "Returns connection configuration with matching key.",
        "operationId": "get_connection_detail_api_v1_connection__connection_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionConfigurationResponseWithSystemKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connections"
        ],
        "summary": "Delete Connection",
        "operationId": "delete_connection_api_v1_connection__connection_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/secret": {
      "put": {
        "tags": [
          "Connections"
        ],
        "summary": "Put Connection Config Secrets",
        "description": "Update secrets that will be used to connect to a specified connection_type.\n\nThe specific secrets will be connection-dependent. For example, the components needed to connect to a Postgres DB\nwill differ from Dynamo DB.",
        "operationId": "put_connection_config_secrets_api_v1_connection__connection_key__secret_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Verify"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/BigQueryDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DatahubDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamicErasureEmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/EmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/FidesDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ManualWebhookDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MariaDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MongoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MSSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/OktaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/PostgreSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RedshiftDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/S3DocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SaaSSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ScyllaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SnowflakeDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SovrnDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/TimescaleDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/WebsiteSchema"
                  }
                ],
                "title": "Unvalidated Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Connections"
        ],
        "summary": "Patch Connection Config Secrets",
        "description": "Partially update secrets that will be used to connect to a specified connection_type.\n\nThe specific secrets will be connection-dependent. For example, the components needed to connect to a Postgres DB\nwill differ from Dynamo DB.",
        "operationId": "patch_connection_config_secrets_api_v1_connection__connection_key__secret_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Verify"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/BigQueryDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DatahubDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamicErasureEmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/DynamoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/EmailDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/FidesDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleCloudSQLPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ManualWebhookDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MariaDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MongoDBDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MSSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/MySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/OktaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/PostgreSQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSMySQLDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RDSPostgresDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/RedshiftDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/S3DocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SaaSSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ScyllaDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SnowflakeDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/SovrnDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/TimescaleDocsSchema"
                  },
                  {
                    "$ref": "#/components/schemas/WebsiteSchema"
                  }
                ],
                "title": "Unvalidated Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/test": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "Test Connection Config Secrets",
        "description": "Endpoint to test a connection at any time using the saved configuration secrets.",
        "operationId": "test_connection_config_secrets_api_v1_connection__connection_key__test_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consent-request/preferences": {
      "get": {
        "tags": [
          "Consent"
        ],
        "summary": "Report Consent Requests",
        "description": "Provides a paginated list of all consent requests sorted by the most recently updated.",
        "operationId": "report_consent_requests_api_v1_consent_request_preferences_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "consent:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "data_use",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Use"
            }
          },
          {
            "name": "has_gpc_flag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Gpc Flag"
            }
          },
          {
            "name": "opt_in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Opt In"
            }
          },
          {
            "name": "created_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Lt"
            }
          },
          {
            "name": "created_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Gt"
            }
          },
          {
            "name": "updated_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated Lt"
            }
          },
          {
            "name": "updated_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated Gt"
            }
          },
          {
            "name": "identity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Identity"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ConsentReport_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Get Consent Preferences",
        "description": "Gets the consent preferences for the specified user.",
        "operationId": "get_consent_preferences_api_v1_consent_request_preferences_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "consent:read"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentPreferences"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consent-request": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Create Consent Request",
        "description": "Creates a verification code for the user to verify access to manage consent preferences.",
        "operationId": "create_consent_request_api_v1_consent_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentRequestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consent-request/{consent_request_id}/verify": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Consent Request Verify",
        "description": "Verifies the verification code and returns the current consent preferences if successful.\n\nNote that this returns just Consent records - which is the old workflow that saves Consent with respect to a data use.",
        "operationId": "consent_request_verify_api_v1_consent_request__consent_request_id__verify_post",
        "parameters": [
          {
            "name": "consent_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Consent Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentPreferences"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consent-request/{consent_request_id}/preferences": {
      "get": {
        "tags": [
          "Consent"
        ],
        "summary": "Get Consent Preferences No Id",
        "description": "Returns the current consent preferences if successful.",
        "operationId": "get_consent_preferences_no_id_api_v1_consent_request__consent_request_id__preferences_get",
        "parameters": [
          {
            "name": "consent_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Consent Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentPreferences"
                }
              }
            },
            "consent": [
              {
                "data_use": "marketing.advertising",
                "data_use_description": "We may use some of your personal information for advertising performance analysis and audience modeling for ongoing advertising which may be interpreted as 'Data Sharing' under some regulations.",
                "opt_in": true,
                "highlight": false
              },
              {
                "data_use": "functional",
                "data_use_description": "We may use some of your personal information to collect analytics about how you use our products & services, in order to improve our service.",
                "opt_in": false
              }
            ]
          },
          "404": {
            "detail": "Consent request not found",
            "description": "Not Found"
          },
          "400": {
            "detail": "Retrieving consent preferences without identity verification is only supported with disable_consent_identity_verification set to true",
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Consent"
        ],
        "summary": "Set Consent Preferences",
        "description": "Verifies the verification code and saves the user's consent preferences if successful.\n\nNote that this allows you to save Consent records under our old workflow that saves Consent with respect to a data use.\n\n# TODO Slated for deprecation",
        "operationId": "set_consent_preferences_api_v1_consent_request__consent_request_id__preferences_patch",
        "parameters": [
          {
            "name": "consent_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Consent Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentPreferencesWithVerificationCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentPreferences"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/validate_dataset": {
      "put": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Validate Dataset",
        "description": "Run validations against a dataset without attempting to save it to the database.\n\nChecks that:\n- all required fields are present, all field values are valid types\n- all DataCategory values reference known keys\n- etc.\n\nAfter validating, also tests to see if the dataset is traversable. Note that\nit's possible for a dataset to be valid but not traversable; this happens\nwhen a dataset is dependent on references to other datasets.\n\nReturns a 200 OK for all valid datasets, and a traversal_details object with\ninformation about the traversal (or traversal errors).",
        "operationId": "validate_dataset_api_v1_connection__connection_key__validate_dataset_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dataset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateDatasetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/datasetconfig": {
      "put": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Put Dataset Configs",
        "description": "Endpoint to create, update, or remove DatasetConfigs by passing in pairs of:\n1) A DatasetConfig fides_key\n2) The corresponding CtlDataset fides_key which stores the bulk of the actual dataset\n\nThe CtlDataset contents are retrieved for extra validation before linking this\nto the DatasetConfig.\n\nNote: Any existing DatasetConfigs not specified in the dataset pairs will be deleted.",
        "operationId": "put_dataset_configs_api_v1_connection__connection_key__datasetconfig_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DatasetConfigCtlDataset"
                },
                "maxItems": 1000,
                "title": "Dataset Pairs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutDataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Patch Dataset Configs",
        "description": "Endpoint to create or update DatasetConfigs by passing in pairs of:\n1) A DatasetConfig fides_key\n2) The corresponding CtlDataset fides_key which stores the bulk of the actual dataset\n\nThe CtlDataset contents are retrieved for extra validation before linking this\nto the DatasetConfig.",
        "operationId": "patch_dataset_configs_api_v1_connection__connection_key__datasetconfig_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DatasetConfigCtlDataset"
                },
                "maxItems": 1000,
                "title": "Dataset Pairs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutDataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Get Dataset Configs",
        "description": "Returns all Dataset Configs attached to current Connection Config.",
        "operationId": "get_dataset_configs_api_v1_connection__connection_key__datasetconfig_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_DatasetConfigSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/dataset": {
      "patch": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Patch Datasets",
        "description": "Given a list of dataset elements, create or update corresponding Dataset objects\nor report failure\n\nThis endpoint upserts the DatasetConfig and associated CTL Dataset.  Will shortly be deprecated.\n\nIf the fides_key for a given DatasetConfig exists, it will be treated as an update.\nOtherwise, a new DatasetConfig will be created.",
        "operationId": "patch_datasets_api_v1_connection__connection_key__dataset_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Dataset"
                },
                "maxItems": 1000,
                "title": "Datasets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutDataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Get Datasets",
        "description": "Returns all CTL datasets attached to the ConnectionConfig via the Dataset Config.\n\nSoon to be deprecated.",
        "operationId": "get_datasets_api_v1_connection__connection_key__dataset_get",
        "deprecated": true,
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Dataset_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/yml/connection/{connection_key}/dataset": {
      "patch": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Patch Yaml Datasets",
        "description": "Bulk create or update datasets from YAML format.\nAccepts application/x-yaml content type.",
        "operationId": "patch_yaml_datasets_api_v1_yml_connection__connection_key__dataset_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutDataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/dataset/{dataset_key}": {
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Get Dataset",
        "description": "Returns a single ctl dataset linked to the given DatasetConfig.\n\nSoon to be deprecated",
        "operationId": "get_dataset_api_v1_connection__connection_key__dataset__dataset_key__get",
        "deprecated": true,
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Delete Dataset",
        "description": "Removes the DatasetConfig based on the given key.",
        "operationId": "delete_dataset_api_v1_connection__connection_key__dataset__dataset_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/datasetconfig/{dataset_key}": {
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Get Dataset Config",
        "description": "Returns the specific Dataset Config linked to the Connection Config.",
        "operationId": "get_dataset_config_api_v1_connection__connection_key__datasetconfig__dataset_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetConfigSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/filter/dataset": {
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Get Ctl Datasets",
        "description": "Deprecated. Use `GET /datasets` instead.\nReturns all CTL datasets .",
        "operationId": "get_ctl_datasets_api_v1_filter_dataset_get",
        "deprecated": true,
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "remove_saas_datasets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Remove Saas Datasets"
            }
          },
          {
            "name": "only_unlinked_datasets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Only Unlinked Datasets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dataset"
                  },
                  "title": "Response Get Ctl Datasets Api V1 Filter Dataset Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/dataset/{dataset_key}/inputs": {
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Dataset Identities And References",
        "description": "Returns a dictionary containing the immediate identity and dataset reference\ndependencies for the given dataset.",
        "operationId": "dataset_identities_and_references_api_v1_connection__connection_key__dataset__dataset_key__inputs_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Dataset Identities And References Api V1 Connection  Connection Key  Dataset  Dataset Key  Inputs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/dataset/{dataset_key}/reachability": {
      "get": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Dataset Reachability",
        "description": "Returns a dictionary containing the immediate identity and dataset reference\ndependencies for the given dataset.",
        "operationId": "dataset_reachability_api_v1_connection__connection_key__dataset__dataset_key__reachability_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          },
          {
            "name": "policy_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Policy Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetReachability"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/dataset/{dataset_key}/test": {
      "post": {
        "tags": [
          "Dataset Configs"
        ],
        "summary": "Test Connection Datasets",
        "operationId": "test_connection_datasets_api_v1_connection__connection_key__dataset__dataset_key__test_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "dataset:test"
            ]
          }
        ],
        "parameters": [
          {
            "name": "dataset_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Key"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestPrivacyRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drp/exercise": {
      "post": {
        "tags": [
          "DRP"
        ],
        "summary": "Create Drp Privacy Request",
        "description": "Given a drp privacy request body, create and execute\na corresponding Fidesops PrivacyRequest",
        "operationId": "create_drp_privacy_request_api_v1_drp_exercise_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrpPrivacyRequestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestDRPStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drp/status": {
      "get": {
        "tags": [
          "DRP"
        ],
        "summary": "Get Request Status Drp",
        "description": "Returns PrivacyRequest information where the respective privacy request is associated with\na policy that implements a Data Rights Protocol action.",
        "operationId": "get_request_status_drp_api_v1_drp_status_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestDRPStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drp/data-rights": {
      "get": {
        "tags": [
          "DRP"
        ],
        "summary": "Get Drp Data Rights",
        "description": "Query all policies and determine the list of DRP actions that are attached to existing policies.",
        "operationId": "get_drp_data_rights_api_v1_drp_data_rights_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrpDataRightsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "policy:read"
            ]
          }
        ]
      }
    },
    "/api/v1/drp/revoke": {
      "post": {
        "tags": [
          "DRP"
        ],
        "summary": "Revoke Request",
        "description": "Revoke a pending privacy request.",
        "operationId": "revoke_request_api_v1_drp_revoke_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrpRevokeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestDRPStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/access-package": {
      "get": {
        "tags": [
          "Privacy Center"
        ],
        "summary": "Get Access Results Urls",
        "description": "Public endpoint for retrieving access results URLs for a privacy request.\nThis endpoint generates fresh presigned URLs and redirects to the first available result.\nThis endpoint is designed to be accessible via email links sent to end users.\nNo authentication is required, but a valid download token is required for security.\nRate limiting is applied for additional security.\n\nprivacy_request_id parameter is required in the URL path.\ntoken parameter is required as a query parameter for security.",
        "operationId": "get_access_results_urls_api_v1_privacy_request__privacy_request_id__access_package_get",
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cryptography/encryption/key": {
      "get": {
        "tags": [
          "Encryption"
        ],
        "summary": "Get Encryption Key",
        "operationId": "get_encryption_key_api_v1_cryptography_encryption_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Encryption Key Api V1 Cryptography Encryption Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "encryption:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/cryptography/encryption/aes/encrypt": {
      "put": {
        "tags": [
          "Encryption"
        ],
        "summary": "Aes Encrypt",
        "operationId": "aes_encrypt_api_v1_cryptography_encryption_aes_encrypt_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AesEncryptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AesEncryptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "encryption:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/cryptography/encryption/aes/decrypt": {
      "put": {
        "tags": [
          "Encryption"
        ],
        "summary": "Aes Decrypt",
        "operationId": "aes_decrypt_api_v1_cryptography_encryption_aes_decrypt_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AesDecryptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AesDecryptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "encryption:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/masking/mask": {
      "put": {
        "tags": [
          "Masking"
        ],
        "summary": "Mask Value",
        "description": "Masks the value(s) provided using the provided masking strategy",
        "operationId": "mask_value_api_v1_masking_mask_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaskingAPIRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaskingAPIResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "masking:exec"
            ]
          }
        ]
      }
    },
    "/api/v1/masking/strategy": {
      "get": {
        "tags": [
          "Masking"
        ],
        "summary": "List Masking Strategies",
        "description": "Lists available masking strategies with instructions on how to use them",
        "operationId": "list_masking_strategies_api_v1_masking_strategy_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MaskingStrategyDescription"
                  },
                  "type": "array",
                  "title": "Response List Masking Strategies Api V1 Masking Strategy Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "masking:read"
            ]
          }
        ]
      }
    },
    "/api/v1/oauth/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Acquire Access Token",
        "description": "Returns an access token if given credentials are correct, raises 401\nexception if not",
        "operationId": "acquire_access_token_api_v1_oauth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_acquire_access_token_api_v1_oauth_token_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/client": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "Create Client",
        "description": "Creates a new client and returns the credentials. Only direct scopes can be added to the client via this endpoint.",
        "operationId": "create_client_api_v1_oauth_client_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Scopes",
                "default": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientCreatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "client:create"
            ]
          }
        ]
      }
    },
    "/api/v1/oauth/client/{client_id}": {
      "delete": {
        "tags": [
          "OAuth"
        ],
        "summary": "Delete Client",
        "description": "Deletes the client associated with the client_id. Does nothing if the client does\nnot exist",
        "operationId": "delete_client_api_v1_oauth_client__client_id__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "client:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/client/{client_id}/scope": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Get Client Scopes",
        "description": "Returns a list of the directly-assigned scopes associated with the client.\nDoes not return roles associated with the client.\nReturns an empty list if client does not exist.",
        "operationId": "get_client_scopes_api_v1_oauth_client__client_id__scope_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "client:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Client Scopes Api V1 Oauth Client  Client Id  Scope Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OAuth"
        ],
        "summary": "Set Client Scopes",
        "description": "Overwrites the client's directly-assigned scopes with those provided.\nRoles cannot be edited via this endpoint.\nDoes nothing if the client doesn't exist",
        "operationId": "set_client_scopes_api_v1_oauth_client__client_id__scope_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "client:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Scopes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/scope": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Read Scopes",
        "description": "Returns a list of all scopes available for assignment in the system",
        "operationId": "read_scopes_api_v1_oauth_scope_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ScopeRegistryEnum"
                  },
                  "type": "array",
                  "title": "Response Read Scopes Api V1 Oauth Scope Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "scope:read"
            ]
          }
        ]
      }
    },
    "/api/v1/oauth/role": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Read Roles To Scopes Mapping",
        "description": "Returns a list of all roles and associated scopes available for assignment in the system",
        "operationId": "read_roles_to_scopes_mapping_api_v1_oauth_role_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": {},
                    "type": "array"
                  },
                  "type": "object",
                  "title": "Response Read Roles To Scopes Mapping Api V1 Oauth Role Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "scope:read"
            ]
          }
        ]
      }
    },
    "/api/v1/oauth/callback": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "Oauth Callback",
        "description": "Uses the passed in code to generate the token access request\nfor the connection associated with the given state.",
        "operationId": "oauth_callback_api_v1_oauth_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Policy List",
        "description": "Return a paginated list of all Policy records in this system",
        "operationId": "get_policy_list_api_v1_dsr_policy_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "policy:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_PolicyResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Create Or Update Policies",
        "description": "Given a list of policy data elements, create or update corresponding Policy objects\nor report failure",
        "operationId": "create_or_update_policies_api_v1_dsr_policy_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "policy:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/fides__api__schemas__policy__Policy"
                },
                "maxItems": 50,
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutPolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Policy",
        "description": "Return a single Policy",
        "operationId": "get_policy_api_v1_dsr_policy__policy_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "policy:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/rule": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Rule List",
        "description": "Return a paginated list of all `Rule` records associated with the given `Policy`.\nThrows a 404 if the given `Policy` can't be found.",
        "operationId": "get_rule_list_api_v1_dsr_policy__policy_key__rule_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_RuleResponseWithTargets_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Create Or Update Rules",
        "description": "Given a list of Rule data elements, create or update corresponding Rule objects\nor report failure",
        "operationId": "create_or_update_rules_api_v1_dsr_policy__policy_key__rule_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RuleCreate"
                },
                "maxItems": 50,
                "title": "Input Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/rule/{rule_key}": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Rule",
        "description": "Return a single `Rule` with the given key, associated with the given `Policy`",
        "operationId": "get_rule_api_v1_dsr_policy__policy_key__rule__rule_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleResponseWithTargets"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Delete Rule",
        "description": "Delete a policy rule.",
        "operationId": "delete_rule_api_v1_dsr_policy__policy_key__rule__rule_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/rule/{rule_key}/target": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Rule Target List",
        "description": "Return a paginated list of all `Rule Target` records associated with the given `Rule`\nThrows a 404 if the given `Rule` or `Policy` can't be found.",
        "operationId": "get_rule_target_list_api_v1_dsr_policy__policy_key__rule__rule_key__target_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_RuleTarget_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Create Or Update Rule Targets",
        "description": "Given a list of Rule data elements, create corresponding Rule objects\nor report failure",
        "operationId": "create_or_update_rule_targets_api_v1_dsr_policy__policy_key__rule__rule_key__target_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RuleTarget"
                },
                "maxItems": 50,
                "title": "Input Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutRuleTargetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/rule/{rule_key}/target/{rule_target_key}": {
      "get": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Get Rule Target",
        "description": "Return a single `Rule Target` associated with the given `Rule` and `Policy`",
        "operationId": "get_rule_target_api_v1_dsr_policy__policy_key__rule__rule_key__target__rule_target_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          },
          {
            "name": "rule_target_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Target Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleTarget"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DSR Policy"
        ],
        "summary": "Delete Rule Target",
        "description": "Delete the rule target.",
        "operationId": "delete_rule_target_api_v1_dsr_policy__policy_key__rule__rule_key__target__rule_target_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "rule:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          },
          {
            "name": "rule_target_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Target Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/webhook/pre_execution": {
      "get": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Get Policy Pre Execution Webhooks",
        "description": "Return a paginated list of all Pre-Execution Webhooks that will\nrun in order for the Policy **before** a Privacy Request is executed.",
        "operationId": "get_policy_pre_execution_webhooks_api_v1_dsr_policy__policy_key__webhook_pre_execution_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_PolicyWebhookResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Create Or Update Pre Execution Webhooks",
        "description": "Create or update the list of Policy Pre-Execution Webhooks that run **before** query execution.\n\nAll webhooks must be included in the request in the desired order. Any missing webhooks\nfrom the request body will be removed.",
        "operationId": "create_or_update_pre_execution_webhooks_api_v1_dsr_policy__policy_key__webhook_pre_execution_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolicyWebhookCreate"
                },
                "maxItems": 50,
                "title": "Webhooks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWebhookResponse"
                  },
                  "title": "Response Create Or Update Pre Execution Webhooks Api V1 Dsr Policy  Policy Key  Webhook Pre Execution Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/webhook/post_execution": {
      "get": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Get Policy Post Execution Webhooks",
        "description": "Return a paginated list of all Post-Execution Webhooks that will run in order for the Policy **after** a\nPrivacy Request is executed.",
        "operationId": "get_policy_post_execution_webhooks_api_v1_dsr_policy__policy_key__webhook_post_execution_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_PolicyWebhookResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Create Or Update Post Execution Webhooks",
        "description": "Create or update the list of Policy Post-Execution Webhooks that run **after** query execution.\n\nAll webhooks must be included in the request in the desired order. Any missing webhooks\nfrom the request body will be removed.",
        "operationId": "create_or_update_post_execution_webhooks_api_v1_dsr_policy__policy_key__webhook_post_execution_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolicyWebhookCreate"
                },
                "maxItems": 50,
                "title": "Webhooks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyWebhookResponse"
                  },
                  "title": "Response Create Or Update Post Execution Webhooks Api V1 Dsr Policy  Policy Key  Webhook Post Execution Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/webhook/pre_execution/{pre_webhook_key}": {
      "get": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Get Policy Pre Execution Webhook",
        "description": "Loads the given Pre-Execution Webhook on the Policy",
        "operationId": "get_policy_pre_execution_webhook_api_v1_dsr_policy__policy_key__webhook_pre_execution__pre_webhook_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "pre_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Update Pre Execution Webhook",
        "description": "PATCH a single Policy Pre-Execution Webhook that runs **prior** to executing the Privacy Request.\n\nNote that updates to the webhook's \"order\" can affect the order of the other pre-execution webhooks.",
        "operationId": "update_pre_execution_webhook_api_v1_dsr_policy__policy_key__webhook_pre_execution__pre_webhook_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "pre_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Webhook Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyWebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Delete Pre Execution Webhook",
        "description": "Delete the Pre-Execution Webhook from the Policy and reorder remaining webhooks as necessary.",
        "operationId": "delete_pre_execution_webhook_api_v1_dsr_policy__policy_key__webhook_pre_execution__pre_webhook_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "pre_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pre Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/policy/{policy_key}/webhook/post_execution/{post_webhook_key}": {
      "get": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Get Policy Post Execution Webhook",
        "description": "Loads the given Post-Execution Webhook on the Policy",
        "operationId": "get_policy_post_execution_webhook_api_v1_dsr_policy__policy_key__webhook_post_execution__post_webhook_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "post_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Post Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Update Post Execution Webhook",
        "description": "PATCH a single Policy Post-Execution Webhook that runs **after** executing the Privacy Request.\n\nNote that updates to the webhook's \"order\" can affect the order of the other post-execution webhooks.",
        "operationId": "update_post_execution_webhook_api_v1_dsr_policy__policy_key__webhook_post_execution__post_webhook_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "post_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Post Webhook Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyWebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DSR Policy Webhooks"
        ],
        "summary": "Delete Post Execution Webhook",
        "description": "Delete the Post-Execution Webhook from the Policy and reorder remaining webhooks as necessary.",
        "operationId": "delete_post_execution_webhook_api_v1_dsr_policy__policy_key__webhook_post_execution__post_webhook_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "policy_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Policy Key"
            }
          },
          {
            "name": "post_webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Post Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyWebhookDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/webhook/pre_approval": {
      "get": {
        "tags": [
          "Pre Approval Webhooks"
        ],
        "summary": "Get Pre Approval Webhook List",
        "description": "Return a paginated list of all PreApprovalWebhook records in this system",
        "operationId": "get_pre_approval_webhook_list_api_v1_dsr_webhook_pre_approval_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_PreApprovalWebhookResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Pre Approval Webhooks"
        ],
        "summary": "Create Or Update Pre Execution Webhooks",
        "description": "Create or update the list of Pre-Approval Webhooks that run as soon as a request is created.\nThis endpoint is all-or-nothing.\nEither all webhooks should be created/updated or none should be updated. Deletes any webhooks not present\nin the request body.",
        "operationId": "create_or_update_pre_execution_webhooks_api_v1_dsr_webhook_pre_approval_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PreApprovalWebhookCreate"
                },
                "maxItems": 50,
                "title": "Webhooks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreApprovalWebhookResponse"
                  },
                  "title": "Response Create Or Update Pre Execution Webhooks Api V1 Dsr Webhook Pre Approval Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dsr/webhook/pre_approval/{webhook_key}": {
      "get": {
        "tags": [
          "Pre Approval Webhooks"
        ],
        "summary": "Get Pre Approval Webhook Detail",
        "description": "Loads the given Pre-Approval Webhook by key",
        "operationId": "get_pre_approval_webhook_detail_api_v1_dsr_webhook_pre_approval__webhook_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreApprovalWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Pre Approval Webhooks"
        ],
        "summary": "Update Pre Execution Webhook",
        "description": "PATCH a single Pre-Approval Webhook that runs as soon as Privacy Request is created.",
        "operationId": "update_pre_execution_webhook_api_v1_dsr_webhook_pre_approval__webhook_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreApprovalWebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreApprovalWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Pre Approval Webhooks"
        ],
        "summary": "Delete Pre Execution Webhook",
        "description": "Delete the Pre-Approval Webhook given webhook key",
        "operationId": "delete_pre_execution_webhook_api_v1_dsr_webhook_pre_approval__webhook_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "webhook_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Webhook Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Create Privacy Request",
        "description": "Given a list of privacy request data elements, create corresponding PrivacyRequest objects\nor report failure and execute them within the Fidesops system.\nYou cannot update privacy requests after they've been created.",
        "operationId": "create_privacy_request_api_v1_privacy_request_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PrivacyRequestCreate"
                },
                "maxItems": 50,
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPostPrivacyRequests"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Request Status",
        "description": "**This endpoint is deprecated. Please use `POST /privacy-request/search`,\nwhich uses body parameters instead of query parameters for filtering.**\n\nReturns PrivacyRequest information. Supports a variety of optional query params.\n\nTo fetch a single privacy request, use the request_id query param `?request_id=`.\nTo see individual execution logs, use the verbose query param `?verbose=True`.",
        "operationId": "get_request_status_api_v1_privacy_request_get",
        "deprecated": true,
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Request Id"
            }
          },
          {
            "name": "identity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Identity"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivacyRequestStatus"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "fuzzy_search_str",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fuzzy Search Str"
            }
          },
          {
            "name": "created_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Lt"
            }
          },
          {
            "name": "created_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created Gt"
            }
          },
          {
            "name": "started_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Started Lt"
            }
          },
          {
            "name": "started_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Started Gt"
            }
          },
          {
            "name": "completed_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed Lt"
            }
          },
          {
            "name": "completed_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed Gt"
            }
          },
          {
            "name": "errored_lt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Errored Lt"
            }
          },
          {
            "name": "errored_gt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Errored Gt"
            }
          },
          {
            "name": "external_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "External Id"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ActionType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action Type"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Verbose"
            }
          },
          {
            "name": "include_identities",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Include Identities"
            }
          },
          {
            "name": "include_custom_privacy_request_fields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Include Custom Privacy Request Fields"
            }
          },
          {
            "name": "download_csv",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Download Csv"
            }
          },
          {
            "name": "include_deleted_requests",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Include Deleted Requests"
            }
          },
          {
            "name": "sort_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort Field"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ColumnSort"
                }
              ],
              "default": "desc",
              "title": "Sort Direction"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Union_PrivacyRequestVerboseResponse__PrivacyRequestResponse__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/authenticated": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Create Privacy Request Authenticated",
        "description": "Given a list of privacy request data elements, create corresponding PrivacyRequest objects\nor report failure and execute them within the Fidesops system.\nYou cannot update privacy requests after they've been created.\nThis route requires authentication instead of using verification codes.",
        "operationId": "create_privacy_request_authenticated_api_v1_privacy_request_authenticated_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/PrivacyRequestCreate"
                },
                "type": "array",
                "maxItems": 50,
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPostPrivacyRequests"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:create"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/search": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Privacy Request Search",
        "description": "Returns PrivacyRequest information. Supports a variety of optional filter parameters.\n\nTo see individual execution logs, set `\"verbose\": true`.",
        "operationId": "privacy_request_search_api_v1_privacy_request_search_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PrivacyRequestFilter"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Privacy Request Filter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Union_PrivacyRequestVerboseResponse__PrivacyRequestResponse__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/log": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Request Status Logs",
        "description": "Returns all the execution logs associated with a given privacy request ordered by updated asc.",
        "operationId": "get_request_status_logs_api_v1_privacy_request__privacy_request_id__log_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ExecutionLogDetailResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/notification": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Privacy Request Notification Info",
        "description": "Retrieve privacy request notification email addresses and number of failures to trigger notifications.",
        "operationId": "get_privacy_request_notification_info_api_v1_privacy_request_notification_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestNotificationInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-notifications:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Create Or Update Privacy Request Notifications",
        "description": "Create or update list of email addresses and number of failures for privacy request notifications.",
        "operationId": "create_or_update_privacy_request_notifications_api_v1_privacy_request_notification_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyRequestNotificationInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestNotificationInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-notifications:create_or_update"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/preview": {
      "put": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Request Preview Queries",
        "description": "Returns dry run queries given a list of dataset ids.  If a dataset references another dataset, both dataset\nkeys must be in the request body.",
        "operationId": "get_request_preview_queries_api_v1_privacy_request_preview_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Dataset Keys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DryRunDatasetResponse"
                  },
                  "type": "array",
                  "title": "Response Get Request Preview Queries Api V1 Privacy Request Preview Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/resume": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Resume Privacy Request",
        "description": "Resume running a privacy request after it was paused by a Pre-Execution webhook",
        "operationId": "resume_privacy_request_api_v1_privacy_request__privacy_request_id__resume_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacyRequestResumeFormat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/bulk/retry": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Bulk Restart Privacy Request From Failure",
        "description": "Bulk restart a of privacy request from failure.",
        "operationId": "bulk_restart_privacy_request_from_failure_api_v1_privacy_request_bulk_retry_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Privacy Request Ids"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPostPrivacyRequests"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/retry": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Restart Privacy Request From Failure",
        "description": "Restart a privacy request from failure",
        "operationId": "restart_privacy_request_from_failure_api_v1_privacy_request__privacy_request_id__retry_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/verify": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Verify Identification Code",
        "description": "Verify the supplied identity verification code.\n\nIf successful, and we don't need a separate manual request approval, queue the privacy request\nfor execution.\n\nFires pre-approval webhooks if configured.",
        "operationId": "verify_identification_code_api_v1_privacy_request__privacy_request_id__verify_post",
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/administrate/approve": {
      "patch": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Approve Privacy Request",
        "description": "Approve and dispatch a list of privacy requests and/or report failure",
        "operationId": "approve_privacy_request_api_v1_privacy_request_administrate_approve_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPrivacyRequestIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/administrate/deny": {
      "patch": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Deny Privacy Request",
        "description": "Deny a list of privacy requests and/or report failure",
        "operationId": "deny_privacy_request_api_v1_privacy_request_administrate_deny_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DenyPrivacyRequests"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/pre-approve/eligible": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Mark Privacy Request Pre Approve Eligible",
        "description": "Marks privacy request as eligible for automatic approval.\nIf all webhook responses have been received and all are affirmative, proceed to queue privacy request",
        "operationId": "mark_privacy_request_pre_approve_eligible_api_v1_privacy_request__privacy_request_id__pre_approve_eligible_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/pre-approve/not-eligible": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Mark Privacy Request Pre Approve Not Eligible",
        "description": "Marks privacy request as not eligible for automatic approval, regardless of what other webhook responses we receive",
        "operationId": "mark_privacy_request_pre_approve_not_eligible_api_v1_privacy_request__privacy_request_id__pre_approve_not_eligible_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/access_manual_webhook/{connection_key}": {
      "patch": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Upload Manual Webhook Access Data",
        "description": "Upload manual access input for the privacy request for the fields defined on the access manual webhook.\nThe data collected here is not included in the graph but uploaded directly to the user at the end\nof privacy request execution.\n\nBecause a 'manual_webhook' ConnectionConfig has one AccessManualWebhook associated with it,\nwe are using the ConnectionConfig key as the AccessManualWebhook identifier here.",
        "operationId": "upload_manual_webhook_access_data_api_v1_privacy_request__privacy_request_id__access_manual_webhook__connection_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:upload_data"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Input Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "View Uploaded Manual Webhook Data",
        "description": "View uploaded data for this privacy request for the given access manual webhook\n\nIf no data exists for this webhook, we just return all fields as None.\nIf we have missing or extra fields saved, we'll just return the overlap between what is saved and what is defined on the webhook.\n\nIf checked=False, data must be reviewed before submission. The privacy request should not be submitted as-is.",
        "operationId": "view_uploaded_manual_webhook_data_api_v1_privacy_request__privacy_request_id__access_manual_webhook__connection_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:view_data"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ManualWebhookData"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response View Uploaded Manual Webhook Data Api V1 Privacy Request  Privacy Request Id  Access Manual Webhook  Connection Key  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/erasure_manual_webhook/{connection_key}": {
      "patch": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Upload Manual Webhook Erasure Data",
        "description": "Upload manual erasure input for the privacy request for the fields defined on the access manual webhook.\n\nBecause a 'manual_webhook' ConnectionConfig has one AccessManualWebhook associated with it,\nwe are using the ConnectionConfig key as the AccessManualWebhook identifier here.",
        "operationId": "upload_manual_webhook_erasure_data_api_v1_privacy_request__privacy_request_id__erasure_manual_webhook__connection_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:upload_data"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Input Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "View Uploaded Erasure Manual Webhook Data",
        "description": "View uploaded erasure data for this privacy request for the given manual webhook\n\nIf no data exists for this webhook, we just return all fields as None.\nIf we have missing or extra fields saved, we'll just return the overlap between what is saved and what is defined on the webhook.\n\nIf checked=False, data must be reviewed before submission. The privacy request should not be submitted as-is.",
        "operationId": "view_uploaded_erasure_manual_webhook_data_api_v1_privacy_request__privacy_request_id__erasure_manual_webhook__connection_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:view_data"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ManualWebhookData"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response View Uploaded Erasure Manual Webhook Data Api V1 Privacy Request  Privacy Request Id  Erasure Manual Webhook  Connection Key  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/transfer/{privacy_request_id}/{rule_key}": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Privacy Request Data Transfer",
        "description": "Transfer access request information to the parent server.",
        "operationId": "privacy_request_data_transfer_api_v1_privacy_request_transfer__privacy_request_id___rule_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:transfer"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          },
          {
            "name": "rule_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Rule Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "title": "Response Privacy Request Data Transfer Api V1 Privacy Request Transfer  Privacy Request Id   Rule Key  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/resume_from_requires_input": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Resume Privacy Request From Requires Input",
        "description": "Resume a privacy request from 'requires_input' status.",
        "operationId": "resume_privacy_request_from_requires_input_api_v1_privacy_request__privacy_request_id__resume_from_requires_input_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/finalize": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Finalize Privacy Request",
        "description": "Finalizes a privacy request, moving it from the 'requires_finalization' state to 'complete'.\nThis is done by re-queueing the request, which will then hit the finalization logic in the\nrequest runner service. This logic marks the privacy request as complete\nand sends out any configured messaging to the user.",
        "operationId": "finalize_privacy_request_api_v1_privacy_request__privacy_request_id__finalize_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:review"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/tasks": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Individual Privacy Request Tasks",
        "description": "Returns individual Privacy Request Tasks created by DSR 3.0 scheduler\nin order by creation and collection address",
        "operationId": "get_individual_privacy_request_tasks_api_v1_privacy_request__privacy_request_id__tasks_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivacyRequestTaskSchema"
                  },
                  "title": "Response Get Individual Privacy Request Tasks Api V1 Privacy Request  Privacy Request Id  Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/requeue": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Requeue Privacy Request",
        "description": "Endpoint for manually re-queuing a stuck Privacy Request from selected states - use with caution.\n\nDon't use this unless the Privacy Request is stuck.",
        "operationId": "requeue_privacy_request_api_v1_privacy_request__privacy_request_id__requeue_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request-task/callback": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Request Task Async Callback",
        "description": "For DSR 3.0: Async Callback Endpoint for Request Tasks\n\nRe-queues Request Task with asynchronously-retrieved results.  If you don't want to supply results, hitting\nthis endpoint with an empty json request body will be taken as verification the async or erasure request\nfor this request task is complete.",
        "operationId": "request_task_async_callback_api_v1_request_task_callback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaskCallbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Request Task Async Callback Api V1 Request Task Callback Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:resume"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/bulk/soft-delete": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Bulk Soft Delete Privacy Requests",
        "description": "Soft delete a list of privacy requests. The requests' deleted_at field will be populated with the current datetime\nand its deleted_by field will be populated with the user_id of the user who initiated the deletion. Returns an\nobject with the list of successfully deleted privacy requests and the list of failed deletions.",
        "operationId": "bulk_soft_delete_privacy_requests_api_v1_privacy_request_bulk_soft_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPrivacyRequestIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkSoftDeletePrivacyRequests"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:delete"
            ]
          }
        ]
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/soft-delete": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Soft Delete Privacy Request",
        "description": "Endpoint for soft deleting a privacy request. The request's deleted_at field will be populated with the current datetime\nand its deleted_by field will be populated with the user_id of the user who initiated the deletion.",
        "operationId": "soft_delete_privacy_request_api_v1_privacy_request__privacy_request_id__soft_delete_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/access-results": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Access Results Urls",
        "description": "Endpoint for retrieving access results URLs for a privacy request.",
        "operationId": "get_access_results_urls_api_v1_privacy_request__privacy_request_id__access_results_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-access-results:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestAccessResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/filtered-results": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Test Privacy Request Results",
        "description": "Get filtered results for a test privacy request and update its status if complete.",
        "operationId": "get_test_privacy_request_results_api_v1_privacy_request__privacy_request_id__filtered_results_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-access-results:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredPrivacyRequestResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/resubmit": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Resubmit Privacy Request",
        "operationId": "resubmit_privacy_request_api_v1_privacy_request__privacy_request_id__resubmit_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request:create"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/{privacy_request_id}/logs": {
      "get": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Get Test Privacy Request Logs",
        "description": "Get logs for a test privacy request.",
        "operationId": "get_test_privacy_request_logs_api_v1_privacy_request__privacy_request_id__logs_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-access-results:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "privacy_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Privacy Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "title": "Response Get Test Privacy Request Logs Api V1 Privacy Request  Privacy Request Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/privacy-request/administrate/process-awaiting-email-send": {
      "post": {
        "tags": [
          "Privacy Requests"
        ],
        "summary": "Send Batch Email Integrations",
        "description": "Send batch email integrations for a privacy request.",
        "operationId": "send_batch_email_integrations_api_v1_privacy_request_administrate_process_awaiting_email_send_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "privacy-request-email-integrations:send"
            ]
          }
        ]
      }
    },
    "/api/v1/id-verification/config": {
      "get": {
        "tags": [
          "Identity Verification"
        ],
        "summary": "Get Id Verification Config",
        "description": "Returns id verification config.",
        "operationId": "get_id_verification_config_api_v1_id_verification_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerificationConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/{request_id}": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Upload Data",
        "description": "Uploads data from an access request to specified storage destination.\nReturns location of data.",
        "operationId": "upload_data_api_v1_storage__request_id__post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_data_api_v1_storage__request_id__post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUpload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/config": {
      "patch": {
        "tags": [
          "Storage"
        ],
        "summary": "Patch Config",
        "description": "Given a list of storage destination elements, create or update corresponding StorageConfig objects\nor report failure.",
        "operationId": "patch_config_api_v1_storage_config_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDestination"
                },
                "maxItems": 50,
                "title": "Storage Configs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutStorageConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Configs",
        "description": "Retrieves configs for storage.",
        "operationId": "get_configs_api_v1_storage_config_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_StorageDestinationResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/config/{config_key}/secret": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "Put Config Secrets",
        "description": "Add or update secrets for storage config.",
        "operationId": "put_config_secrets_api_v1_storage_config__config_key__secret_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Verify"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/StorageSecretsS3Docs"
                  },
                  {
                    "$ref": "#/components/schemas/StorageSecretsGCSDocs"
                  }
                ],
                "title": "Unvalidated Storage Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/config/{config_key}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Config By Key",
        "description": "Retrieves configs for storage by key.",
        "operationId": "get_config_by_key_api_v1_storage_config__config_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDestinationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "summary": "Delete Config By Key",
        "description": "Deletes configs by key.",
        "operationId": "delete_config_by_key_api_v1_storage_config__config_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/default/active": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Active Default Config",
        "description": "Retrieves the active default storage config.",
        "operationId": "get_active_default_config_api_v1_storage_default_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDestinationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ]
      }
    },
    "/api/v1/storage/default/status": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Storage Status",
        "description": "Determines the status of the active default storage config.\n\nIn order to be considered fully configured, the active default storage\nconfig MUST be an s3 storage config.",
        "operationId": "get_storage_status_api_v1_storage_default_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageConfigStatusMessage"
                },
                "example": {
                  "config_status": "configured",
                  "detail": "Active default storage location of type s3 is fully configured"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ]
      }
    },
    "/api/v1/storage/default": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "Put Default Config",
        "description": "Create or update the default storage configuration for the given storage type",
        "operationId": "put_default_config_api_v1_storage_default_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDestinationBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDestinationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Default Configs",
        "description": "Retrieves default configs for each storage types.",
        "operationId": "get_default_configs_api_v1_storage_default_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_StorageDestinationResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/default/{storage_type}/secret": {
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "Put Default Config Secrets",
        "description": "Add or update secrets for the default storage config of the given type",
        "operationId": "put_default_config_secrets_api_v1_storage_default__storage_type__secret_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "storage_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StorageType"
            }
          },
          {
            "name": "verify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": true,
              "title": "Verify"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/StorageSecretsS3Docs"
                  },
                  {
                    "$ref": "#/components/schemas/StorageSecretsGCSDocs"
                  }
                ],
                "title": "Unvalidated Storage Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/storage/default/{storage_type}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Default Config By Type",
        "description": "Retrieves default config for given storage type.",
        "operationId": "get_default_config_by_type_api_v1_storage_default__storage_type__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "storage:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "storage_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StorageType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDestinationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/config": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Post Config",
        "description": "Given a messaging config, create corresponding MessagingConfig object, provided no config already exists",
        "operationId": "post_config_api_v1_messaging_config_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Configs",
        "description": "Retrieves configs for messaging.",
        "operationId": "get_configs_api_v1_messaging_config_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_MessagingConfigResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/config/{config_key}": {
      "patch": {
        "tags": [
          "Messaging"
        ],
        "summary": "Patch Config By Key",
        "description": "Updates config for messaging by key, provided config with key can be found.",
        "operationId": "patch_config_by_key_api_v1_messaging_config__config_key__patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Config By Key",
        "description": "Retrieves configs for messaging service by key.",
        "operationId": "get_config_by_key_api_v1_messaging_config__config_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Messaging"
        ],
        "summary": "Delete Config By Key",
        "description": "Deletes messaging configs by key.",
        "operationId": "delete_config_by_key_api_v1_messaging_config__config_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/default/active": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Active Default Config",
        "description": "Retrieves the active default messaging config.",
        "operationId": "get_active_default_config_api_v1_messaging_default_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:read"
            ]
          }
        ]
      }
    },
    "/api/v1/messaging/default/status": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Messaging Status",
        "description": "Determines the status of the active default messaging config",
        "operationId": "get_messaging_status_api_v1_messaging_default_status_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "messaging_method",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MessagingMethod"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Messaging Method"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigStatusMessage"
                },
                "example": {
                  "config_status": "configured",
                  "detail": "Active default messaging service of type mailgun is fully configured"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/default": {
      "put": {
        "tags": [
          "Messaging"
        ],
        "summary": "Put Default Config",
        "description": "Updates default messaging config for given service type.",
        "operationId": "put_default_config_api_v1_messaging_default_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingConfigRequestBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ]
      }
    },
    "/api/v1/messaging/default/{service_type}/secret": {
      "put": {
        "tags": [
          "Messaging"
        ],
        "summary": "Put Default Config Secrets",
        "operationId": "put_default_config_secrets_api_v1_messaging_default__service_type__secret_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "service_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MessagingServiceType"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/MessagingSecretsMailgunDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingSecretsTwilioSMSDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingSecretsTwilioEmailDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingServiceSecretsMailchimpTransactionalDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingServiceSecretsAWS_SESDocs"
                  }
                ],
                "title": "Unvalidated Messaging Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestMessagingStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/config/{config_key}/secret": {
      "put": {
        "tags": [
          "Messaging"
        ],
        "summary": "Put Config Secrets",
        "description": "Add or update secrets for messaging config.",
        "operationId": "put_config_secrets_api_v1_messaging_config__config_key__secret_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "config_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Config Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/MessagingSecretsMailgunDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingSecretsTwilioSMSDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingSecretsTwilioEmailDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingServiceSecretsMailchimpTransactionalDocs"
                  },
                  {
                    "$ref": "#/components/schemas/MessagingServiceSecretsAWS_SESDocs"
                  }
                ],
                "title": "Unvalidated Messaging Secrets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestMessagingStatusMessage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/default/{service_type}": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Default Config By Type",
        "description": "Retrieves default config for messaging service by type.",
        "operationId": "get_default_config_by_type_api_v1_messaging_default__service_type__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "service_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MessagingServiceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/config/test": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Send Test Message",
        "description": "Sends a test message.",
        "operationId": "send_test_message_api_v1_messaging_config_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Send Test Message Api V1 Messaging Config Test Post"
                },
                "example": {
                  "details": "Test message successfully sent"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging:create_or_update"
            ]
          }
        ]
      }
    },
    "/api/v1/messaging/templates": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Basic Messaging Templates",
        "description": "Returns the available messaging templates, augments the models with labels to be used in the UI.",
        "operationId": "get_basic_messaging_templates_api_v1_messaging_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BasicMessagingTemplateResponse"
                  },
                  "type": "array",
                  "title": "Response Get Basic Messaging Templates Api V1 Messaging Templates Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging-template:update"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Messaging"
        ],
        "summary": "Update Basic Messaging Templates",
        "description": "Updates the messaging templates and reverts empty subject or body values to the default values.",
        "operationId": "update_basic_messaging_templates_api_v1_messaging_templates_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/BasicMessagingTemplateRequest"
                },
                "type": "array",
                "title": "Templates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkPutBasicMessagingTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging-template:update"
            ]
          }
        ]
      }
    },
    "/api/v1/messaging/templates/default/{template_type}": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Default Messaging Template",
        "description": "Retrieves default messaging template by template type.",
        "operationId": "get_default_messaging_template_api_v1_messaging_templates_default__template_type__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging-template:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "template_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MessagingActionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingTemplateDefault"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/templates/{template_id}": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Messaging Template By Id",
        "description": "Retrieves messaging template by template tid.",
        "operationId": "get_messaging_template_by_id_api_v1_messaging_templates__template_id__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging-template:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingTemplateWithPropertiesDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Messaging"
        ],
        "summary": "Delete Messaging Template By Id",
        "description": "Deletes messaging template by template id.",
        "operationId": "delete_messaging_template_by_id_api_v1_messaging_templates__template_id__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "messaging-template:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messaging/email-invite/status": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "User Email Invite Status",
        "description": "Returns whether or not all the necessary configurations are in place to be able to invite a user via email.",
        "operationId": "user_email_invite_status_api_v1_messaging_email_invite_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmailInviteStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/validate_saas_config": {
      "put": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Validate Saas Config",
        "description": "Uses the SaaSConfig Pydantic model to validate the SaaS config\nwithout attempting to save it to the database.\n\nChecks that:\n- all required fields are present, all field values are valid types\n- each connector_param only has one of references or identity, not both",
        "operationId": "validate_saas_config_api_v1_connection__connection_key__validate_saas_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaaSConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSaaSConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "saas_config:read"
            ]
          }
        ]
      }
    },
    "/api/v1/connection/{connection_key}/saas_config": {
      "patch": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Patch Saas Config",
        "description": "Given a SaaS config element, update the corresponding ConnectionConfig object\nor report failure",
        "operationId": "patch_saas_config_api_v1_connection__connection_key__saas_config_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "saas_config:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaaSConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaaSConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Get Saas Config",
        "description": "Returns the SaaS config for the given connection config.",
        "operationId": "get_saas_config_api_v1_connection__connection_key__saas_config_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "saas_config:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaaSConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Delete Saas Config",
        "description": "Removes the SaaS config for the given connection config.\nThe corresponding dataset and secrets must be deleted before deleting the SaaS config",
        "operationId": "delete_saas_config_api_v1_connection__connection_key__saas_config_delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "saas_config:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/authorize": {
      "get": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Authorize Connection",
        "description": "Returns the authorization URL for the SaaS Connector (if available)",
        "operationId": "authorize_connection_api_v1_connection__connection_key__authorize_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:authorize"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Authorize Connection Api V1 Connection  Connection Key  Authorize Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/instantiate/{saas_connector_type}": {
      "post": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Instantiate Connection From Template",
        "operationId": "instantiate_connection_from_template_api_v1_connection_instantiate__saas_connector_type__post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connection:instantiate"
            ]
          }
        ],
        "parameters": [
          {
            "name": "saas_connector_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Saas Connector Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasConnectionTemplateValues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasConnectionTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connector_template/register": {
      "post": {
        "tags": [
          "SaaS Configs"
        ],
        "summary": "Register Custom Connector Template",
        "description": "Registers a custom connector template from a zip file uploaded by the user.\nThe endpoint performs the following steps:\n\n1. Validates the uploaded file is a proper zip file.\n2. Uses the CustomConnectorTemplateLoader to validate, register, and save the template to the database.\n\nIf the uploaded file is not a valid zip file or there are any validation errors\nwhen creating the ConnectorTemplates an HTTP 400 status code with error details is returned.",
        "operationId": "register_custom_connector_template_api_v1_connector_template_register_post",
        "requestBody": {
          "content": {
            "application/zip": {
              "schema": {
                "type": "string",
                "format": "binary",
                "title": "File"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "connector_template:register"
            ]
          }
        ]
      }
    },
    "/api/v1/dataset/partitions/verify": {
      "post": {
        "tags": [
          "Partitions"
        ],
        "summary": "Verify dataset partitioning schemas",
        "description": "Validate the provided partitioning specs and return the rendered SQL WHERE clauses in the BigQuery dialect.",
        "operationId": "Verify_dataset_partitioning_schemas_api_v1_dataset_partitions_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/TimeBasedPartitioning"
                },
                "type": "array",
                "title": "Partitions"
              },
              "examples": {
                "recent_data_weekly": {
                  "summary": "Recent data partitioned weekly",
                  "description": "Partition the last 30 days of data into weekly chunks",
                  "value": [
                    {
                      "field": "created_at",
                      "start": "NOW() - 30 DAYS",
                      "end": "NOW()",
                      "interval": "7 DAYS"
                    }
                  ]
                },
                "historical_data_monthly": {
                  "summary": "Historical data partitioned monthly",
                  "description": "Partition a specific year of data into monthly chunks",
                  "value": [
                    {
                      "field": "order_date",
                      "start": "2024-01-01",
                      "end": "2024-12-31",
                      "interval": "1 MONTH"
                    }
                  ]
                },
                "multiple_partitions": {
                  "summary": "Multiple time ranges",
                  "description": "Combine historical monthly data with recent daily data",
                  "value": [
                    {
                      "field": "event_timestamp",
                      "start": "2023-01-01",
                      "end": "2023-12-31",
                      "interval": "1 MONTH"
                    },
                    {
                      "field": "event_timestamp",
                      "start": "NOW() - 14 DAYS",
                      "end": "NOW()",
                      "interval": "1 DAY"
                    }
                  ]
                },
                "open_ended_partition": {
                  "summary": "Open-ended partition",
                  "description": "Partition all data from a specific date onwards",
                  "value": [
                    {
                      "field": "user_created_at",
                      "start": "2024-01-01"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Verify Dataset Partitioning Schemas Api V1 Dataset Partitions Verify Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:read"
            ]
          }
        ]
      }
    },
    "/api/v1/user/{user_id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update a user given a `user_id`. If the user is not updating their own data,\nthey need the user:update scope",
        "operationId": "update_user_api_v1_user__user_id__put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Deletes the User and associated ClientDetail if applicable.",
        "operationId": "delete_user_api_v1_user__user_id__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "user:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Returns a User based on an Id. Users with user:read-own scope can only access their own data. Users with user:read can access other's data.",
        "operationId": "get_user_api_v1_user__user_id__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{user_id}/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Password",
        "description": "Update a user's password given a `user_id`. By default this is limited to users\nupdating their own data.",
        "operationId": "update_user_password_api_v1_user__user_id__reset_password_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{user_id}/force-reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Force Update Password",
        "description": "Update any user's password given a `user_id` without needing to know the user's\nprevious password.",
        "operationId": "force_update_password_api_v1_user__user_id__force_reset_password_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "user:password-reset"
            ]
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForcePasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User Logout",
        "description": "Logout the user by deleting its client where applicable",
        "operationId": "user_logout_api_v1_logout_post",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ]
      }
    },
    "/api/v1/user/{user_id}/system-manager": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Managed Systems",
        "description": "Endpoint to override the systems for which a user is \"system manager\".\nAll systems the user manages are replaced with those in the request body.",
        "operationId": "update_managed_systems_api_v1_user__user_id__system_manager_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system_manager:update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Systems"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/System"
                  },
                  "title": "Response Update Managed Systems Api V1 User  User Id  System Manager Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Managed Systems",
        "description": "Endpoint to retrieve all the systems for which a user is \"system manager\".",
        "operationId": "get_managed_systems_api_v1_user__user_id__system_manager_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/System"
                  },
                  "title": "Response Get Managed Systems Api V1 User  User Id  System Manager Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{user_id}/system-manager/{system_key}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Managed System Details",
        "description": "Endpoint to retrieve a single system managed by the given user.",
        "operationId": "get_managed_system_details_api_v1_user__user_id__system_manager__system_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "system_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "System Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove User As System Manager",
        "description": "Endpoint to remove user as system manager from the given system",
        "operationId": "remove_user_as_system_manager_api_v1_user__user_id__system_manager__system_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "system_manager:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "system_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "System Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Create a user given a username and password.\nIf `password` is sent as a base64 encoded string, it will automatically be decoded\nserver-side before being encrypted and persisted.\nIf `password` is sent as a plaintext string, it will be encrypted and persisted as is.\n\nThe user is given no roles by default.",
        "operationId": "create_user_api_v1_user_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "user:create"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Returns a paginated list of users. Users with USER_READ_OWN scope only see their own data.",
        "operationId": "get_users_api_v1_user_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Username"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_UserResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User Login",
        "description": "Login the user by creating a client if it doesn't exist, and have that client\ngenerate a token.",
        "operationId": "user_login_api_v1_login_post",
        "parameters": [
          {
            "name": "config_path_override",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Config Path Override"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Verbose"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/accept-invite": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Accept User Invite",
        "description": "Sets the password and enables the user if a valid username and invite code are provided.",
        "operationId": "accept_user_invite_api_v1_user_accept_invite_post",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "invite_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invite Code"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForcePasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{user_id}/permission": {
      "post": {
        "tags": [
          "User Permissions"
        ],
        "summary": "Create User Permissions",
        "description": "Create user permissions with associated roles.",
        "operationId": "create_user_permissions_api_v1_user__user_id__permission_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "user-permission:create"
            ]
          },
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionsCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Permissions"
        ],
        "summary": "Update User Permissions",
        "description": "Update a user's role(s).  The UI assigns one role at a time, but multiple\nroles are technically supported.\n\nUsers inherit numerous scopes that are associated with their role(s).",
        "operationId": "update_user_permissions_api_v1_user__user_id__permission_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "user-permission:update"
            ]
          },
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionsEdit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Permissions"
        ],
        "summary": "Get User Permissions",
        "operationId": "get_user_permissions_api_v1_user__user_id__permission_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connection/{connection_key}/access_manual_webhook": {
      "post": {
        "tags": [
          "Manual Webhooks"
        ],
        "summary": "Create Access Manual Webhook",
        "description": "Create an Access Manual Webhook to describe the fields that should be manually uploaded and passed directly to the user",
        "operationId": "create_access_manual_webhook_api_v1_connection__connection_key__access_manual_webhook_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessManualWebhooks"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessManualWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Manual Webhooks"
        ],
        "summary": "Patch Access Manual Webhook",
        "description": "Updates the AccessManualWebhook associated with this ConnectionConfig",
        "operationId": "patch_access_manual_webhook_api_v1_connection__connection_key__access_manual_webhook_patch",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:create_or_update"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessManualWebhooks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessManualWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Manual Webhooks"
        ],
        "summary": "Get Access Manual Webhook",
        "description": "Gets the Access Manual Webhook associated with this ConnectionConfig.",
        "operationId": "get_access_manual_webhook_api_v1_connection__connection_key__access_manual_webhook_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessManualWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manual Webhooks"
        ],
        "summary": "Delete Access Manual Webhook",
        "description": "Deletes the AccessManualWebhook associated with this ConnectionConfig if it exists.",
        "operationId": "delete_access_manual_webhook_api_v1_connection__connection_key__access_manual_webhook_delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connection_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access_manual_webhook": {
      "get": {
        "tags": [
          "Manual Webhooks"
        ],
        "summary": "Get Access Manual Webhooks",
        "description": "Get all enabled Access Manual Webhooks",
        "operationId": "get_access_manual_webhooks_api_v1_access_manual_webhook_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AccessManualWebhookResponse"
                  },
                  "type": "array",
                  "title": "Response Get Access Manual Webhooks Api V1 Access Manual Webhook Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "webhook:read"
            ]
          }
        ]
      }
    },
    "/api/v1/registration": {
      "get": {
        "tags": [
          "Registration"
        ],
        "summary": "Get Registration Status",
        "description": "Return the registration status of this Fides deployment.",
        "operationId": "get_registration_status_api_v1_registration_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrationStatusResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Registration"
        ],
        "summary": "Update Registration Status",
        "description": "Return the registration status of this Fides deployment.",
        "operationId": "update_registration_status_api_v1_registration_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/worker-stats": {
      "get": {
        "tags": [
          "Worker Stats"
        ],
        "summary": "Get Worker Stats",
        "description": "Get statistics about Celery queues and workers.\n\nReturns information about task queues and worker states in the Celery system:\n- Queue statistics: Number of pending tasks in each Redis-backed queue\n- Worker statistics: Current state of each Celery worker including:\n    - Active task: Currently executing task, if any\n    - Reserved tasks: Tasks reserved by a worker but not yet started\n    - Registered tasks: Tasks this worker is configured to accept",
        "operationId": "get_worker_stats_api_v1_worker_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkerStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "worker-stats:read"
            ]
          }
        ]
      }
    },
    "/api/v1/admin/db/{action}": {
      "post": {
        "tags": [
          "Admin",
          "Admin"
        ],
        "summary": "Db Action",
        "description": "Initiate one of the enumerated DBActions.\n\nNOTE: Database downgrades are _not_ guaranteed to succeed, and may put your application\ninto an unrecoverable state. They should be invoked with caution. Only downgrade with\nexplicit guidance from Ethyca support.",
        "operationId": "db_action_api_v1_admin_db__action__post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "database:reset"
            ]
          }
        ],
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DBActions"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "head",
              "title": "Revision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Db Action Api V1 Admin Db  Action  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health/database": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Database Health",
        "description": "Confirm that the API is running and healthy.",
        "operationId": "database_health_health_database_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthCheck"
                },
                "example": {
                  "database": "healthy"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "database": "unhealthy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/workers": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Workers Health",
        "description": "Confirm that the API is running and healthy.",
        "operationId": "workers_health_health_workers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkerHealthCheck"
                },
                "example": {
                  "workers_enabled": "True",
                  "workers": [
                    "celery@c606808353b5"
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "workers_enabled": "True",
                    "workers": [
                      "celery@c606808353b5"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health",
        "description": "Confirm that the API is running and healthy.",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreHealthCheck"
                },
                "example": {
                  "webserver": "healthy",
                  "version": "1.0.0",
                  "cache": "healthy"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "webserver": "healthy",
                    "version": "1.0.0",
                    "cache": "unhealthy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset",
        "operationId": "Create_dataset_api_v1_dataset_post",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:create"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dataset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dataset"
        ],
        "summary": "Update Dataset",
        "description": "Update an existing dataset",
        "operationId": "Update_dataset_api_v1_dataset_put",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:update"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dataset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dataset"
        ],
        "summary": "List Datasets (Optionally Paginated)",
        "description": "Get a list of all of the Datasets.\nIf any pagination parameters (size or page) are provided, then the response will be paginated.\nOtherwise all Datasets will be returned (this may be a slow operation if there are many datasets,\nso using the pagination parameters is recommended).\nProvided filters (search, data_categories, exclude_saas_datasets, only_unlinked_datasets) will be applied,\nreturning only the datasets that match ALL of the filters.",
        "operationId": "List_datasets__optionally_paginated__api_v1_dataset_get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "data_categories",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Categories"
            }
          },
          {
            "name": "exclude_saas_datasets",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Exclude Saas Datasets"
            }
          },
          {
            "name": "only_unlinked_datasets",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Only Unlinked Datasets"
            }
          },
          {
            "name": "connection_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConnectionType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connection Type"
            }
          },
          {
            "name": "minimal",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Page_DatasetResponse_"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DatasetResponse"
                      }
                    }
                  ],
                  "title": "Response List Datasets  Optionally Paginated  Api V1 Dataset Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/{fides_key}": {
      "get": {
        "tags": [
          "Dataset"
        ],
        "summary": "Get Dataset",
        "description": "Get a single dataset by fides key",
        "operationId": "Get_dataset_api_v1_dataset__fides_key__get",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dataset"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a dataset by fides key",
        "operationId": "Delete_dataset_api_v1_dataset__fides_key__delete",
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:delete"
            ]
          }
        ],
        "parameters": [
          {
            "name": "fides_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Fides Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/upsert": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Upsert Datasets",
        "description": "For any dataset in `datasets` that already exists in the database,\nupdate the dataset by its `fides_key`. Otherwise, create a new dataset.\n\nResponds with a `201 Created` if even a single dataset in `datasets`\ndid not previously exist. Otherwise, responds with a `200 OK`.",
        "operationId": "upsert_datasets_api_v1_dataset_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Dataset"
                },
                "type": "array",
                "title": "Datasets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upsert Datasets Api V1 Dataset Upsert Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:create",
              "ctl_dataset:update"
            ]
          }
        ]
      }
    },
    "/api/v1/dataset/clean": {
      "get": {
        "tags": [
          "Dataset"
        ],
        "summary": "Clean Datasets",
        "description": "Clean up names of datasets and upsert them.",
        "operationId": "clean_datasets_api_v1_dataset_clean_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Dataset"
                  },
                  "type": "array",
                  "title": "Response Clean Datasets Api V1 Dataset Clean Get"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "OAuth2ClientCredentialsBearer": [
              "ctl_dataset:read"
            ]
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "Default"
        ],
        "summary": "Read Index",
        "description": "Return an index.html at the root path",
        "operationId": "read_index__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/{catchall}": {
      "get": {
        "tags": [
          "Default"
        ],
        "summary": "Read Other Paths",
        "description": "Return related frontend files. Adapted from https://github.com/tiangolo/fastapi/issues/130",
        "operationId": "read_other_paths__catchall__get",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AWSAuthMethod": {
        "type": "string",
        "enum": [
          "automatic",
          "secret_keys"
        ],
        "title": "AWSAuthMethod"
      },
      "AWSConfig": {
        "properties": {
          "region_name": {
            "type": "string",
            "title": "Region Name"
          },
          "aws_secret_access_key": {
            "type": "string",
            "title": "Aws Secret Access Key"
          },
          "aws_access_key_id": {
            "type": "string",
            "title": "Aws Access Key Id"
          },
          "aws_session_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Session Token"
          }
        },
        "type": "object",
        "required": [
          "region_name",
          "aws_secret_access_key",
          "aws_access_key_id"
        ],
        "title": "AWSConfig",
        "description": "The model for the connection config for AWS"
      },
      "AccessLevel": {
        "type": "string",
        "enum": [
          "read",
          "write"
        ],
        "title": "AccessLevel",
        "description": "Perms given to the ConnectionConfig.  For example, with \"read\" permissions, fidesops promises\nto not modify the data on a connected application database in any way.\n\n\"Write\" perms mean we can update/delete items in the connected database."
      },
      "AccessManualWebhookResponse": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ManualWebhookField"
            },
            "type": "array",
            "minItems": 1,
            "title": "Fields"
          },
          "connection_config": {
            "$ref": "#/components/schemas/ConnectionConfigurationResponse"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "fields",
          "connection_config",
          "id"
        ],
        "title": "AccessManualWebhookResponse",
        "description": "Expected response for accessing Access Manual Webhooks"
      },
      "AccessManualWebhooks": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ManualWebhookField"
            },
            "type": "array",
            "minItems": 1,
            "title": "Fields"
          }
        },
        "type": "object",
        "required": [
          "fields"
        ],
        "title": "AccessManualWebhooks",
        "description": "Expected request body for creating Access Manual Webhooks"
      },
      "AccessToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "AccessToken",
        "description": "A wrapper for the access_code returned upon successful authentication"
      },
      "ActionType": {
        "type": "string",
        "enum": [
          "access",
          "consent",
          "erasure",
          "update"
        ],
        "title": "ActionType",
        "description": "The purpose of a particular privacy request"
      },
      "AdminUIConfig": {
        "properties": {
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "error_notification_mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ErrorNotificationMode"
              },
              {
                "type": "null"
              }
            ],
            "default": "console_only"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "AdminUIConfig"
      },
      "AdvancedSettings": {
        "properties": {
          "identity_types": {
            "$ref": "#/components/schemas/IdentityTypes"
          }
        },
        "type": "object",
        "required": [
          "identity_types"
        ],
        "title": "AdvancedSettings"
      },
      "AdvancedSettingsWithExtendedIdentityTypes": {
        "properties": {
          "identity_types": {
            "$ref": "#/components/schemas/ExtendedIdentityTypes"
          }
        },
        "type": "object",
        "required": [
          "identity_types"
        ],
        "title": "AdvancedSettingsWithExtendedIdentityTypes",
        "description": "Overrides base AdvancedSettings to have extended IdentityTypes"
      },
      "AesDecryptionRequest": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "nonce": {
            "type": "string",
            "title": "Nonce"
          }
        },
        "type": "object",
        "required": [
          "value",
          "key",
          "nonce"
        ],
        "title": "AesDecryptionRequest",
        "description": "Specifies fields provided to the AES Decryption endpoint"
      },
      "AesDecryptionResponse": {
        "properties": {
          "decrypted_value": {
            "type": "string",
            "title": "Decrypted Value"
          }
        },
        "type": "object",
        "required": [
          "decrypted_value"
        ],
        "title": "AesDecryptionResponse",
        "description": "Specified fields returned from the AES Decryption endpoint"
      },
      "AesEncryptionRequest": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "value",
          "key"
        ],
        "title": "AesEncryptionRequest",
        "description": "Specifies fields provided to the AES Encryption endpoint"
      },
      "AesEncryptionResponse": {
        "properties": {
          "encrypted_value": {
            "type": "string",
            "title": "Encrypted Value"
          },
          "nonce": {
            "type": "string",
            "title": "Nonce"
          }
        },
        "type": "object",
        "required": [
          "encrypted_value",
          "nonce"
        ],
        "title": "AesEncryptionResponse",
        "description": "Specifies fields returned from the AES Encryption endpoint"
      },
      "ApplicationConfig": {
        "properties": {
          "storage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageApplicationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "notifications": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NotificationApplicationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExecutionApplicationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "security": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SecurityApplicationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "consent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConsentConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "admin_ui": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AdminUIConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "privacy_center": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyCenterConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ApplicationConfig",
        "description": "Application config settings update body is an arbitrary dict (JSON object)\nWe describe it in a schema to enforce some restrictions on the keys passed.\n\nTODO: Eventually this should be driven by a more formal validation schema for this\nthe application config that is properly hooked up to the global pydantic config module."
      },
      "AsyncConfig": {
        "properties": {
          "strategy": {
            "$ref": "#/components/schemas/AsyncStrategy"
          }
        },
        "type": "object",
        "required": [
          "strategy"
        ],
        "title": "AsyncConfig",
        "description": "Async config only has strategy for now, but could be\nextended with other configuration options when we add polling"
      },
      "AsyncStrategy": {
        "type": "string",
        "enum": [
          "callback"
        ],
        "const": "callback",
        "title": "AsyncStrategy",
        "description": "Async strategies: supports callback for now, but could be\nextended to polling as well in the future"
      },
      "AuditLogAction": {
        "type": "string",
        "enum": [
          "approved",
          "denied",
          "email_sent",
          "finished"
        ],
        "title": "AuditLogAction",
        "description": "Enum for audit log actions, reflecting what a user did."
      },
      "BasicMessagingTemplateRequest": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "content": {
            "type": "object",
            "title": "Content",
            "examples": [
              {
                "body": "Custom message body",
                "subject": "Message subject"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "content"
        ],
        "title": "BasicMessagingTemplateRequest"
      },
      "BasicMessagingTemplateResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "content": {
            "type": "object",
            "title": "Content",
            "examples": [
              {
                "body": "Custom message body",
                "subject": "Message subject"
              }
            ]
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "type",
          "content",
          "label"
        ],
        "title": "BasicMessagingTemplateResponse"
      },
      "BasicSystemResponse": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "An optional property to store any extra information for a resource. Data can be structured in any way: simple set of `key: value` pairs or deeply nested objects."
          },
          "fidesctl_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The SystemMetadata resource model.\n\n    Object used to hold application specific metadata for a system\n    "
          },
          "system_type": {
            "type": "string",
            "title": "System Type",
            "description": "A required value to describe the type of system being modeled, examples include: Service, Application, Third Party, etc."
          },
          "egress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Egress",
            "description": "The resources to which the system sends data."
          },
          "ingress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress",
            "description": "The resources from which the system receives data."
          },
          "privacy_declarations": {
            "items": {
              "$ref": "#/components/schemas/PrivacyDeclaration"
            },
            "type": "array",
            "title": "Privacy Declarations",
            "description": "\n    The PrivacyDeclaration resource model.\n\n    States a function of a system, and describes how it relates\n    to the privacy data types.\n    "
          },
          "administrating_department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Administrating Department",
            "description": "An optional value to identify the owning department or group of the system within your organization",
            "default": "Not defined"
          },
          "vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Id",
            "description": "The unique identifier for the vendor that's associated with this system."
          },
          "previous_vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Vendor Id",
            "description": "If specified, the unique identifier for the vendor that was previously associated with this system."
          },
          "vendor_deleted_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Deleted Date",
            "description": "The deleted date of the vendor that's associated with this system."
          },
          "dataset_references": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dataset References",
            "description": "Referenced Dataset fides keys used by the system."
          },
          "processes_personal_data": {
            "type": "boolean",
            "title": "Processes Personal Data",
            "description": "This toggle indicates whether the system stores or processes personal data.",
            "default": true
          },
          "exempt_from_privacy_regulations": {
            "type": "boolean",
            "title": "Exempt From Privacy Regulations",
            "description": "This toggle indicates whether the system is exempt from privacy regulation if they do process personal data.",
            "default": false
          },
          "reason_for_exemption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason For Exemption",
            "description": "The reason that the system is exempt from privacy regulation."
          },
          "uses_profiling": {
            "type": "boolean",
            "title": "Uses Profiling",
            "description": "Whether the vendor uses data to profile a consumer in a way that has a legal effect.",
            "default": false
          },
          "legal_basis_for_profiling": {
            "items": {
              "$ref": "#/components/schemas/LegalBasisForProfilingEnum"
            },
            "type": "array",
            "title": "Legal Basis For Profiling",
            "description": "The legal basis (or bases) for performing profiling that has a legal effect."
          },
          "does_international_transfers": {
            "type": "boolean",
            "title": "Does International Transfers",
            "description": "Whether this system transfers data to other countries or international organizations.",
            "default": false
          },
          "legal_basis_for_transfers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Legal Basis For Transfers",
            "description": "The legal basis (or bases) under which the data is transferred."
          },
          "requires_data_protection_assessments": {
            "type": "boolean",
            "title": "Requires Data Protection Assessments",
            "description": "Whether this system requires data protection impact assessments.",
            "default": false
          },
          "dpa_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Location",
            "description": "Location where the DPAs or DIPAs can be found."
          },
          "dpa_progress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Progress",
            "description": "The optional status of a Data Protection Impact Assessment"
          },
          "privacy_policy": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privacy Policy",
            "description": "A URL that points to the system's publicly accessible privacy policy."
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name",
            "description": "The legal name for the business represented by the system."
          },
          "legal_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Address",
            "description": "The legal address for the business represented by the system."
          },
          "responsibility": {
            "items": {
              "$ref": "#/components/schemas/DataResponsibilityTitle"
            },
            "type": "array",
            "title": "Responsibility",
            "description": "\n    The model defining the responsibility or role over\n    the system that processes personal data.\n\n    Used to identify whether the organization is a\n    Controller, Processor, or Sub-Processor of the data\n    "
          },
          "dpo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpo",
            "description": "The official privacy contact address or DPO."
          },
          "joint_controller_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joint Controller Info",
            "description": "The party or parties that share the responsibility for processing personal data."
          },
          "data_security_practices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Security Practices",
            "description": "The data security practices employed by this system."
          },
          "cookie_max_age_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cookie Max Age Seconds",
            "description": "The maximum storage duration, in seconds, for cookies used by this system."
          },
          "uses_cookies": {
            "type": "boolean",
            "title": "Uses Cookies",
            "description": "Whether this system uses cookie storage.",
            "default": false
          },
          "cookie_refresh": {
            "type": "boolean",
            "title": "Cookie Refresh",
            "description": "Whether the system's cookies are refreshed after being initially set.",
            "default": false
          },
          "uses_non_cookie_access": {
            "type": "boolean",
            "title": "Uses Non Cookie Access",
            "description": "Whether the system uses non-cookie methods of storage or accessing information stored on a user's device.",
            "default": false
          },
          "legitimate_interest_disclosure_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legitimate Interest Disclosure Url",
            "description": "A URL that points to the system's publicly accessible legitimate interest disclosure."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "system_type",
          "privacy_declarations",
          "created_at"
        ],
        "title": "BasicSystemResponse",
        "description": "Extension of base pydantic model to include additional fields on the DB model that\nare relevant in API responses.\n\nThis is still meant to be a \"lightweight\" model that does not reference relationships\nthat may require additional querying beyond the `System` db table."
      },
      "BigQueryConfig": {
        "properties": {
          "dataset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset"
          },
          "keyfile_creds": {
            "$ref": "#/components/schemas/fides__connectors__models__KeyfileCreds"
          }
        },
        "type": "object",
        "required": [
          "keyfile_creds"
        ],
        "title": "BigQueryConfig",
        "description": "The model for the connection config for BigQuery"
      },
      "BigQueryDocsSchema": {
        "properties": {
          "keyfile_creds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fides__api__schemas__connection_configuration__connection_secrets_bigquery__KeyfileCreds"
              }
            ],
            "title": "Keyfile creds",
            "description": "The contents of the key file that contains authentication credentials for a service account in GCP.",
            "sensitive": true
          },
          "dataset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset",
            "description": "Only provide a dataset to scope discovery monitors and privacy request automation to a specific BigQuery dataset. In most cases, this can be left blank."
          }
        },
        "type": "object",
        "required": [
          "keyfile_creds"
        ],
        "title": "BigQueryDocsSchema",
        "description": "BigQuery Secrets Schema for API Docs"
      },
      "Body_acquire_access_token_api_v1_oauth_token_post": {
        "properties": {
          "grant_type": {
            "type": "string",
            "pattern": "client_credentials",
            "title": "Grant Type"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "title": "Body_acquire_access_token_api_v1_oauth_token_post"
      },
      "Body_upload_data_api_v1_storage__request_id__post": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          },
          "storage_key": {
            "type": "string",
            "title": "Storage Key"
          }
        },
        "type": "object",
        "required": [
          "data",
          "storage_key"
        ],
        "title": "Body_upload_data_api_v1_storage__request_id__post"
      },
      "BulkPostPrivacyRequests": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/PrivacyRequestResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPostPrivacyRequests",
        "description": "Schema with mixed success/failure responses for Bulk Create of PrivacyRequest responses."
      },
      "BulkPutBasicMessagingTemplateResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/BasicMessagingTemplateResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutBasicMessagingTemplateResponse"
      },
      "BulkPutConnectionConfiguration": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/ConnectionConfigurationResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutConnectionConfiguration",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of ConnectionConfiguration responses."
      },
      "BulkPutDataset": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutDataset",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of Datasets."
      },
      "BulkPutPolicyResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/PolicyResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutPolicyResponse",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of Policy responses."
      },
      "BulkPutRuleResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/RuleResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutRuleResponse",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of Rule responses."
      },
      "BulkPutRuleTargetResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/RuleTarget"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkPutRuleTargetResponse",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of RuleTarget responses."
      },
      "BulkPutStorageConfigResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/StorageDestinationResponse"
            },
            "type": "array",
            "title": "Succeeded",
            "default": []
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed",
            "default": []
          }
        },
        "type": "object",
        "title": "BulkPutStorageConfigResponse",
        "description": "Schema with mixed success/failure responses for Bulk Create/Update of StorageConfig."
      },
      "BulkReviewResponse": {
        "properties": {
          "succeeded": {
            "items": {
              "$ref": "#/components/schemas/PrivacyRequestResponse"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkReviewResponse",
        "description": "Schema with mixed success/failure responses for Bulk Approve/Deny of PrivacyRequest responses."
      },
      "BulkSoftDeletePrivacyRequests": {
        "properties": {
          "succeeded": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Succeeded"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/BulkUpdateFailed"
            },
            "type": "array",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "succeeded",
          "failed"
        ],
        "title": "BulkSoftDeletePrivacyRequests"
      },
      "BulkUpdateFailed": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "message",
          "data"
        ],
        "title": "BulkUpdateFailed",
        "description": "Schema for use when Bulk Create/Update fails."
      },
      "CheckpointActionRequiredDetails": {
        "properties": {
          "step": {
            "$ref": "#/components/schemas/CurrentStep"
          },
          "collection": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection"
          },
          "action_needed": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ManualAction"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Needed"
          }
        },
        "type": "object",
        "required": [
          "step"
        ],
        "title": "CheckpointActionRequiredDetails"
      },
      "ClientConfig": {
        "properties": {
          "protocol": {
            "type": "string",
            "title": "Protocol"
          },
          "host": {
            "type": "string",
            "title": "Host"
          },
          "authentication": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Strategy"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "protocol",
          "host"
        ],
        "title": "ClientConfig",
        "description": "Definition for an authenticated base HTTP client"
      },
      "ClientCreatedResponse": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret"
        ],
        "title": "ClientCreatedResponse",
        "description": "Response schema for client creation"
      },
      "CollectionAddressResponse": {
        "properties": {
          "dataset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset"
          },
          "collection": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection"
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "collection"
        ],
        "title": "CollectionAddressResponse",
        "description": "Schema for the representation of a collection in the graph"
      },
      "CollectionMeta": {
        "properties": {
          "after": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "After"
          },
          "erase_after": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Erase After"
          },
          "skip_processing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Processing",
            "default": false
          },
          "masking_strategy_override": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MaskingStrategyOverride"
              },
              {
                "type": "null"
              }
            ]
          },
          "partitioning": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partitioning"
          }
        },
        "type": "object",
        "title": "CollectionMeta",
        "description": "Collection-level specific annotations used for query traversal"
      },
      "ColumnSort": {
        "type": "string",
        "enum": [
          "desc",
          "asc"
        ],
        "title": "ColumnSort"
      },
      "ConnectionCategory": {
        "type": "string",
        "enum": [
          "DATA_CATALOG",
          "DATA_WAREHOUSE",
          "DATABASE",
          "IDENTITY_PROVIDER",
          "WEBSITE",
          "CRM",
          "MANUAL",
          "MARKETING",
          "ANALYTICS",
          "ECOMMERCE",
          "COMMUNICATION",
          "CUSTOM"
        ],
        "title": "ConnectionCategory",
        "description": "Categories for connection types, matching frontend ConnectionCategory enum"
      },
      "ConnectionConfigurationResponse": {
        "properties": {
          "connection_type": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "secrets": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secrets"
          },
          "saas_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSConfigBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "access": {
            "$ref": "#/components/schemas/AccessLevel"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled",
            "default": false
          },
          "last_test_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Test Timestamp"
          },
          "last_test_succeeded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Test Succeeded"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized",
            "default": false
          },
          "enabled_actions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Actions"
          }
        },
        "type": "object",
        "required": [
          "connection_type",
          "key",
          "access",
          "created_at"
        ],
        "title": "ConnectionConfigurationResponse",
        "description": "Describes the returned schema for a ConnectionConfiguration."
      },
      "ConnectionConfigurationResponseWithSystemKey": {
        "properties": {
          "connection_type": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "secrets": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secrets"
          },
          "saas_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSConfigBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "access": {
            "$ref": "#/components/schemas/AccessLevel"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled",
            "default": false
          },
          "last_test_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Test Timestamp"
          },
          "last_test_succeeded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Test Succeeded"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized",
            "default": false
          },
          "enabled_actions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Actions"
          },
          "system_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Key"
          }
        },
        "type": "object",
        "required": [
          "connection_type",
          "key",
          "access",
          "created_at"
        ],
        "title": "ConnectionConfigurationResponseWithSystemKey",
        "description": "Describes the full returned schema for a ConnectionConfiguration."
      },
      "ConnectionSystemTypeMap": {
        "properties": {
          "identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionType"
              },
              {
                "type": "string"
              }
            ],
            "title": "Identifier"
          },
          "type": {
            "$ref": "#/components/schemas/SystemType"
          },
          "human_readable": {
            "type": "string",
            "title": "Human Readable"
          },
          "encoded_icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encoded Icon"
          },
          "authorization_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorization Required",
            "default": false
          },
          "user_guide": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Guide"
          },
          "supported_actions": {
            "items": {
              "$ref": "#/components/schemas/ActionType"
            },
            "type": "array",
            "title": "Supported Actions"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "enabled_features": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IntegrationFeature"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Features"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "type",
          "human_readable",
          "supported_actions"
        ],
        "title": "ConnectionSystemTypeMap",
        "description": "Describes the returned schema for connection types"
      },
      "ConnectionTestStatus": {
        "type": "string",
        "enum": [
          "succeeded",
          "failed",
          "skipped"
        ],
        "title": "ConnectionTestStatus",
        "description": "Enum for supplying statuses of validating credentials for a Connection Config to the user"
      },
      "ConnectionType": {
        "type": "string",
        "enum": [
          "attentive_email",
          "bigquery",
          "datahub",
          "dynamodb",
          "fides",
          "generic_consent_email",
          "generic_erasure_email",
          "dynamic_erasure_email",
          "google_cloud_sql_mysql",
          "google_cloud_sql_postgres",
          "https",
          "manual",
          "manual_webhook",
          "manual_task",
          "mariadb",
          "mongodb",
          "mssql",
          "mysql",
          "okta",
          "postgres",
          "rds_mysql",
          "rds_postgres",
          "redshift",
          "s3",
          "saas",
          "scylla",
          "snowflake",
          "sovrn",
          "timescale",
          "website",
          "test_website"
        ],
        "title": "ConnectionType",
        "description": "Supported types to which we can connect Fides."
      },
      "ConnectorParam": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "options": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          },
          "default_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "integer"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Value"
          },
          "multiselect": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multiselect",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sensitive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sensitive",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ConnectorParam",
        "description": "Used to define the required parameters for the connector (user and constants)"
      },
      "Consent": {
        "properties": {
          "data_use": {
            "type": "string",
            "title": "Data Use"
          },
          "data_use_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Use Description"
          },
          "opt_in": {
            "type": "boolean",
            "title": "Opt In"
          },
          "has_gpc_flag": {
            "type": "boolean",
            "title": "Has Gpc Flag",
            "default": false
          },
          "conflicts_with_gpc": {
            "type": "boolean",
            "title": "Conflicts With Gpc",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "data_use",
          "opt_in"
        ],
        "title": "Consent",
        "description": "Deprecated: This used to be populated and sent to the server by a `config.json` in the UI"
      },
      "ConsentConfig": {
        "properties": {
          "override_vendor_purposes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Vendor Purposes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "override_vendor_purposes"
        ],
        "title": "ConsentConfig"
      },
      "ConsentPreferences": {
        "properties": {
          "consent": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Consent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consent"
          }
        },
        "type": "object",
        "title": "ConsentPreferences",
        "description": "Schema for consent preferences."
      },
      "ConsentPreferencesWithVerificationCode": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "consent": {
            "items": {
              "$ref": "#/components/schemas/Consent"
            },
            "type": "array",
            "title": "Consent"
          },
          "policy_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Policy Key"
          },
          "executable_options": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ConsentWithExecutableStatus"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executable Options"
          },
          "browser_identity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "consent"
        ],
        "title": "ConsentPreferencesWithVerificationCode",
        "description": "Schema for consent preferences including the verification code."
      },
      "ConsentReport": {
        "properties": {
          "data_use": {
            "type": "string",
            "title": "Data Use"
          },
          "data_use_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Use Description"
          },
          "opt_in": {
            "type": "boolean",
            "title": "Opt In"
          },
          "has_gpc_flag": {
            "type": "boolean",
            "title": "Has Gpc Flag",
            "default": false
          },
          "conflicts_with_gpc": {
            "type": "boolean",
            "title": "Conflicts With Gpc",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "identity": {
            "$ref": "#/components/schemas/Identity"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "data_use",
          "opt_in",
          "id",
          "identity",
          "created_at",
          "updated_at"
        ],
        "title": "ConsentReport",
        "description": "Keeps record of each of the preferences that have been recorded via ConsentReporting endpoints."
      },
      "ConsentRequestCreate": {
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity"
          },
          "custom_privacy_request_fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/CustomPrivacyRequestField"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields"
          },
          "property_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Property Id"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestSource"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "identity"
        ],
        "title": "ConsentRequestCreate",
        "description": "Data required to create a consent PrivacyRequest"
      },
      "ConsentRequestMap": {
        "properties": {
          "opt_in": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSRequest"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/SaaSRequest"
                },
                "type": "array"
              }
            ],
            "title": "Opt In",
            "default": []
          },
          "opt_out": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSRequest"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/SaaSRequest"
                },
                "type": "array"
              }
            ],
            "title": "Opt Out",
            "default": []
          }
        },
        "type": "object",
        "title": "ConsentRequestMap",
        "description": "A map of actions to Consent requests"
      },
      "ConsentRequestResponse": {
        "properties": {
          "consent_request_id": {
            "type": "string",
            "title": "Consent Request Id"
          }
        },
        "type": "object",
        "required": [
          "consent_request_id"
        ],
        "title": "ConsentRequestResponse",
        "description": "Schema for consent request response."
      },
      "ConsentWithExecutableStatus": {
        "properties": {
          "data_use": {
            "type": "string",
            "title": "Data Use"
          },
          "executable": {
            "type": "boolean",
            "title": "Executable"
          }
        },
        "type": "object",
        "required": [
          "data_use",
          "executable"
        ],
        "title": "ConsentWithExecutableStatus",
        "description": "Schema for executable consents"
      },
      "ContactDetails": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "An individual name used as part of publishing contact information. Encrypted at rest on the server.",
            "default": ""
          },
          "address": {
            "type": "string",
            "title": "Address",
            "description": "An individual address used as part of publishing contact information. Encrypted at rest on the server.",
            "default": ""
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "An individual email used as part of publishing contact information. Encrypted at rest on the server.",
            "default": ""
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "description": "An individual phone number used as part of publishing contact information. Encrypted at rest on the server.",
            "default": ""
          }
        },
        "type": "object",
        "title": "ContactDetails",
        "description": "The contact details information model.\n\nUsed to capture contact information for controllers, used\nas part of exporting a data map / ROPA.\n\nThis model is nested under an Organization and\npotentially under a system/dataset."
      },
      "CoreHealthCheck": {
        "properties": {
          "webserver": {
            "type": "string",
            "title": "Webserver"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "cache": {
            "type": "string",
            "enum": [
              "healthy",
              "unhealthy",
              "no cache configured"
            ],
            "title": "Cache"
          }
        },
        "type": "object",
        "required": [
          "webserver",
          "version",
          "cache"
        ],
        "title": "CoreHealthCheck",
        "description": "Server Healthcheck schema"
      },
      "CreateConnectionConfigurationWithSecrets": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "connection_type": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "access": {
            "$ref": "#/components/schemas/AccessLevel"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled",
            "default": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "secrets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BigQueryDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DatahubDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DynamicErasureEmailDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DynamoDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/EmailDocsSchema"
              },
              {
                "$ref": "#/components/schemas/FidesDocsSchema"
              },
              {
                "$ref": "#/components/schemas/GoogleCloudSQLMySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/GoogleCloudSQLPostgresDocsSchema"
              },
              {
                "$ref": "#/components/schemas/ManualWebhookDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MariaDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MongoDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MSSQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/OktaDocsSchema"
              },
              {
                "$ref": "#/components/schemas/PostgreSQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RDSMySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RDSPostgresDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RedshiftDocsSchema"
              },
              {
                "$ref": "#/components/schemas/S3DocsSchema"
              },
              {
                "$ref": "#/components/schemas/SaaSSchema"
              },
              {
                "$ref": "#/components/schemas/ScyllaDocsSchema"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDocsSchema"
              },
              {
                "$ref": "#/components/schemas/SovrnDocsSchema"
              },
              {
                "$ref": "#/components/schemas/TimescaleDocsSchema"
              },
              {
                "$ref": "#/components/schemas/WebsiteSchema"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secrets"
          },
          "saas_connector_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saas Connector Type"
          }
        },
        "type": "object",
        "required": [
          "connection_type",
          "access"
        ],
        "title": "CreateConnectionConfigurationWithSecrets",
        "description": "Schema for creating a connection configuration including secrets."
      },
      "CurrentStep": {
        "type": "string",
        "enum": [
          "pre_webhooks",
          "access",
          "upload_access",
          "erasure",
          "finalize_erasure",
          "consent",
          "finalize_consent",
          "email_post_send",
          "post_webhooks",
          "finalization"
        ],
        "title": "CurrentStep"
      },
      "CustomPrivacyRequestField": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "label",
          "value"
        ],
        "title": "CustomPrivacyRequestField",
        "description": "Schema for custom privacy request fields."
      },
      "DBActions": {
        "type": "string",
        "enum": [
          "upgrade",
          "reset",
          "downgrade"
        ],
        "title": "DBActions",
        "description": "The available path parameters for the `/admin/db/{action}` endpoint."
      },
      "DataCategory": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "parent_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Key"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Indicates whether the resource is currently 'active'.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "fides_key"
        ],
        "title": "DataCategory"
      },
      "DataCategoryCreateOrUpdate": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fides Key"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization_fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Fides Key",
            "default": "default_organization"
          },
          "parent_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Key"
          }
        },
        "type": "object",
        "title": "DataCategoryCreateOrUpdate"
      },
      "DataFlow": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "Identifies the System or Dataset resource with which the communication occurs. May also be 'user', to represent communication with the user(s) of a System."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Specifies the resource model class for which the `fides_key` applies. May be any of dataset, system, user."
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories",
            "description": "An array of data categories describing the data in transit."
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "type"
        ],
        "title": "DataFlow",
        "description": "The DataFlow resource model.\n\nDescribes a resource model with which a given System resource communicates."
      },
      "DataResponsibilityTitle": {
        "type": "string",
        "enum": [
          "Controller",
          "Processor",
          "Sub-Processor"
        ],
        "title": "DataResponsibilityTitle",
        "description": "The model defining the responsibility or role over\nthe system that processes personal data.\n\nUsed to identify whether the organization is a\nController, Processor, or Sub-Processor of the data"
      },
      "DataSubject": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "rights": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataSubjectRights"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The DataSubjectRights resource model.\n\n    Includes a strategy and optionally a\n    list of data subject rights to apply\n    via the set strategy.\n    "
          },
          "automated_decisions_or_profiling": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Automated Decisions Or Profiling",
            "description": "A boolean value to annotate whether or not automated decisions/profiling exists for the data subject."
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Indicates whether the resource is currently 'active'.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "fides_key"
        ],
        "title": "DataSubject"
      },
      "DataSubjectCreateOrUpdate": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fides Key"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization_fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Fides Key",
            "default": "default_organization"
          },
          "rights": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataSubjectRights"
              },
              {
                "type": "null"
              }
            ]
          },
          "automated_decisions_or_profiling": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Automated Decisions Or Profiling"
          }
        },
        "type": "object",
        "title": "DataSubjectCreateOrUpdate"
      },
      "DataSubjectRights": {
        "properties": {
          "strategy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IncludeExcludeEnum"
              }
            ],
            "description": "Defines the strategy used when mapping data rights to a data subject."
          },
          "values": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataSubjectRightsEnum"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values",
            "description": "A list of valid data subject rights to be used when applying data rights to a data subject via a strategy."
          }
        },
        "type": "object",
        "required": [
          "strategy"
        ],
        "title": "DataSubjectRights",
        "description": "The DataSubjectRights resource model.\n\nIncludes a strategy and optionally a\nlist of data subject rights to apply\nvia the set strategy."
      },
      "DataSubjectRightsEnum": {
        "type": "string",
        "enum": [
          "Informed",
          "Access",
          "Rectification",
          "Erasure",
          "Portability",
          "Restrict Processing",
          "Withdraw Consent",
          "Object",
          "Object to Automated Processing"
        ],
        "title": "DataSubjectRightsEnum",
        "description": "The model for data subject rights over\npersonal data.\n\nBased upon chapter 3 of the GDPR"
      },
      "DataUpload": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "location"
        ],
        "title": "DataUpload",
        "description": "A wrapper for the data upload location returned upon successful upload"
      },
      "DataUse": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "parent_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Key"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Indicates whether the resource is currently 'active'.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "fides_key"
        ],
        "title": "DataUse"
      },
      "DataUseCreateOrUpdate": {
        "properties": {
          "version_added": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Added",
            "description": "The version of Fideslang in which this label was added."
          },
          "version_deprecated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Deprecated",
            "description": "The version of Fideslang in which this label was deprecated."
          },
          "replaced_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replaced By",
            "description": "The new name, if applicable, for this label after deprecation."
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Denotes whether the resource is part of the default taxonomy or not.",
            "default": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active",
            "default": true
          },
          "fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fides Key"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization_fides_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Fides Key",
            "default": "default_organization"
          },
          "parent_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Key"
          }
        },
        "type": "object",
        "title": "DataUseCreateOrUpdate"
      },
      "DatabaseConfig": {
        "properties": {
          "connection_string": {
            "type": "string",
            "title": "Connection String"
          }
        },
        "type": "object",
        "required": [
          "connection_string"
        ],
        "title": "DatabaseConfig",
        "description": "The model for the connection config for databases"
      },
      "DatabaseHealthCheck": {
        "properties": {
          "database": {
            "type": "string",
            "title": "Database"
          },
          "database_revision": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database Revision"
          }
        },
        "type": "object",
        "required": [
          "database"
        ],
        "title": "DatabaseHealthCheck",
        "description": "Database Healthcheck Schema"
      },
      "DatahubDocsSchema": {
        "properties": {
          "datahub_server_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "DataHub server URL",
            "description": "The URL of your DataHub server."
          },
          "datahub_token": {
            "type": "string",
            "title": "DataHub token",
            "description": "The token used to authenticate with your DataHub server.",
            "sensitive": true
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PeriodicIntegrationFrequency"
              }
            ],
            "title": "Frequency",
            "description": "The frequency at which the integration should run. Available options are daily, weekly, monthly, and not scheduled."
          },
          "glossary_node": {
            "type": "string",
            "title": "Glossary node",
            "description": "The glossary node name to use on Datahub for Fides Data Categories. (e.g. FidesDataCategories)"
          }
        },
        "type": "object",
        "required": [
          "datahub_server_url",
          "datahub_token",
          "frequency",
          "glossary_node"
        ],
        "title": "DatahubDocsSchema",
        "description": "Datahub Schema for API docs."
      },
      "Dataset": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "An optional property to store any extra information for a resource. Data can be structured in any way: simple set of `key: value` pairs or deeply nested objects."
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories",
            "description": "Array of Data Category resources identified by `fides_key`, that apply to all collections in the Dataset."
          },
          "fides_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatasetMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The DatasetMetadata resource model.\n\n    Object used to hold application specific metadata for a dataset\n    "
          },
          "collections": {
            "items": {
              "$ref": "#/components/schemas/DatasetCollection"
            },
            "type": "array",
            "title": "Collections",
            "description": "An array of objects that describe the Dataset's collections."
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "collections"
        ],
        "title": "Dataset",
        "description": "The Dataset resource model."
      },
      "DatasetCollection": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories",
            "description": "Array of Data Category resources identified by `fides_key`, that apply to all fields in the collection."
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DatasetField"
            },
            "type": "array",
            "title": "Fields",
            "description": "An array of objects that describe the collection's fields."
          },
          "fides_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CollectionMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "fields"
        ],
        "title": "DatasetCollection",
        "description": "The DatasetCollection resource model.\n\nThis resource is nested within a Dataset."
      },
      "DatasetConfigCtlDataset": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key"
          },
          "ctl_dataset_fides_key": {
            "type": "string",
            "title": "Ctl Dataset Fides Key"
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "ctl_dataset_fides_key"
        ],
        "title": "DatasetConfigCtlDataset"
      },
      "DatasetConfigSchema": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key"
          },
          "ctl_dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "ctl_dataset"
        ],
        "title": "DatasetConfigSchema",
        "description": "Returns the DatasetConfig fides key and the linked Ctl Dataset"
      },
      "DatasetField": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories",
            "description": "Arrays of Data Categories, identified by `fides_key`, that applies to this field."
          },
          "fides_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FidesMeta"
              },
              {
                "type": "null"
              }
            ]
          },
          "fields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetField"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields",
            "description": "An optional array of objects that describe hierarchical/nested fields (typically found in NoSQL databases)."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetField",
        "description": "The DatasetField resource model.\n\nThis resource is nested within a DatasetCollection."
      },
      "DatasetMetadata": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "after": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "After"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace"
          }
        },
        "type": "object",
        "title": "DatasetMetadata",
        "description": "The DatasetMetadata resource model.\n\nObject used to hold application specific metadata for a dataset"
      },
      "DatasetReachability": {
        "properties": {
          "reachable": {
            "type": "boolean",
            "title": "Reachable"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "reachable",
          "details"
        ],
        "title": "DatasetReachability",
        "description": "Response containing reachability details for a single dataset"
      },
      "DatasetResponse": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "An optional property to store any extra information for a resource. Data can be structured in any way: simple set of `key: value` pairs or deeply nested objects."
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories",
            "description": "Array of Data Category resources identified by `fides_key`, that apply to all collections in the Dataset."
          },
          "fides_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatasetMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The DatasetMetadata resource model.\n\n    Object used to hold application specific metadata for a dataset\n    "
          },
          "collections": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatasetCollection"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collections",
            "description": "An array of objects that describe the Dataset's collections."
          }
        },
        "type": "object",
        "required": [
          "fides_key"
        ],
        "title": "DatasetResponse",
        "description": "Dataset response model for API endpoints.\n\nNote: This class extends the Dataset model from fideslang rather than having a proper\ndedicated API response model. We had to make the collections field\nOptional and allow null values to support the minimal=true parameter in API responses,\neven though collections is required in the base fideslang Dataset model."
      },
      "DatasetTestRequest": {
        "properties": {
          "policy_key": {
            "type": "string",
            "title": "Policy Key"
          },
          "identities": {
            "$ref": "#/components/schemas/UnlabeledIdentities"
          }
        },
        "type": "object",
        "required": [
          "policy_key",
          "identities"
        ],
        "title": "DatasetTestRequest",
        "description": "The policy key and inputs required to run a dataset test."
      },
      "DatasetTraversalDetails": {
        "properties": {
          "is_traversable": {
            "type": "boolean",
            "title": "Is Traversable"
          },
          "msg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Msg"
          }
        },
        "type": "object",
        "required": [
          "is_traversable",
          "msg"
        ],
        "title": "DatasetTraversalDetails",
        "description": "Describes whether or not the parent dataset is traversable; if not, includes\nan error message describing the traversal issues."
      },
      "DenyPrivacyRequests": {
        "properties": {
          "request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Request Ids"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "request_ids"
        ],
        "title": "DenyPrivacyRequests",
        "description": "Pass in a list of privacy request ids and rejection reason"
      },
      "DrpAction": {
        "type": "string",
        "enum": [
          "access",
          "deletion",
          "sale:opt_out",
          "sale:opt_in",
          "access:categories",
          "access:specific"
        ],
        "title": "DrpAction",
        "description": "Enum to hold valid DRP actions. For more details, see:\nhttps://github.com/consumer-reports-digital-lab/data-rights-protocol#301-supported-rights-actions"
      },
      "DrpDataRightsResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "api_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Base"
          },
          "actions": {
            "items": {
              "$ref": "#/components/schemas/DrpAction"
            },
            "type": "array",
            "title": "Actions"
          },
          "user_relationships": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Relationships"
          }
        },
        "type": "object",
        "required": [
          "version",
          "actions"
        ],
        "title": "DrpDataRightsResponse",
        "description": "Drp data rights response"
      },
      "DrpMeta": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "DrpMeta",
        "description": "Enum to hold Drp metadata. Only version is supported at this time"
      },
      "DrpPrivacyRequestCreate": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/DrpMeta"
          },
          "regime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DrpRegime"
              },
              {
                "type": "null"
              }
            ]
          },
          "exercise": {
            "items": {
              "$ref": "#/components/schemas/DrpAction"
            },
            "type": "array",
            "title": "Exercise"
          },
          "relationships": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relationships"
          },
          "identity": {
            "type": "string",
            "title": "Identity"
          },
          "status_callback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Callback"
          }
        },
        "type": "object",
        "required": [
          "meta",
          "exercise",
          "identity"
        ],
        "title": "DrpPrivacyRequestCreate",
        "description": "Data required to create a DRP PrivacyRequest"
      },
      "DrpRegime": {
        "type": "string",
        "enum": [
          "ccpa"
        ],
        "const": "ccpa",
        "title": "DrpRegime",
        "description": "Enum to hold Drp Regime. Only ccpa supported at this time"
      },
      "DrpRevokeRequest": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "request_id"
        ],
        "title": "DrpRevokeRequest",
        "description": "DRP Data Rights Revoke Request Body"
      },
      "DryRunDatasetResponse": {
        "properties": {
          "collectionAddress": {
            "$ref": "#/components/schemas/CollectionAddressResponse"
          },
          "query": {
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "collectionAddress",
          "query"
        ],
        "title": "DryRunDatasetResponse",
        "description": "Response model for dataset dry run"
      },
      "DynamicErasureEmailDocsSchema": {
        "properties": {
          "test_email_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Email Address"
          },
          "advanced_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedSettings"
              }
            ],
            "default": {
              "identity_types": {
                "email": true,
                "phone_number": false
              }
            }
          },
          "third_party_vendor_name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FidesDatasetReference"
              }
            ],
            "title": "Third party vendor name field",
            "description": "Dataset reference to the field containing the third party vendor name. Both third_party_vendor_name and recipient_email_address must reference the same dataset and collection.",
            "external_reference": true
          },
          "recipient_email_address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FidesDatasetReference"
              }
            ],
            "title": "Recipient email address field",
            "description": "Dataset reference to the field containing the recipient email address. Both third_party_vendor_name and recipient_email_address must reference the same dataset and collection.",
            "external_reference": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "third_party_vendor_name",
          "recipient_email_address"
        ],
        "title": "DynamicErasureEmailDocsSchema",
        "description": "DynamicErasureEmailDocsSchema Secrets Schema for API Docs"
      },
      "DynamoDBDocsSchema": {
        "properties": {
          "auth_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AWSAuthMethod"
              }
            ],
            "title": "Authentication Method",
            "description": "Determines which type of authentication method to use for connecting to Amazon Web Services. Currently accepted values are: `secret_keys` or `automatic`."
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Key ID",
            "description": "Part of the credentials that provide access to your AWS account."
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Access Key",
            "description": "Part of the credentials that provide access to your AWS account.",
            "sensitive": true
          },
          "aws_assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role ARN",
            "description": "If provided, the ARN of the role that should be assumed to connect to AWS."
          },
          "region_name": {
            "type": "string",
            "title": "Region",
            "description": "The AWS region where your DynamoDB table is located (ex. us-west-2)."
          }
        },
        "type": "object",
        "required": [
          "auth_method",
          "region_name"
        ],
        "title": "DynamoDBDocsSchema",
        "description": "DynamoDB Secrets Schema for API Docs"
      },
      "EdgeDirection": {
        "type": "string",
        "enum": [
          "from",
          "to"
        ],
        "title": "EdgeDirection",
        "description": "Direction of a FidesDataSetReference"
      },
      "EmailDocsSchema": {
        "properties": {
          "test_email_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Email Address"
          },
          "advanced_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedSettings"
              }
            ],
            "default": {
              "identity_types": {
                "email": true,
                "phone_number": false
              }
            }
          },
          "third_party_vendor_name": {
            "type": "string",
            "title": "Third Party Vendor Name"
          },
          "recipient_email_address": {
            "type": "string",
            "format": "email",
            "title": "Recipient Email Address"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "third_party_vendor_name",
          "recipient_email_address"
        ],
        "title": "EmailDocsSchema",
        "description": "EmailDocsSchema Secrets Schema for API Docs"
      },
      "Endpoint": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "requests": {
            "$ref": "#/components/schemas/SaaSRequestMap"
          },
          "skip_processing": {
            "type": "boolean",
            "title": "Skip Processing",
            "default": false
          },
          "after": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "After",
            "default": []
          },
          "erase_after": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Erase After",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "requests"
        ],
        "title": "Endpoint",
        "description": "A collection of read/update/delete requests which corresponds to a FidesDataset collection (by name)"
      },
      "ErrorNotificationMode": {
        "type": "string",
        "enum": [
          "console_only",
          "toast"
        ],
        "title": "ErrorNotificationMode"
      },
      "Evaluation": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A uuid generated for each unique evaluation."
          },
          "status": {
            "$ref": "#/components/schemas/StatusEnum"
          },
          "violations": {
            "items": {
              "$ref": "#/components/schemas/Violation"
            },
            "type": "array",
            "title": "Violations",
            "description": "The model for violations within an evaluation.",
            "default": []
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A human-readable string response for the evaluation.",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "status"
        ],
        "title": "Evaluation",
        "description": "The Evaluation resource model.\n\nThis resource is created after an evaluation is executed."
      },
      "ExecutionAndAuditLogResponse": {
        "properties": {
          "connection_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Key"
          },
          "collection_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Name"
          },
          "fields_affected": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FieldsAffectedResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Affected"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "action_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExecutionLogStatus"
              },
              {
                "$ref": "#/components/schemas/AuditLogAction"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "ExecutionAndAuditLogResponse",
        "description": "Schema for the combined ExecutionLogs and Audit Logs\nassociated with a PrivacyRequest"
      },
      "ExecutionApplicationConfig": {
        "properties": {
          "subject_identity_verification_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Identity Verification Required"
          },
          "disable_consent_identity_verification": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable Consent Identity Verification"
          },
          "require_manual_request_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Manual Request Approval"
          },
          "memory_watchdog_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Watchdog Enabled"
          },
          "sql_dry_run": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SqlDryRunMode"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ExecutionApplicationConfig"
      },
      "ExecutionLogDetailResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ExecutionLogStatus"
          },
          "collection_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Name"
          },
          "fields_affected": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FieldsAffectedResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Affected"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "action_type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "connection_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Key"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          }
        },
        "type": "object",
        "required": [
          "status",
          "action_type"
        ],
        "title": "ExecutionLogDetailResponse",
        "description": "Schema for the detailed ExecutionLogs when accessed directly"
      },
      "ExecutionLogStatus": {
        "type": "string",
        "enum": [
          "in_processing",
          "pending",
          "complete",
          "error",
          "paused",
          "retrying",
          "skipped"
        ],
        "title": "ExecutionLogStatus",
        "description": "Enum for task execution log statuses, reflecting where they are in their workflow"
      },
      "ExtendedIdentityTypes": {
        "properties": {
          "email": {
            "type": "boolean",
            "title": "Email"
          },
          "phone_number": {
            "type": "boolean",
            "title": "Phone Number"
          },
          "cookie_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Cookie Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "email",
          "phone_number"
        ],
        "title": "ExtendedIdentityTypes",
        "description": "Overrides basic IdentityTypes to add cookie_ids"
      },
      "ExternalDatasetReference": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ExternalDatasetReference"
      },
      "FidesDatasetReference": {
        "properties": {
          "dataset": {
            "type": "string",
            "title": "Dataset"
          },
          "field": {
            "type": "string",
            "title": "Field"
          },
          "direction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EdgeDirection"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "field"
        ],
        "title": "FidesDatasetReference",
        "description": "Reference to a field from another Collection"
      },
      "FidesDocsSchema": {
        "properties": {
          "uri": {
            "type": "string",
            "title": "Uri"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "sensitive": true
          },
          "polling_timeout": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Polling Timeout"
          },
          "polling_interval": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Polling Interval"
          }
        },
        "type": "object",
        "required": [
          "uri",
          "username",
          "password"
        ],
        "title": "FidesDocsSchema",
        "description": "Fides Child Secrets Schema for API docs"
      },
      "FidesMeta": {
        "properties": {
          "references": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FidesDatasetReference"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "References",
            "description": "Fields that current field references or is referenced by. Used for drawing the edges of a DSR graph."
          },
          "identity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity",
            "description": "The type of the identity data that should be used to query this collection for a DSR."
          },
          "primary_key": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Key",
            "description": "Whether the current field can be considered a primary key of the current collection"
          },
          "data_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Type",
            "description": "Optionally specify the data type. Fides will attempt to cast values to this type when querying."
          },
          "length": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Length",
            "description": "Optionally specify the allowable field length. Fides will not generate values that exceed this size."
          },
          "return_all_elements": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return All Elements",
            "description": "Optionally specify to query for the entire array if the array is an entrypoint into the node. Default is False."
          },
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only",
            "description": "Optionally specify if a field is read-only, meaning it can't be updated or deleted."
          },
          "custom_request_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Request Field",
            "description": "Optionally specify that a field may be used as a custom request field in DSRs. The value is the name of the field in the DSR."
          },
          "masking_strategy_override": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FieldMaskingStrategyOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optionally specify a masking strategy override for this field."
          }
        },
        "type": "object",
        "title": "FidesMeta",
        "description": "Supplementary metadata used by the Fides application for additional features."
      },
      "FieldMaskingStrategyOverride": {
        "properties": {
          "strategy": {
            "type": "string",
            "title": "Strategy"
          },
          "configuration": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "strategy"
        ],
        "title": "FieldMaskingStrategyOverride",
        "description": "Overrides field-level masking strategies."
      },
      "FieldsAffectedResponse": {
        "properties": {
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "field_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Name"
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories"
          }
        },
        "type": "object",
        "required": [
          "path",
          "field_name",
          "data_categories"
        ],
        "title": "FieldsAffectedResponse",
        "description": "Schema detailing the individual fields affected by a particular query detailed in the ExecutionLog"
      },
      "FilteredPrivacyRequestResults": {
        "properties": {
          "privacy_request_id": {
            "type": "string",
            "title": "Privacy Request Id"
          },
          "status": {
            "$ref": "#/components/schemas/PrivacyRequestStatus"
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ],
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "privacy_request_id",
          "status",
          "results"
        ],
        "title": "FilteredPrivacyRequestResults",
        "description": "Schema representing the status and results of a test privacy request"
      },
      "GCSAuthMethod": {
        "type": "string",
        "enum": [
          "adc",
          "service_account_keys"
        ],
        "title": "GCSAuthMethod"
      },
      "Generate": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AWSConfig"
              },
              {
                "$ref": "#/components/schemas/OktaConfig"
              },
              {
                "$ref": "#/components/schemas/DatabaseConfig"
              },
              {
                "$ref": "#/components/schemas/BigQueryConfig"
              }
            ],
            "title": "Config"
          },
          "target": {
            "$ref": "#/components/schemas/ValidTargets"
          },
          "type": {
            "$ref": "#/components/schemas/GenerateTypes"
          }
        },
        "type": "object",
        "required": [
          "config",
          "target",
          "type"
        ],
        "title": "Generate",
        "description": "Defines attributes for generating resources included in a request."
      },
      "GenerateRequestPayload": {
        "properties": {
          "organization_key": {
            "type": "string",
            "title": "Organization Key"
          },
          "generate": {
            "$ref": "#/components/schemas/Generate"
          }
        },
        "type": "object",
        "required": [
          "organization_key",
          "generate"
        ],
        "title": "GenerateRequestPayload",
        "description": "The model for the request body housing generate information."
      },
      "GenerateResponse": {
        "properties": {
          "generate_results": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Dataset"
                    },
                    {
                      "$ref": "#/components/schemas/System"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generate Results"
          }
        },
        "type": "object",
        "title": "GenerateResponse",
        "description": "The model to house the response for generated infrastructure."
      },
      "GenerateTypes": {
        "type": "string",
        "enum": [
          "systems",
          "datasets"
        ],
        "title": "GenerateTypes",
        "description": "Generate Type Enum to capture the discrete possible values\nfor a valid type of resource to generate."
      },
      "GetRegistrationStatusResponse": {
        "properties": {
          "opt_in": {
            "type": "boolean",
            "title": "Opt In",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "GetRegistrationStatusResponse",
        "description": "Reflects the registration status of a Fides deployment."
      },
      "GoogleCloudSQLIPType": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "psc"
        ],
        "title": "GoogleCloudSQLIPType",
        "description": "Enum for Google Cloud SQL IP types"
      },
      "GoogleCloudSQLMySQLDocsSchema": {
        "properties": {
          "db_iam_user": {
            "type": "string",
            "title": "DB IAM user",
            "description": "example: service-account@test.iam.gserviceaccount.com"
          },
          "instance_connection_name": {
            "type": "string",
            "title": "Instance connection name",
            "description": "example: friendly-tower-424214-n8:us-central1:test-ethyca"
          },
          "dbname": {
            "type": "string",
            "title": "Database name"
          },
          "keyfile_creds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fides__api__schemas__connection_configuration__connection_secrets_google_cloud_sql_mysql__KeyfileCreds"
              }
            ],
            "title": "Keyfile creds",
            "description": "The contents of the key file that contains authentication credentials for a service account in GCP.",
            "sensitive": true
          },
          "ip_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GoogleCloudSQLIPType"
              },
              {
                "type": "null"
              }
            ],
            "title": "IP type",
            "description": "Specify the IP Address type required for your database (defaults to public). See the Google Cloud documentation for more information about connection options: https://cloud.google.com/sql/docs/postgres/connect-overview"
          }
        },
        "type": "object",
        "required": [
          "db_iam_user",
          "instance_connection_name",
          "dbname",
          "keyfile_creds"
        ],
        "title": "GoogleCloudSQLMySQLDocsSchema",
        "description": "Google Cloud SQL MySQL Secrets Schema for API Docs"
      },
      "GoogleCloudSQLPostgresDocsSchema": {
        "properties": {
          "db_iam_user": {
            "type": "string",
            "title": "DB IAM user",
            "description": "example: service-account@test.iam.gserviceaccount.com"
          },
          "instance_connection_name": {
            "type": "string",
            "title": "Instance connection name",
            "description": "example: friendly-tower-424214-n8:us-central1:test-ethyca"
          },
          "dbname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database name"
          },
          "db_schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "The default schema to be used for the database connection (defaults to public)."
          },
          "keyfile_creds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fides__api__schemas__connection_configuration__connection_secrets_google_cloud_sql_postgres__KeyfileCreds"
              }
            ],
            "title": "Keyfile creds",
            "description": "The contents of the key file that contains authentication credentials for a service account in GCP.",
            "sensitive": true
          },
          "ip_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GoogleCloudSQLIPType"
              },
              {
                "type": "null"
              }
            ],
            "title": "IP type",
            "description": "Specify the IP Address type required for your database (defaults to public). See the Google Cloud documentation for more information about connection options: https://cloud.google.com/sql/docs/postgres/connect-overview"
          }
        },
        "type": "object",
        "required": [
          "db_iam_user",
          "instance_connection_name",
          "keyfile_creds"
        ],
        "title": "GoogleCloudSQLPostgresDocsSchema",
        "description": "Google Cloud SQL Postgres Secrets Schema for API Docs"
      },
      "HTTPMethod": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "PATCH",
          "PUT",
          "DELETE",
          "OPTIONS",
          "HEAD"
        ],
        "title": "HTTPMethod",
        "description": "Enum to represent HTTP Methods"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Header": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "Header"
      },
      "Identity": {
        "properties": {
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone number"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "ga_client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "GA client ID"
          },
          "ljt_readerID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "LJT reader ID"
          },
          "fides_user_device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fides user device ID"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External ID"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "Identity",
        "description": "Some PII grouping pertaining to a human"
      },
      "IdentityTypes": {
        "properties": {
          "email": {
            "type": "boolean",
            "title": "Email"
          },
          "phone_number": {
            "type": "boolean",
            "title": "Phone Number"
          }
        },
        "type": "object",
        "required": [
          "email",
          "phone_number"
        ],
        "title": "IdentityTypes"
      },
      "IdentityVerificationConfigResponse": {
        "properties": {
          "identity_verification_required": {
            "type": "boolean",
            "title": "Identity Verification Required"
          },
          "disable_consent_identity_verification": {
            "type": "boolean",
            "title": "Disable Consent Identity Verification"
          },
          "valid_email_config_exists": {
            "type": "boolean",
            "title": "Valid Email Config Exists"
          }
        },
        "type": "object",
        "required": [
          "identity_verification_required",
          "disable_consent_identity_verification",
          "valid_email_config_exists"
        ],
        "title": "IdentityVerificationConfigResponse",
        "description": "Response for identity verification config info"
      },
      "IncludeExcludeEnum": {
        "type": "string",
        "enum": [
          "ALL",
          "EXCLUDE",
          "INCLUDE",
          "NONE"
        ],
        "title": "IncludeExcludeEnum",
        "description": "Determine whether or not defined rights are\nbeing included or excluded."
      },
      "IntegrationFeature": {
        "type": "string",
        "enum": [
          "DATA_DISCOVERY",
          "DATA_SYNC",
          "TASKS",
          "WITHOUT_CONNECTION",
          "DSR_AUTOMATION",
          "CONDITIONS"
        ],
        "title": "IntegrationFeature",
        "description": "Features that can be enabled for different integration types.\nThese control which tabs and functionality are available in the integration detail view."
      },
      "LegalBasisForProcessingEnum": {
        "type": "string",
        "enum": [
          "Consent",
          "Contract",
          "Legal obligations",
          "Vital interests",
          "Public interest",
          "Legitimate interests"
        ],
        "title": "LegalBasisForProcessingEnum",
        "description": "The model for allowable legal basis categories on privacy declarations.\n\nBased upon article 6 of the GDPR"
      },
      "LegalBasisForProfilingEnum": {
        "type": "string",
        "enum": [
          "Explicit consent",
          "Contract",
          "Authorised by law"
        ],
        "title": "LegalBasisForProfilingEnum",
        "description": "The model for describing the legal basis under which profiling is performed"
      },
      "LogEntry": {
        "properties": {
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "level": {
            "type": "string",
            "title": "Level"
          },
          "module_info": {
            "type": "string",
            "title": "Module Info"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "level",
          "module_info",
          "message"
        ],
        "title": "LogEntry",
        "description": "Schema representing a single log entry"
      },
      "MSSQLDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 1433).",
            "default": 1433
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "dbname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          }
        },
        "type": "object",
        "required": [
          "host",
          "username",
          "password"
        ],
        "title": "MSSQLDocsSchema",
        "description": "MS SQL Secrets Schema for API Docs"
      },
      "ManualAction": {
        "properties": {
          "locators": {
            "type": "object",
            "title": "Locators"
          },
          "get": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Get"
          },
          "update": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Update"
          }
        },
        "type": "object",
        "required": [
          "locators",
          "get",
          "update"
        ],
        "title": "ManualAction",
        "description": "Surface how to retrieve or mask data in a database-agnostic way\n\n- 'locators' are similar to the SQL \"WHERE\" information.\n- 'get' contains a list of fields that should be retrieved from the source\n- 'update' is a dictionary of fields and the replacement value/masking strategy"
      },
      "ManualWebhookData": {
        "properties": {
          "checked": {
            "type": "boolean",
            "title": "Checked"
          },
          "fields": {
            "type": "object",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": [
          "checked",
          "fields"
        ],
        "title": "ManualWebhookData"
      },
      "ManualWebhookDocsSchema": {
        "properties": {},
        "type": "object",
        "title": "ManualWebhookDocsSchema",
        "description": "Manual Webhooks Secrets Schema for API Docs"
      },
      "ManualWebhookField": {
        "properties": {
          "pii_field": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Pii Field"
          },
          "types": {
            "items": {
              "type": "string",
              "enum": [
                "string",
                "file"
              ]
            },
            "type": "array",
            "title": "Types",
            "default": [
              "string"
            ]
          },
          "dsr_package_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Dsr Package Label"
          },
          "data_categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Categories"
          }
        },
        "type": "object",
        "required": [
          "pii_field"
        ],
        "title": "ManualWebhookField",
        "description": "Schema to describe the attributes on a manual webhook field"
      },
      "MariaDBDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 3306).",
            "default": 3306
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "dbname": {
            "type": "string",
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          }
        },
        "type": "object",
        "required": [
          "host",
          "dbname"
        ],
        "title": "MariaDBDocsSchema",
        "description": "MariaDB Secrets Schema for API Docs"
      },
      "MaskingAPIRequest": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Values"
          },
          "masking_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PolicyMaskingSpec"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/PolicyMaskingSpec"
                },
                "type": "array"
              }
            ],
            "title": "Masking Strategy"
          },
          "masking_strategies": {
            "items": {
              "$ref": "#/components/schemas/PolicyMaskingSpec"
            },
            "type": "array",
            "title": "Masking Strategies",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "values",
          "masking_strategy"
        ],
        "title": "MaskingAPIRequest",
        "description": "The API Request for masking operations"
      },
      "MaskingAPIResponse": {
        "properties": {
          "plain": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Plain"
          },
          "masked_values": {
            "items": {},
            "type": "array",
            "title": "Masked Values"
          }
        },
        "type": "object",
        "required": [
          "plain",
          "masked_values"
        ],
        "title": "MaskingAPIResponse",
        "description": "The API Response returned upon masking completion"
      },
      "MaskingStrategies": {
        "type": "string",
        "enum": [
          "delete"
        ],
        "const": "delete",
        "title": "MaskingStrategies",
        "description": "Possible options for masking strategy overrides"
      },
      "MaskingStrategyConfigurationDescription": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "optional": {
            "type": "boolean",
            "title": "Optional",
            "default": true
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "key",
          "description"
        ],
        "title": "MaskingStrategyConfigurationDescription",
        "description": "The description model for a specific configuration in a masking strategy"
      },
      "MaskingStrategyDescription": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "configurations": {
            "items": {
              "$ref": "#/components/schemas/MaskingStrategyConfigurationDescription"
            },
            "type": "array",
            "title": "Configurations"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "configurations"
        ],
        "title": "MaskingStrategyDescription",
        "description": "The description model for a masking strategy"
      },
      "MaskingStrategyOverride": {
        "properties": {
          "strategy": {
            "$ref": "#/components/schemas/MaskingStrategies"
          }
        },
        "type": "object",
        "required": [
          "strategy"
        ],
        "title": "MaskingStrategyOverride",
        "description": "Overrides collection-level masking strategies."
      },
      "MatchesEnum": {
        "type": "string",
        "enum": [
          "ANY",
          "ALL",
          "NONE",
          "OTHER"
        ],
        "title": "MatchesEnum",
        "description": "The MatchesEnum resource model.\n\nDetermines how the listed resources are matched in the evaluation logic."
      },
      "MessagingActionType": {
        "type": "string",
        "enum": [
          "consent_request",
          "subject_identity_verification",
          "consent_request_email_fulfillment",
          "message_erasure_fulfillment",
          "privacy_request_error_notification",
          "privacy_request_receipt",
          "privacy_request_complete_access",
          "privacy_request_complete_deletion",
          "privacy_request_review_deny",
          "privacy_request_review_approve",
          "user_invite",
          "external_user_welcome",
          "test_message"
        ],
        "title": "MessagingActionType",
        "description": "Enum for messaging action type"
      },
      "MessagingConfigRequest": {
        "properties": {
          "service_type": {
            "$ref": "#/components/schemas/MessagingServiceType"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailgun"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsTwilioEmail"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailchimpTransactional"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsAWS_SES"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "service_type",
          "name"
        ],
        "title": "MessagingConfigRequest",
        "description": "Messaging Config Request Schema"
      },
      "MessagingConfigRequestBase": {
        "properties": {
          "service_type": {
            "$ref": "#/components/schemas/MessagingServiceType"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailgun"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsTwilioEmail"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailchimpTransactional"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsAWS_SES"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "service_type"
        ],
        "title": "MessagingConfigRequestBase",
        "description": "Base model shared by messaging config requests to provide validation on request inputs"
      },
      "MessagingConfigResponse": {
        "properties": {
          "service_type": {
            "$ref": "#/components/schemas/MessagingServiceType"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailgun"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsTwilioEmail"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsMailchimpTransactional"
              },
              {
                "$ref": "#/components/schemas/MessagingServiceDetailsAWS_SES"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "service_type",
          "name",
          "key"
        ],
        "title": "MessagingConfigResponse",
        "description": "Messaging Config Response Schema"
      },
      "MessagingConfigStatus": {
        "type": "string",
        "enum": [
          "configured",
          "not configured"
        ],
        "title": "MessagingConfigStatus",
        "description": "Enum for configuration statuses of a messaging config"
      },
      "MessagingConfigStatusMessage": {
        "properties": {
          "config_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessagingConfigStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "MessagingConfigStatusMessage",
        "description": "A schema for checking configuration status of message config."
      },
      "MessagingConnectionTestStatus": {
        "type": "string",
        "enum": [
          "succeeded",
          "failed",
          "skipped"
        ],
        "title": "MessagingConnectionTestStatus",
        "description": "Enum for supplying statuses of validating credentials for a messaging Config"
      },
      "MessagingMethod": {
        "type": "string",
        "enum": [
          "email",
          "sms"
        ],
        "title": "MessagingMethod",
        "description": "Enum for messaging method"
      },
      "MessagingSecretsMailgunDocs": {
        "properties": {
          "mailgun_api_key": {
            "type": "string",
            "title": "Mailgun Api Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "mailgun_api_key"
        ],
        "title": "MessagingSecretsMailgunDocs",
        "description": "The secrets required to connect to Mailgun, for documentation"
      },
      "MessagingSecretsTwilioEmailDocs": {
        "properties": {
          "twilio_api_key": {
            "type": "string",
            "title": "Twilio Api Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "twilio_api_key"
        ],
        "title": "MessagingSecretsTwilioEmailDocs",
        "description": "The secrets required to connect to Twilio email, for documentation"
      },
      "MessagingSecretsTwilioSMSDocs": {
        "properties": {
          "twilio_account_sid": {
            "type": "string",
            "title": "Twilio Account Sid"
          },
          "twilio_auth_token": {
            "type": "string",
            "title": "Twilio Auth Token"
          },
          "twilio_messaging_service_sid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twilio Messaging Service Sid"
          },
          "twilio_sender_phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twilio Sender Phone Number"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "twilio_account_sid",
          "twilio_auth_token"
        ],
        "title": "MessagingSecretsTwilioSMSDocs",
        "description": "The secrets required to connect to Twilio sms, for documentation"
      },
      "MessagingServiceDetailsAWS_SES": {
        "properties": {
          "email_from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email From"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "aws_region": {
            "type": "string",
            "title": "Aws Region"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "aws_region"
        ],
        "title": "MessagingServiceDetailsAWS_SES",
        "description": "The details required to represent an AWS SES email configuration."
      },
      "MessagingServiceDetailsMailchimpTransactional": {
        "properties": {
          "email_from": {
            "type": "string",
            "title": "Email From"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "email_from"
        ],
        "title": "MessagingServiceDetailsMailchimpTransactional",
        "description": "The details required to represent a Mailchimp Transactional email configuration."
      },
      "MessagingServiceDetailsMailgun": {
        "properties": {
          "is_eu_domain": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Eu Domain",
            "default": false
          },
          "api_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Version",
            "default": "v3"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "domain"
        ],
        "title": "MessagingServiceDetailsMailgun",
        "description": "The details required to represent a Mailgun email configuration."
      },
      "MessagingServiceDetailsTwilioEmail": {
        "properties": {
          "twilio_email_from": {
            "type": "string",
            "title": "Twilio Email From"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "twilio_email_from"
        ],
        "title": "MessagingServiceDetailsTwilioEmail",
        "description": "The details required to represent a Twilio email configuration."
      },
      "MessagingServiceSecretsAWS_SESDocs": {
        "properties": {
          "auth_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AWSAuthMethod"
              }
            ],
            "title": "Authentication Method",
            "description": "Determines which type of authentication method to use for connecting to Amazon Web Services. Currently accepted values are: `secret_keys` or `automatic`."
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Key ID",
            "description": "Part of the credentials that provide access to your AWS account."
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Access Key",
            "description": "Part of the credentials that provide access to your AWS account.",
            "sensitive": true
          },
          "aws_assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role ARN",
            "description": "If provided, the ARN of the role that should be assumed to connect to AWS."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "auth_method"
        ],
        "title": "MessagingServiceSecretsAWS_SESDocs",
        "description": "The secrets required to connect to AWS SES, for documentation"
      },
      "MessagingServiceSecretsMailchimpTransactionalDocs": {
        "properties": {
          "mailchimp_transactional_api_key": {
            "type": "string",
            "title": "Mailchimp Transactional Api Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "mailchimp_transactional_api_key"
        ],
        "title": "MessagingServiceSecretsMailchimpTransactionalDocs",
        "description": "The secrets required to connect Mailchimp Transactional, for documentation"
      },
      "MessagingServiceType": {
        "type": "string",
        "enum": [
          "mailgun",
          "twilio_text",
          "twilio_email",
          "mailchimp_transactional",
          "aws_ses"
        ],
        "title": "MessagingServiceType",
        "description": "Enum for messaging service type."
      },
      "MessagingTemplateDefault": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "content": {
            "type": "object",
            "title": "Content",
            "examples": [
              {
                "body": "Custom message body",
                "subject": "Message subject"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "is_enabled",
          "content"
        ],
        "title": "MessagingTemplateDefault"
      },
      "MessagingTemplateWithPropertiesDetail": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "properties": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MinimalProperty"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "content": {
            "type": "object",
            "title": "Content",
            "examples": [
              {
                "body": "Custom message body",
                "subject": "Message subject"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "is_enabled",
          "content"
        ],
        "title": "MessagingTemplateWithPropertiesDetail"
      },
      "MinimalProperty": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "MinimalProperty"
      },
      "MongoDBDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 27017).",
            "default": 27017
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "defaultauthdb": {
            "type": "string",
            "title": "Default Auth DB",
            "description": "Used to specify the default authentication database."
          }
        },
        "type": "object",
        "required": [
          "host",
          "username",
          "password",
          "defaultauthdb"
        ],
        "title": "MongoDBDocsSchema",
        "description": "Mongo DB Secrets Schema for API docs"
      },
      "MySQLDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 3306).",
            "default": 3306
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "dbname": {
            "type": "string",
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          },
          "ssh_required": {
            "type": "boolean",
            "title": "SSH required",
            "description": "Indicates whether an SSH tunnel is required for the connection. Enable this option if your MySQL server is behind a firewall and requires SSH tunneling for remote connections.",
            "default": false
          },
          "ssl_mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MySQLSSLMode"
              },
              {
                "type": "null"
              }
            ],
            "title": "SSL Mode",
            "description": "The SSL mode to use for the connection. Accepted values are: 'required', 'preferred', 'disabled', or an empty value."
          }
        },
        "type": "object",
        "required": [
          "host",
          "dbname"
        ],
        "title": "MySQLDocsSchema",
        "description": "MySQL Secrets Schema for API Docs"
      },
      "MySQLSSLMode": {
        "type": "string",
        "enum": [
          "preferred",
          "required",
          "disabled",
          ""
        ],
        "title": "MySQLSSLMode"
      },
      "NotificationApplicationConfig": {
        "properties": {
          "send_request_completion_notification": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send Request Completion Notification"
          },
          "send_request_receipt_notification": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send Request Receipt Notification"
          },
          "send_request_review_notification": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send Request Review Notification"
          },
          "notification_service_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Service Type"
          },
          "enable_property_specific_messaging": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Property Specific Messaging"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "NotificationApplicationConfig",
        "description": "API model - configuration settings for data subject and/or data processor notifications"
      },
      "OktaConfig": {
        "properties": {
          "orgUrl": {
            "type": "string",
            "title": "Orgurl"
          },
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "orgUrl",
          "token"
        ],
        "title": "OktaConfig",
        "description": "The model for the connection config for Okta"
      },
      "OktaDocsSchema": {
        "properties": {
          "org_url": {
            "type": "string",
            "title": "Organization URL",
            "description": "The URL of your Okta organization (e.g. https://your-org.okta.com)"
          },
          "api_token": {
            "type": "string",
            "title": "API Token",
            "description": "The API token used to authenticate with Okta",
            "sensitive": true
          }
        },
        "type": "object",
        "required": [
          "org_url",
          "api_token"
        ],
        "title": "OktaDocsSchema",
        "description": "Okta Secrets Schema for API Docs"
      },
      "Organization": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "organization_parent_key": {
            "type": "null",
            "title": "Organization Parent Key",
            "description": "An inherited field from the FidesModel that is unused with an Organization."
          },
          "controller": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The contact details information model.\n\n    Used to capture contact information for controllers, used\n    as part of exporting a data map / ROPA.\n\n    This model is nested under an Organization and\n    potentially under a system/dataset.\n    "
          },
          "data_protection_officer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The contact details information model.\n\n    Used to capture contact information for controllers, used\n    as part of exporting a data map / ROPA.\n\n    This model is nested under an Organization and\n    potentially under a system/dataset.\n    "
          },
          "fidesctl_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The OrganizationMetadata resource model.\n\n    Object used to hold application specific metadata for an organization\n    "
          },
          "representative": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The contact details information model.\n\n    Used to capture contact information for controllers, used\n    as part of exporting a data map / ROPA.\n\n    This model is nested under an Organization and\n    potentially under a system/dataset.\n    "
          },
          "security_policy": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Security Policy",
            "description": "Am optional URL to the organization security policy."
          }
        },
        "type": "object",
        "required": [
          "fides_key"
        ],
        "title": "Organization",
        "description": "The Organization resource model.\n\nThis resource is used as a way to organize all other resources."
      },
      "OrganizationMetadata": {
        "properties": {
          "resource_filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Filters",
            "description": "A list of filters that can be used when generating or scanning systems."
          }
        },
        "type": "object",
        "title": "OrganizationMetadata",
        "description": "The OrganizationMetadata resource model.\n\nObject used to hold application specific metadata for an organization"
      },
      "Page_BasicSystemResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BasicSystemResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[BasicSystemResponse]"
      },
      "Page_ConnectionConfigurationResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ConnectionConfigurationResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[ConnectionConfigurationResponse]"
      },
      "Page_ConnectionSystemTypeMap_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ConnectionSystemTypeMap"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[ConnectionSystemTypeMap]"
      },
      "Page_ConsentReport_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ConsentReport"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[ConsentReport]"
      },
      "Page_DatasetConfigSchema_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DatasetConfigSchema"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[DatasetConfigSchema]"
      },
      "Page_DatasetResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DatasetResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[DatasetResponse]"
      },
      "Page_Dataset_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[Dataset]"
      },
      "Page_ExecutionLogDetailResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExecutionLogDetailResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[ExecutionLogDetailResponse]"
      },
      "Page_MessagingConfigResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/MessagingConfigResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[MessagingConfigResponse]"
      },
      "Page_PolicyResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PolicyResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[PolicyResponse]"
      },
      "Page_PolicyWebhookResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PolicyWebhookResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[PolicyWebhookResponse]"
      },
      "Page_PreApprovalWebhookResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PreApprovalWebhookResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[PreApprovalWebhookResponse]"
      },
      "Page_RuleResponseWithTargets_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RuleResponseWithTargets"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[RuleResponseWithTargets]"
      },
      "Page_RuleTarget_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RuleTarget"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[RuleTarget]"
      },
      "Page_StorageDestinationResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/StorageDestinationResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[StorageDestinationResponse]"
      },
      "Page_Union_PrivacyRequestVerboseResponse__PrivacyRequestResponse__": {
        "properties": {
          "items": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PrivacyRequestVerboseResponse"
                },
                {
                  "$ref": "#/components/schemas/PrivacyRequestResponse"
                }
              ]
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[Union[PrivacyRequestVerboseResponse, PrivacyRequestResponse]]"
      },
      "Page_UserResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[UserResponse]"
      },
      "ParamValue": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "identity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity"
          },
          "references": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FidesDatasetReference"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "References"
          },
          "connector_param": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connector Param"
          },
          "unpack": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unpack",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ParamValue",
        "description": "A named variable which can be sourced from identities, dataset references, or connector params. These values\nare used to replace the placeholders in the path, header, query, and body param values."
      },
      "PeriodicIntegrationFrequency": {
        "type": "string",
        "enum": [
          "daily",
          "weekly",
          "monthly",
          "not scheduled"
        ],
        "title": "PeriodicIntegrationFrequency",
        "description": "Enum for periodic integration frequency"
      },
      "PolicyMaskingSpec": {
        "properties": {
          "strategy": {
            "type": "string",
            "title": "Strategy"
          },
          "configuration": {
            "type": "object",
            "title": "Configuration"
          }
        },
        "type": "object",
        "required": [
          "strategy",
          "configuration"
        ],
        "title": "PolicyMaskingSpec",
        "description": "Models the masking strategy definition"
      },
      "PolicyMaskingSpecResponse": {
        "properties": {
          "strategy": {
            "type": "string",
            "title": "Strategy"
          }
        },
        "type": "object",
        "required": [
          "strategy"
        ],
        "title": "PolicyMaskingSpecResponse",
        "description": "The schema to use when returning a masking strategy via the API. This schema omits other\npotentially sensitive fields in the masking configuration, for example the encryption\nalgorithm."
      },
      "PolicyResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "drp_action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DrpAction"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_timeframe": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Timeframe"
          },
          "rules": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RuleResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rules"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PolicyResponse",
        "description": "A holistic view of a Policy record, including all foreign keys by default."
      },
      "PolicyRule": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "data_categories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivacyRule"
              }
            ],
            "description": "\n    The PrivacyRule resource model.\n\n    A list of privacy data types and what match method to use.\n    "
          },
          "data_uses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivacyRule"
              }
            ],
            "description": "\n    The PrivacyRule resource model.\n\n    A list of privacy data types and what match method to use.\n    "
          },
          "data_subjects": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrivacyRule"
              }
            ],
            "description": "\n    The PrivacyRule resource model.\n\n    A list of privacy data types and what match method to use.\n    "
          }
        },
        "type": "object",
        "required": [
          "name",
          "data_categories",
          "data_uses",
          "data_subjects"
        ],
        "title": "PolicyRule",
        "description": "The PolicyRule resource model.\n\nDescribes the allowed combination of the various privacy data types."
      },
      "PolicyWebhookCreate": {
        "properties": {
          "direction": {
            "$ref": "#/components/schemas/WebhookDirection"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "connection_config_key": {
            "type": "string",
            "title": "Connection Config Key"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "connection_config_key"
        ],
        "title": "PolicyWebhookCreate",
        "description": "Request schema for creating/updating a Policy Webhook"
      },
      "PolicyWebhookDeleteResponse": {
        "properties": {
          "new_order": {
            "items": {
              "$ref": "#/components/schemas/WebhookOrder"
            },
            "type": "array",
            "title": "New Order"
          }
        },
        "type": "object",
        "required": [
          "new_order"
        ],
        "title": "PolicyWebhookDeleteResponse",
        "description": "Response schema after deleting a webhook; new_order includes remaining reordered webhooks if applicable"
      },
      "PolicyWebhookResponse": {
        "properties": {
          "direction": {
            "$ref": "#/components/schemas/WebhookDirection"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "connection_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionConfigurationResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "order": {
            "type": "integer",
            "title": "Order"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "order"
        ],
        "title": "PolicyWebhookResponse",
        "description": "Response schema after creating a PolicyWebhook"
      },
      "PolicyWebhookUpdate": {
        "properties": {
          "direction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookDirection"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "connection_config_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Config Key"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PolicyWebhookUpdate",
        "description": "Request schema for updating a single webhook - fields are optional"
      },
      "PolicyWebhookUpdateResponse": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/PolicyWebhookResponse"
          },
          "new_order": {
            "items": {
              "$ref": "#/components/schemas/WebhookOrder"
            },
            "type": "array",
            "title": "New Order"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "new_order"
        ],
        "title": "PolicyWebhookUpdateResponse",
        "description": "Response schema after a PATCH to a single webhook - because updating the order of this webhook can update the\norder of other webhooks, new_order will include the new order if order was adjusted at all"
      },
      "PostgreSQLDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 5432).",
            "default": 5432
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "ssh_required": {
            "type": "boolean",
            "title": "SSH required",
            "description": "Indicates whether an SSH tunnel is required for the connection. Enable this option if your PostgreSQL server is behind a firewall and requires SSH tunneling for remote connections.",
            "default": false
          },
          "dbname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          },
          "db_schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "The default schema to be used for the database connection (defaults to public)."
          },
          "ssl_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "SSL Mode"
          }
        },
        "type": "object",
        "required": [
          "host"
        ],
        "title": "PostgreSQLDocsSchema",
        "description": "Postgres Secrets Schema for API Docs"
      },
      "PreApprovalWebhookCreate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connection_config_key": {
            "type": "string",
            "title": "Connection Config Key"
          }
        },
        "type": "object",
        "required": [
          "name",
          "connection_config_key"
        ],
        "title": "PreApprovalWebhookCreate",
        "description": "Request schema for creating/updating a Pre Approval Webhook"
      },
      "PreApprovalWebhookResponse": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "connection_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionConfigurationResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PreApprovalWebhookResponse",
        "description": "Response schema after creating/updating/getting a PreApprovalWebhook"
      },
      "PreApprovalWebhookUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "connection_config_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Config Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PreApprovalWebhookUpdate",
        "description": "Request schema for updating a single webhook - fields are optional"
      },
      "PrivacyCenterConfig": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PrivacyCenterConfig"
      },
      "PrivacyDeclaration": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the privacy declaration on the system."
          },
          "data_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Categories",
            "description": "An array of data categories describing a system in a privacy declaration."
          },
          "data_use": {
            "type": "string",
            "title": "Data Use",
            "description": "The Data Use describing a system in a privacy declaration."
          },
          "data_subjects": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Subjects",
            "description": "An array of data subjects describing a system in a privacy declaration."
          },
          "dataset_references": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset References",
            "description": "Referenced Dataset fides keys used by the system."
          },
          "egress": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Egress",
            "description": "The resources to which data is sent. Any `fides_key`s included in this list reference `DataFlow` entries in the `egress` array of any `System` resources to which this `PrivacyDeclaration` is applied."
          },
          "ingress": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress",
            "description": "The resources from which data is received. Any `fides_key`s included in this list reference `DataFlow` entries in the `ingress` array of any `System` resources to which this `PrivacyDeclaration` is applied."
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features",
            "description": "The features of processing personal data."
          },
          "flexible_legal_basis_for_processing": {
            "type": "boolean",
            "title": "Flexible Legal Basis For Processing",
            "description": "Whether the legal basis for processing is 'flexible' (i.e. can be overridden in a privacy notice) for this declaration.",
            "default": true
          },
          "legal_basis_for_processing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegalBasisForProcessingEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The legal basis under which personal data is processed for this purpose."
          },
          "impact_assessment_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Impact Assessment Location",
            "description": "Where the legitimate interest impact assessment is stored"
          },
          "retention_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retention Period",
            "description": "An optional string to describe the time period for which data is retained for this purpose."
          },
          "processes_special_category_data": {
            "type": "boolean",
            "title": "Processes Special Category Data",
            "description": "This system processes special category data",
            "default": false
          },
          "special_category_legal_basis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpecialCategoryLegalBasisEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The legal basis under which the special category data is processed."
          },
          "data_shared_with_third_parties": {
            "type": "boolean",
            "title": "Data Shared With Third Parties",
            "description": "This system shares data with third parties for this purpose.",
            "default": false
          },
          "third_parties": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Third Parties",
            "description": "The types of third parties the data is shared with."
          },
          "shared_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Shared Categories",
            "description": "The categories of personal data that this system shares with third parties."
          }
        },
        "type": "object",
        "required": [
          "data_categories",
          "data_use"
        ],
        "title": "PrivacyDeclaration",
        "description": "The PrivacyDeclaration resource model.\n\nStates a function of a system, and describes how it relates\nto the privacy data types."
      },
      "PrivacyDeclarationResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the privacy declaration on the system."
          },
          "data_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Categories",
            "description": "An array of data categories describing a system in a privacy declaration."
          },
          "data_use": {
            "type": "string",
            "title": "Data Use",
            "description": "The Data Use describing a system in a privacy declaration."
          },
          "data_subjects": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Subjects",
            "description": "An array of data subjects describing a system in a privacy declaration."
          },
          "dataset_references": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset References",
            "description": "Referenced Dataset fides keys used by the system."
          },
          "egress": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Egress",
            "description": "The resources to which data is sent. Any `fides_key`s included in this list reference `DataFlow` entries in the `egress` array of any `System` resources to which this `PrivacyDeclaration` is applied."
          },
          "ingress": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress",
            "description": "The resources from which data is received. Any `fides_key`s included in this list reference `DataFlow` entries in the `ingress` array of any `System` resources to which this `PrivacyDeclaration` is applied."
          },
          "features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Features",
            "description": "The features of processing personal data."
          },
          "flexible_legal_basis_for_processing": {
            "type": "boolean",
            "title": "Flexible Legal Basis For Processing",
            "description": "Whether the legal basis for processing is 'flexible' (i.e. can be overridden in a privacy notice) for this declaration.",
            "default": true
          },
          "legal_basis_for_processing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegalBasisForProcessingEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The legal basis under which personal data is processed for this purpose."
          },
          "impact_assessment_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Impact Assessment Location",
            "description": "Where the legitimate interest impact assessment is stored"
          },
          "retention_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retention Period",
            "description": "An optional string to describe the time period for which data is retained for this purpose."
          },
          "processes_special_category_data": {
            "type": "boolean",
            "title": "Processes Special Category Data",
            "description": "This system processes special category data",
            "default": false
          },
          "special_category_legal_basis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpecialCategoryLegalBasisEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The legal basis under which the special category data is processed."
          },
          "data_shared_with_third_parties": {
            "type": "boolean",
            "title": "Data Shared With Third Parties",
            "description": "This system shares data with third parties for this purpose.",
            "default": false
          },
          "third_parties": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Third Parties",
            "description": "The types of third parties the data is shared with."
          },
          "shared_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Shared Categories",
            "description": "The categories of personal data that this system shares with third parties."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The database-assigned ID of the privacy declaration on the system. This is meant to be a read-only field, returned only in API responses"
          }
        },
        "type": "object",
        "required": [
          "data_categories",
          "data_use",
          "id"
        ],
        "title": "PrivacyDeclarationResponse",
        "description": "Extension of base pydantic model to include DB `id` field in the response"
      },
      "PrivacyRequestAccessResults": {
        "properties": {
          "access_result_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Access Result Urls"
          }
        },
        "type": "object",
        "required": [
          "access_result_urls"
        ],
        "title": "PrivacyRequestAccessResults",
        "description": "Schema for the access results of a PrivacyRequest"
      },
      "PrivacyRequestCreate": {
        "properties": {
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "started_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Processing At"
          },
          "finished_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished Processing At"
          },
          "requested_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested At"
          },
          "identity": {
            "$ref": "#/components/schemas/Identity"
          },
          "consent_request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consent Request Id"
          },
          "custom_privacy_request_fields": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/CustomPrivacyRequestField"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields"
          },
          "policy_key": {
            "type": "string",
            "title": "Policy Key"
          },
          "encryption_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Encryption Key"
          },
          "property_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Property Id"
          },
          "consent_preferences": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Consent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Consent Preferences"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "identity",
          "policy_key"
        ],
        "title": "PrivacyRequestCreate",
        "description": "Data required to create a PrivacyRequest"
      },
      "PrivacyRequestDRPStatus": {
        "type": "string",
        "enum": [
          "open",
          "in_progress",
          "fulfilled",
          "revoked",
          "denied",
          "expired"
        ],
        "title": "PrivacyRequestDRPStatus",
        "description": "A list of privacy request statuses specified by the Data Rights Protocol."
      },
      "PrivacyRequestDRPStatusResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "title": "Received At"
          },
          "expected_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected By"
          },
          "processing_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Details"
          },
          "status": {
            "$ref": "#/components/schemas/PrivacyRequestDRPStatus"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "user_verification_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Verification Url"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "received_at",
          "status"
        ],
        "title": "PrivacyRequestDRPStatusResponse",
        "description": "A Fidesops PrivacyRequest updated to fit the Data Rights Protocol specification."
      },
      "PrivacyRequestFilter": {
        "properties": {
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "identities": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identities",
            "examples": [
              {
                "email": "user@example.com",
                "loyalty_id": "CH-1"
              }
            ]
          },
          "fuzzy_search_str": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuzzy Search Str"
          },
          "custom_privacy_request_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields",
            "examples": [
              {
                "site_id": "abc",
                "subscriber_id": "123"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestStatus"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/PrivacyRequestStatus"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created_lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created Lt"
          },
          "created_gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created Gt"
          },
          "started_lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Lt"
          },
          "started_gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Gt"
          },
          "completed_lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Lt"
          },
          "completed_gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Gt"
          },
          "errored_lt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errored Lt"
          },
          "errored_gt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errored Gt"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "action_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "verbose": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verbose",
            "default": false
          },
          "include_identities": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Identities",
            "default": false
          },
          "include_custom_privacy_request_fields": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Custom Privacy Request Fields",
            "default": false
          },
          "include_deleted_requests": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Deleted Requests",
            "default": false
          },
          "download_csv": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Csv",
            "default": false
          },
          "sort_field": {
            "type": "string",
            "title": "Sort Field",
            "default": "created_at"
          },
          "sort_direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ColumnSort"
              }
            ],
            "default": "desc"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PrivacyRequestFilter"
      },
      "PrivacyRequestNotificationInfo": {
        "properties": {
          "email_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Email Addresses"
          },
          "notify_after_failures": {
            "type": "integer",
            "title": "Notify After Failures"
          }
        },
        "type": "object",
        "required": [
          "email_addresses",
          "notify_after_failures"
        ],
        "title": "PrivacyRequestNotificationInfo"
      },
      "PrivacyRequestResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "started_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Processing At"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestReviewer"
              },
              {
                "type": "null"
              }
            ]
          },
          "finished_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished Processing At"
          },
          "identity_verified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity Verified At"
          },
          "paused_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paused At"
          },
          "status": {
            "$ref": "#/components/schemas/PrivacyRequestStatus"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "identity": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity"
          },
          "custom_privacy_request_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyResponse"
          },
          "action_required_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CheckpointActionRequiredDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "resume_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Endpoint"
          },
          "days_left": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Left"
          },
          "custom_privacy_request_fields_approved_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields Approved By"
          },
          "custom_privacy_request_fields_approved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields Approved At"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          },
          "finalized_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalized At"
          },
          "finalized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalized By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "policy"
        ],
        "title": "PrivacyRequestResponse",
        "description": "Schema to check the status of a PrivacyRequest"
      },
      "PrivacyRequestResumeFormat": {
        "properties": {
          "derived_identity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          }
        },
        "type": "object",
        "title": "PrivacyRequestResumeFormat",
        "description": "Expected request body to resume a privacy request after it was paused by a webhook"
      },
      "PrivacyRequestReviewer": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username"
        ],
        "title": "PrivacyRequestReviewer",
        "description": "Data we can expose via the PrivacyRequest.reviewer relation"
      },
      "PrivacyRequestSource": {
        "type": "string",
        "enum": [
          "Privacy Center",
          "Request Manager",
          "Consent Webhook",
          "Fides.js",
          "Dataset Test",
          "Janus SDK"
        ],
        "title": "PrivacyRequestSource",
        "description": "The source where the privacy request originated from\n\n- Privacy Center: Request created from the Privacy Center\n- Request Manager: Request submitted from the Admin UI's Request manager page\n- Consent Webhook: Request created as a side-effect of a consent webhook request (bidirectional consent)\n- Fides.js: Request created as a side-effect of a privacy preference update from Fides.js\n- Dataset Test: Standalone dataset test\n- Janus SDK: Request created from the Mobile SDK"
      },
      "PrivacyRequestStatus": {
        "type": "string",
        "enum": [
          "identity_unverified",
          "requires_input",
          "pending",
          "approved",
          "denied",
          "in_processing",
          "complete",
          "paused",
          "awaiting_email_send",
          "requires_manual_finalization",
          "canceled",
          "error"
        ],
        "title": "PrivacyRequestStatus",
        "description": "Enum for privacy request statuses, reflecting where they are in the Privacy Request Lifecycle"
      },
      "PrivacyRequestTaskSchema": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ExecutionLogStatus"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "collection_address": {
            "type": "string",
            "title": "Collection Address"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "upstream_tasks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Upstream Tasks"
          },
          "downstream_tasks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Downstream Tasks"
          },
          "action_type": {
            "$ref": "#/components/schemas/ActionType"
          }
        },
        "type": "object",
        "required": [
          "status",
          "id",
          "collection_address",
          "created_at",
          "updated_at",
          "upstream_tasks",
          "downstream_tasks",
          "action_type"
        ],
        "title": "PrivacyRequestTaskSchema",
        "description": "Schema for Privacy Request Tasks, which are individual nodes that are queued"
      },
      "PrivacyRequestVerboseResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "started_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Processing At"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestReviewer"
              },
              {
                "type": "null"
              }
            ]
          },
          "finished_processing_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished Processing At"
          },
          "identity_verified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity Verified At"
          },
          "paused_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paused At"
          },
          "status": {
            "$ref": "#/components/schemas/PrivacyRequestStatus"
          },
          "external_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Id"
          },
          "identity": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity"
          },
          "custom_privacy_request_fields": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyResponse"
          },
          "action_required_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CheckpointActionRequiredDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "resume_endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Endpoint"
          },
          "days_left": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Left"
          },
          "custom_privacy_request_fields_approved_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields Approved By"
          },
          "custom_privacy_request_fields_approved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Privacy Request Fields Approved At"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivacyRequestSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By"
          },
          "finalized_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalized At"
          },
          "finalized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalized By"
          },
          "results": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ExecutionAndAuditLogResponse"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "policy",
          "results"
        ],
        "title": "PrivacyRequestVerboseResponse",
        "description": "The schema for the more detailed PrivacyRequest response containing both\ndetailed execution logs and audit logs."
      },
      "PrivacyRule": {
        "properties": {
          "matches": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MatchesEnum"
              }
            ],
            "description": "\n    The MatchesEnum resource model.\n\n    Determines how the listed resources are matched in the evaluation logic.\n    "
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Values",
            "description": "A list of fides keys to be used with the matching type in a privacy rule."
          }
        },
        "type": "object",
        "required": [
          "matches",
          "values"
        ],
        "title": "PrivacyRule",
        "description": "The PrivacyRule resource model.\n\nA list of privacy data types and what match method to use."
      },
      "QueryParam": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "QueryParam"
      },
      "QueueInfo": {
        "properties": {
          "messages": {
            "type": "integer",
            "title": "Messages"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "QueueInfo"
      },
      "RDSMySQLDocsSchema": {
        "properties": {
          "auth_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AWSAuthMethod"
              }
            ],
            "title": "Authentication Method",
            "description": "Determines which type of authentication method to use for connecting to Amazon Web Services. Currently accepted values are: `secret_keys` or `automatic`."
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Key ID",
            "description": "Part of the credentials that provide access to your AWS account."
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Access Key",
            "description": "Part of the credentials that provide access to your AWS account.",
            "sensitive": true
          },
          "aws_assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role ARN",
            "description": "If provided, the ARN of the role that should be assumed to connect to AWS."
          },
          "db_username": {
            "type": "string",
            "title": "DB Username",
            "description": "The user account used to authenticate and access the databases.",
            "default": "fides_service_user"
          },
          "region": {
            "type": "string",
            "title": "Region",
            "description": "The AWS region where the RDS instances are located."
          }
        },
        "type": "object",
        "required": [
          "auth_method",
          "region"
        ],
        "title": "RDSMySQLDocsSchema",
        "description": "RDS MySQL Secrets Schema for API Docs"
      },
      "RDSPostgresDocsSchema": {
        "properties": {
          "auth_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AWSAuthMethod"
              }
            ],
            "title": "Authentication Method",
            "description": "Determines which type of authentication method to use for connecting to Amazon Web Services. Currently accepted values are: `secret_keys` or `automatic`."
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Key ID",
            "description": "Part of the credentials that provide access to your AWS account."
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Access Key",
            "description": "Part of the credentials that provide access to your AWS account.",
            "sensitive": true
          },
          "aws_assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role ARN",
            "description": "If provided, the ARN of the role that should be assumed to connect to AWS."
          },
          "db_username": {
            "type": "string",
            "title": "DB Username",
            "description": "The user account used to authenticate and access the databases.",
            "default": "fides_service_user"
          },
          "region": {
            "type": "string",
            "title": "Region",
            "description": "The AWS region where the RDS instances are located."
          }
        },
        "type": "object",
        "required": [
          "auth_method",
          "region"
        ],
        "title": "RDSPostgresDocsSchema",
        "description": "RDS Postgres Secrets Schema for API Docs"
      },
      "RateLimit": {
        "properties": {
          "rate": {
            "type": "integer",
            "title": "Rate"
          },
          "period": {
            "$ref": "#/components/schemas/RateLimitPeriod"
          },
          "custom_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Key"
          }
        },
        "type": "object",
        "required": [
          "rate",
          "period"
        ],
        "title": "RateLimit",
        "description": "A config object which allows configuring rate limits for connectors"
      },
      "RateLimitConfig": {
        "properties": {
          "limits": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RateLimit"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limits"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled",
            "default": true
          }
        },
        "type": "object",
        "title": "RateLimitConfig",
        "description": "A config object which allows configuring rate limits for connectors"
      },
      "RateLimitPeriod": {
        "type": "string",
        "enum": [
          "second",
          "minute",
          "hour",
          "day"
        ],
        "title": "RateLimitPeriod",
        "description": "Defines the periods supported by rate limit config"
      },
      "ReadSaaSRequest": {
        "properties": {
          "request_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Override"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HTTPMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "headers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Header"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": []
          },
          "query_params": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/QueryParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params",
            "default": []
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "param_values": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ParamValue"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Param Values",
            "default": []
          },
          "client_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClientConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Path"
          },
          "postprocessors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Strategy"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postprocessors"
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Strategy"
              },
              {
                "type": "null"
              }
            ]
          },
          "grouped_inputs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grouped Inputs",
            "default": []
          },
          "ignore_errors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Errors",
            "default": false
          },
          "rate_limit_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateLimitConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "async_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AsyncConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_missing_param_values": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Missing Param Values",
            "default": false
          },
          "output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ReadSaaSRequest",
        "description": "An extension of the base SaaSRequest that allows the inclusion of an output template\nthat is used to format each collection result."
      },
      "RedshiftDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 5439).",
            "default": 5439
          },
          "user": {
            "type": "string",
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "database": {
            "type": "string",
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          },
          "db_schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "The default schema to be used for the database connection (defaults to public)."
          },
          "ssh_required": {
            "type": "boolean",
            "title": "SSH required",
            "description": "Indicates whether an SSH tunnel is required for the connection. Enable this option if your Redshift database is behind a firewall and requires SSH tunneling for remote connections.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "host",
          "user",
          "password",
          "database"
        ],
        "title": "RedshiftDocsSchema",
        "description": "Redshift Secrets Schema for API Docs"
      },
      "Registration": {
        "properties": {
          "opt_in": {
            "type": "boolean",
            "title": "Opt In"
          },
          "analytics_id": {
            "type": "string",
            "title": "Analytics Id"
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email"
          },
          "user_organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Organization"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "opt_in",
          "analytics_id",
          "user_email",
          "user_organization"
        ],
        "title": "Registration",
        "description": "Describes a Fides registration."
      },
      "RequestTaskCallbackRequest": {
        "properties": {
          "access_results": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Results",
            "description": "Access results collected asynchronously, as a list of rows.  Use caution; this data may be used by dependent tasks downstream and/or uploaded to the end user."
          },
          "rows_masked": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rows Masked",
            "description": "Number of records masked, as an integer"
          }
        },
        "type": "object",
        "title": "RequestTaskCallbackRequest",
        "description": "Request body for Async Callback"
      },
      "ResourceFilter": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The type of filter to be used (i.e. ignore_resource_arn)"
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "A string representation of resources to be filtered. Can include wildcards."
          }
        },
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "title": "ResourceFilter",
        "description": "The ResourceFilter resource model."
      },
      "ResponseFormat": {
        "type": "string",
        "enum": [
          "json",
          "csv",
          "html"
        ],
        "title": "ResponseFormat",
        "description": "Response formats"
      },
      "ResponseWithMessage": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ResponseWithMessage",
        "description": "Generic schema for responses with a message"
      },
      "ReviewPrivacyRequestIds": {
        "properties": {
          "request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Request Ids"
          }
        },
        "type": "object",
        "required": [
          "request_ids"
        ],
        "title": "ReviewPrivacyRequestIds",
        "description": "Pass in a list of privacy request ids"
      },
      "RoleRegistryEnum": {
        "type": "string",
        "enum": [
          "owner",
          "viewer_and_approver",
          "viewer",
          "approver",
          "contributor",
          "respondent",
          "external_respondent"
        ],
        "title": "RoleRegistryEnum",
        "description": "Enum of available roles\n\nOwner - Full admin\nViewer - Can view everything\nApprover - Limited viewer but can approve Privacy Requests\nViewer + Approver = Full View and can approve Privacy Requests\nContributor - Can't configure storage and messaging\nRespondent - Internal user who can respond to manual steps\nExternal Respondent - External user who can only respond to assigned manual steps"
      },
      "RuleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "action_type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "storage_destination_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Destination Key"
          },
          "masking_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PolicyMaskingSpec"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "action_type"
        ],
        "title": "RuleCreate",
        "description": "The schema to use when creating a Rule. This schema accepts a storage_destination_key\nover a composite object."
      },
      "RuleResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "action_type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "storage_destination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageDestinationResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "masking_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PolicyMaskingSpecResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "action_type"
        ],
        "title": "RuleResponse",
        "description": "The schema to use when returning a Rule via the API. This schema uses a censored version\nof the `PolicyMaskingSpec` that omits the configuration to avoid exposing secrets."
      },
      "RuleResponseWithTargets": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "action_type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "targets": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RuleTarget"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targets"
          },
          "storage_destination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageDestinationResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "masking_strategy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PolicyMaskingSpecResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "action_type"
        ],
        "title": "RuleResponseWithTargets",
        "description": "The schema to use when returning a Rule via the API and when including the Rule's targets\nis desired. This schema uses a censored version of the `PolicyMaskingSpec` that omits the\nconfiguration to avoid exposing secrets."
      },
      "RuleTarget": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "data_category": {
            "type": "string",
            "title": "Data Category"
          }
        },
        "type": "object",
        "required": [
          "data_category"
        ],
        "title": "RuleTarget",
        "description": "An external representation of a Rule's target DataCategory within a Fidesops Policy"
      },
      "S3DocsSchema": {
        "properties": {
          "auth_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AWSAuthMethod"
              }
            ],
            "title": "Authentication Method",
            "description": "Determines which type of authentication method to use for connecting to Amazon Web Services. Currently accepted values are: `secret_keys` or `automatic`."
          },
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Key ID",
            "description": "Part of the credentials that provide access to your AWS account."
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Access Key",
            "description": "Part of the credentials that provide access to your AWS account.",
            "sensitive": true
          },
          "aws_assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role ARN",
            "description": "If provided, the ARN of the role that should be assumed to connect to AWS."
          }
        },
        "type": "object",
        "required": [
          "auth_method"
        ],
        "title": "S3DocsSchema",
        "description": "S3 Secrets Schema for API Docs"
      },
      "SaaSConfig": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "replaceable": {
            "type": "boolean",
            "title": "Replaceable",
            "default": false
          },
          "connector_params": {
            "items": {
              "$ref": "#/components/schemas/ConnectorParam"
            },
            "type": "array",
            "title": "Connector Params"
          },
          "external_references": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExternalDatasetReference"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "External References"
          },
          "client_config": {
            "$ref": "#/components/schemas/ClientConfig"
          },
          "endpoints": {
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            },
            "type": "array",
            "title": "Endpoints"
          },
          "test_request": {
            "$ref": "#/components/schemas/SaaSRequest"
          },
          "data_protection_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "rate_limit_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateLimitConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "consent_requests": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConsentRequestMap"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_guide": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Guide"
          },
          "display_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSDisplayInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "name",
          "type",
          "description",
          "version",
          "connector_params",
          "client_config",
          "endpoints",
          "test_request"
        ],
        "title": "SaaSConfig",
        "description": "Used to store endpoint and param configurations for a SaaS connector.\nThis is done to separate the details of how to make the API calls\nfrom the data provided by a given API collection.\n\nThe required fields for the config are converted into a Dataset which is\nmerged with the standard Fidesops Dataset to provide a complete set of dependencies\nfor the graph traversal."
      },
      "SaaSConfigBase": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "name",
          "type"
        ],
        "title": "SaaSConfigBase",
        "description": "Used to store base info for a SaaS config"
      },
      "SaaSConfigValidationDetails": {
        "properties": {
          "msg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Msg"
          }
        },
        "type": "object",
        "title": "SaaSConfigValidationDetails",
        "description": "Message with any validation issues with the SaaS config"
      },
      "SaaSDisplayInfo": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "enabled_features": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IntegrationFeature"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Features"
          }
        },
        "type": "object",
        "title": "SaaSDisplayInfo",
        "description": "Optional display information for SAAS integrations to enhance frontend presentation.\nWhen not provided, smart defaults will be inferred based on the integration type."
      },
      "SaaSRequest": {
        "properties": {
          "request_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Override"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HTTPMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "headers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Header"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers",
            "default": []
          },
          "query_params": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/QueryParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params",
            "default": []
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "param_values": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ParamValue"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Param Values",
            "default": []
          },
          "client_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClientConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Path"
          },
          "postprocessors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Strategy"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postprocessors"
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Strategy"
              },
              {
                "type": "null"
              }
            ]
          },
          "grouped_inputs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grouped Inputs",
            "default": []
          },
          "ignore_errors": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Errors",
            "default": false
          },
          "rate_limit_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateLimitConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "async_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AsyncConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "skip_missing_param_values": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Missing Param Values",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SaaSRequest",
        "description": "A single request with static or dynamic path, headers, query, and body params.\nAlso specifies the names and sources for the param values needed to build the request.\n\nIncludes optional strategies for postprocessing and pagination."
      },
      "SaaSRequestMap": {
        "properties": {
          "read": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadSaaSRequest"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ReadSaaSRequest"
                },
                "type": "array"
              }
            ],
            "title": "Read",
            "default": []
          },
          "update": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "delete": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SaaSRequest"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SaaSRequestMap",
        "description": "A map of actions to SaaS requests"
      },
      "SaaSSchema": {
        "properties": {},
        "additionalProperties": true,
        "type": "object",
        "title": "SaaSSchema",
        "description": "Abstract base schema for updating SaaS connection configuration secrets.\nFields are added during runtime based on the connector_params and any\nexternal_references in the passed in saas_config"
      },
      "SaasConnectionTemplateResponse": {
        "properties": {
          "connection": {
            "$ref": "#/components/schemas/ConnectionConfigurationResponse"
          },
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          }
        },
        "type": "object",
        "required": [
          "connection",
          "dataset"
        ],
        "title": "SaasConnectionTemplateResponse"
      },
      "SaasConnectionTemplateValues": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "secrets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BigQueryDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DatahubDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DynamicErasureEmailDocsSchema"
              },
              {
                "$ref": "#/components/schemas/DynamoDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/EmailDocsSchema"
              },
              {
                "$ref": "#/components/schemas/FidesDocsSchema"
              },
              {
                "$ref": "#/components/schemas/GoogleCloudSQLMySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/GoogleCloudSQLPostgresDocsSchema"
              },
              {
                "$ref": "#/components/schemas/ManualWebhookDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MariaDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MongoDBDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MSSQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/MySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/OktaDocsSchema"
              },
              {
                "$ref": "#/components/schemas/PostgreSQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RDSMySQLDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RDSPostgresDocsSchema"
              },
              {
                "$ref": "#/components/schemas/RedshiftDocsSchema"
              },
              {
                "$ref": "#/components/schemas/S3DocsSchema"
              },
              {
                "$ref": "#/components/schemas/SaaSSchema"
              },
              {
                "$ref": "#/components/schemas/ScyllaDocsSchema"
              },
              {
                "$ref": "#/components/schemas/SnowflakeDocsSchema"
              },
              {
                "$ref": "#/components/schemas/SovrnDocsSchema"
              },
              {
                "$ref": "#/components/schemas/TimescaleDocsSchema"
              },
              {
                "$ref": "#/components/schemas/WebsiteSchema"
              }
            ],
            "title": "Secrets"
          },
          "instance_key": {
            "type": "string",
            "title": "Instance Key"
          }
        },
        "type": "object",
        "required": [
          "secrets",
          "instance_key"
        ],
        "title": "SaasConnectionTemplateValues",
        "description": "Schema with values to create both a Saas ConnectionConfig and DatasetConfig from a template"
      },
      "ScopeRegistryEnum": {
        "type": "string",
        "enum": [
          "config:read",
          "config:update",
          "cli-objects:create",
          "cli-objects:read",
          "cli-objects:update",
          "cli-objects:delete",
          "client:create",
          "client:delete",
          "client:read",
          "client:update",
          "connection:create_or_update",
          "connection:delete",
          "connection:read",
          "connection:authorize",
          "connection_type:read",
          "connector_template:register",
          "consent:read",
          "consent_settings:read",
          "consent_settings:update",
          "ctl_dataset:create",
          "ctl_dataset:read",
          "ctl_dataset:delete",
          "ctl_dataset:update",
          "ctl_policy:create",
          "ctl_policy:read",
          "ctl_policy:delete",
          "ctl_policy:update",
          "current-privacy-preference:read",
          "database:reset",
          "data_category:create",
          "data_category:delete",
          "data_category:read",
          "data_category:update",
          "data_subject:create",
          "data_subject:read",
          "data_subject:delete",
          "data_subject:update",
          "data_use:create",
          "data_use:read",
          "data_use:delete",
          "data_use:update",
          "dataset:create_or_update",
          "dataset:delete",
          "dataset:read",
          "dataset:test",
          "encryption:exec",
          "messaging-template:update",
          "evaluation:create",
          "evaluation:read",
          "evaluation:delete",
          "evaluation:update",
          "fides_taxonomy:update",
          "generate:exec",
          "masking:exec",
          "masking:read",
          "messaging:create_or_update",
          "messaging:delete",
          "messaging:read",
          "organization:create",
          "organization:read",
          "organization:delete",
          "organization:update",
          "policy:create_or_update",
          "policy:delete",
          "policy:read",
          "privacy-experience:create",
          "privacy-experience:update",
          "privacy-experience:read",
          "privacy-notice:create",
          "privacy-notice:update",
          "privacy-notice:read",
          "privacy-preference-history:read",
          "privacy-request:create",
          "privacy-request:resume",
          "privacy-request-access-results:read",
          "privacy-request:delete",
          "privacy-request-email-integrations:send",
          "privacy-request:manual-steps:respond",
          "privacy-request:manual-steps:review",
          "privacy-request-notifications:create_or_update",
          "privacy-request-notifications:read",
          "privacy-request:read",
          "privacy-request:review",
          "privacy-request:transfer",
          "privacy-request:upload_data",
          "privacy-request:view_data",
          "rule:create_or_update",
          "rule:delete",
          "rule:read",
          "saas_config:create_or_update",
          "saas_config:delete",
          "saas_config:read",
          "connection:instantiate",
          "scope:read",
          "storage:create_or_update",
          "storage:delete",
          "storage:read",
          "system:create",
          "system:read",
          "system:delete",
          "system:update",
          "system_manager:read",
          "system_manager:delete",
          "system_manager:update",
          "taxonomy:create",
          "taxonomy:delete",
          "taxonomy:update",
          "user:create",
          "user:update",
          "user:delete",
          "user:read",
          "user:read-own",
          "user:password-reset",
          "user-permission:create",
          "user-permission:update",
          "user-permission:assign_owners",
          "user-permission:read",
          "validate:exec",
          "webhook:create_or_update",
          "webhook:delete",
          "webhook:read",
          "worker-stats:read"
        ],
        "title": "ScopeRegistryEnum"
      },
      "ScyllaDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 9042).",
            "default": 9042
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "keyspace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keyspace",
            "description": "The keyspace used. If not provided, DSRs for this integration will error. If the integration is used for D & D, then setting a keyspace is not required."
          }
        },
        "type": "object",
        "required": [
          "host",
          "username",
          "password"
        ],
        "title": "ScyllaDocsSchema",
        "description": "Scylla Secrets Schema for API docs"
      },
      "SecurityApplicationConfig": {
        "properties": {
          "cors_origins": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cors Origins",
            "description": "A list of client addresses allowed to communicate with the Fides webserver."
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SecurityApplicationConfig"
      },
      "SnowflakeDocsSchema": {
        "properties": {
          "account_identifier": {
            "type": "string",
            "title": "Account Name",
            "description": "The unique identifier for your Snowflake account."
          },
          "user_login_name": {
            "type": "string",
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "The password used to authenticate and access the database. You can use a password or a private key, but not both.",
            "sensitive": true
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private key",
            "description": "The private key used to authenticate and access the database. If a `private_key_passphrase` is also provided, it is assumed to be encrypted; otherwise, it is assumed to be unencrypted.",
            "sensitive": true
          },
          "private_key_passphrase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Passphrase",
            "description": "The passphrase used for the encrypted private key.",
            "sensitive": true
          },
          "warehouse_name": {
            "type": "string",
            "title": "Warehouse",
            "description": "The name of the Snowflake warehouse where your queries will be executed."
          },
          "database_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database",
            "description": "Only provide a database name to scope discovery monitors and privacy request automation to a specific database. In most cases, this can be left blank."
          },
          "schema_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "Only provide a schema to scope discovery monitors and privacy request automation to a specific schema. In most cases, this can be left blank."
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "The Snowflake role to assume for the session, if different than Username."
          }
        },
        "type": "object",
        "required": [
          "account_identifier",
          "user_login_name",
          "warehouse_name"
        ],
        "title": "SnowflakeDocsSchema",
        "description": "Snowflake Secrets Schema for API Docs"
      },
      "SovrnDocsSchema": {
        "properties": {
          "test_email_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Email Address"
          },
          "advanced_settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedSettingsWithExtendedIdentityTypes"
              }
            ],
            "default": {
              "identity_types": {
                "cookie_ids": [
                  "ljt_readerID"
                ],
                "email": false,
                "phone_number": false
              }
            }
          },
          "third_party_vendor_name": {
            "type": "string",
            "title": "Third Party Vendor Name",
            "default": "Sovrn"
          },
          "recipient_email_address": {
            "type": "string",
            "format": "email",
            "title": "Recipient Email Address",
            "default": "privacy@sovrn.com"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SovrnDocsSchema",
        "description": "SovrnDocsSchema Secrets Schema for API Docs"
      },
      "SpecialCategoryLegalBasisEnum": {
        "type": "string",
        "enum": [
          "Explicit consent",
          "Employment, social security and social protection",
          "Vital interests",
          "Not-for-profit bodies",
          "Made public by the data subject",
          "Legal claims or judicial acts",
          "Reasons of substantial public interest (with a basis in law)",
          "Health or social care (with a basis in law)",
          "Public health (with a basis in law)",
          "Archiving, research and statistics (with a basis in law)"
        ],
        "title": "SpecialCategoryLegalBasisEnum",
        "description": "The model for the legal basis for processing special categories of personal data\non privacy declarations\n\nBased upon article 9 of the GDPR"
      },
      "SqlDryRunMode": {
        "type": "string",
        "enum": [
          "none",
          "access",
          "erasure"
        ],
        "title": "SqlDryRunMode",
        "description": "SQL dry run mode for controlling execution of SQL statements in privacy requests"
      },
      "StatusEnum": {
        "type": "string",
        "enum": [
          "FAIL",
          "PASS"
        ],
        "title": "StatusEnum",
        "description": "The model for possible evaluation results."
      },
      "StorageApplicationConfig": {
        "properties": {
          "active_default_storage_type": {
            "$ref": "#/components/schemas/StorageTypeApiAccepted"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "active_default_storage_type"
        ],
        "title": "StorageApplicationConfig"
      },
      "StorageConfigStatus": {
        "type": "string",
        "enum": [
          "configured",
          "not configured"
        ],
        "title": "StorageConfigStatus",
        "description": "Enum for configuration statuses of a storage config"
      },
      "StorageConfigStatusMessage": {
        "properties": {
          "config_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageConfigStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "StorageConfigStatusMessage",
        "description": "A schema for checking configuration status of storage config."
      },
      "StorageDestination": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StorageType"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageDetailsS3"
              },
              {
                "$ref": "#/components/schemas/StorageDetailsGCS"
              },
              {
                "$ref": "#/components/schemas/StorageDetailsLocal"
              }
            ],
            "title": "Details"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormat"
              },
              {
                "type": "null"
              }
            ],
            "default": "json"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "details",
          "name"
        ],
        "title": "StorageDestination",
        "description": "Storage Destination Schema"
      },
      "StorageDestinationBase": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StorageType"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StorageDetailsS3"
              },
              {
                "$ref": "#/components/schemas/StorageDetailsGCS"
              },
              {
                "$ref": "#/components/schemas/StorageDetailsLocal"
              }
            ],
            "title": "Details"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormat"
              },
              {
                "type": "null"
              }
            ],
            "default": "json"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "details"
        ],
        "title": "StorageDestinationBase",
        "description": "Storage Destination Schema -- used for setting defaults"
      },
      "StorageDestinationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/StorageType"
          },
          "details": {
            "type": "object",
            "title": "Details"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "format": {
            "$ref": "#/components/schemas/ResponseFormat"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "details",
          "key",
          "format"
        ],
        "title": "StorageDestinationResponse",
        "description": "Storage Destination Response Schema"
      },
      "StorageDetails": {
        "enum": [
          "bucket",
          "naming",
          "max_retries",
          "auth_method",
          "enable_streaming",
          "enable_access_package_redirect",
          {
            "extra": "forbid"
          }
        ],
        "title": "StorageDetails",
        "description": "Enum for storage detail keys"
      },
      "StorageDetailsGCS": {
        "properties": {
          "naming": {
            "type": "string",
            "title": "Naming",
            "default": "request_id"
          },
          "auth_method": {
            "$ref": "#/components/schemas/GCSAuthMethod"
          },
          "bucket": {
            "type": "string",
            "title": "Bucket"
          },
          "max_retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Retries",
            "default": 0
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "auth_method",
          "bucket"
        ],
        "title": "StorageDetailsGCS",
        "description": "The details required to represent a Google Cloud Storage bucket."
      },
      "StorageDetailsLocal": {
        "properties": {
          "naming": {
            "type": "string",
            "title": "Naming",
            "default": "request_id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StorageDetailsLocal",
        "description": "The details required to configurate local storage configuration"
      },
      "StorageDetailsS3": {
        "properties": {
          "naming": {
            "type": "string",
            "title": "Naming",
            "default": "request_id"
          },
          "auth_method": {
            "$ref": "#/components/schemas/AWSAuthMethod"
          },
          "bucket": {
            "type": "string",
            "title": "Bucket"
          },
          "max_retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Retries",
            "default": 0
          },
          "enable_streaming": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Streaming",
            "default": false
          },
          "enable_access_package_redirect": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Access Package Redirect",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "auth_method",
          "bucket"
        ],
        "title": "StorageDetailsS3",
        "description": "The details required to represent an AWS S3 storage bucket."
      },
      "StorageSecretsGCSDocs": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "service_account"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "private_key_id": {
            "type": "string",
            "title": "Private Key Id"
          },
          "private_key": {
            "type": "string",
            "title": "Private Key"
          },
          "client_email": {
            "type": "string",
            "title": "Client Email"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "auth_uri": {
            "type": "string",
            "title": "Auth Uri"
          },
          "token_uri": {
            "type": "string",
            "title": "Token Uri"
          },
          "auth_provider_x509_cert_url": {
            "type": "string",
            "title": "Auth Provider X509 Cert Url"
          },
          "client_x509_cert_url": {
            "type": "string",
            "title": "Client X509 Cert Url"
          },
          "universe_domain": {
            "type": "string",
            "title": "Universe Domain"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "project_id",
          "private_key_id",
          "private_key",
          "client_email",
          "client_id",
          "auth_uri",
          "token_uri",
          "auth_provider_x509_cert_url",
          "client_x509_cert_url",
          "universe_domain"
        ],
        "title": "StorageSecretsGCSDocs",
        "description": "The secrets required to connect to Google Cloud Storage, for documentation"
      },
      "StorageSecretsS3Docs": {
        "properties": {
          "aws_access_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Access Key Id"
          },
          "aws_secret_access_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aws Secret Access Key"
          },
          "region_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Name"
          },
          "assume_role_arn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assume Role Arn"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "StorageSecretsS3Docs",
        "description": "The secrets required to connect to S3, for documentation"
      },
      "StorageType": {
        "type": "string",
        "enum": [
          "s3",
          "gcs",
          "transcend",
          "ethyca",
          "local"
        ],
        "title": "StorageType",
        "description": "Enum for storage destination types"
      },
      "StorageTypeApiAccepted": {
        "type": "string",
        "enum": [
          "s3",
          "gcs",
          "local"
        ],
        "title": "StorageTypeApiAccepted",
        "description": "Enum for storage destination types accepted in API updates"
      },
      "Strategy": {
        "properties": {
          "strategy": {
            "type": "string",
            "title": "Strategy"
          },
          "configuration": {
            "type": "object",
            "title": "Configuration"
          }
        },
        "type": "object",
        "required": [
          "strategy",
          "configuration"
        ],
        "title": "Strategy",
        "description": "General shape for swappable strategies (ex: auth, processors, pagination, etc.)"
      },
      "System": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "An optional property to store any extra information for a resource. Data can be structured in any way: simple set of `key: value` pairs or deeply nested objects."
          },
          "fidesctl_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The SystemMetadata resource model.\n\n    Object used to hold application specific metadata for a system\n    "
          },
          "system_type": {
            "type": "string",
            "title": "System Type",
            "description": "A required value to describe the type of system being modeled, examples include: Service, Application, Third Party, etc."
          },
          "egress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Egress",
            "description": "The resources to which the system sends data."
          },
          "ingress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress",
            "description": "The resources from which the system receives data."
          },
          "privacy_declarations": {
            "items": {
              "$ref": "#/components/schemas/PrivacyDeclaration"
            },
            "type": "array",
            "title": "Privacy Declarations",
            "description": "\n    The PrivacyDeclaration resource model.\n\n    States a function of a system, and describes how it relates\n    to the privacy data types.\n    "
          },
          "administrating_department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Administrating Department",
            "description": "An optional value to identify the owning department or group of the system within your organization",
            "default": "Not defined"
          },
          "vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Id",
            "description": "The unique identifier for the vendor that's associated with this system."
          },
          "previous_vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Vendor Id",
            "description": "If specified, the unique identifier for the vendor that was previously associated with this system."
          },
          "vendor_deleted_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Deleted Date",
            "description": "The deleted date of the vendor that's associated with this system."
          },
          "dataset_references": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dataset References",
            "description": "Referenced Dataset fides keys used by the system."
          },
          "processes_personal_data": {
            "type": "boolean",
            "title": "Processes Personal Data",
            "description": "This toggle indicates whether the system stores or processes personal data.",
            "default": true
          },
          "exempt_from_privacy_regulations": {
            "type": "boolean",
            "title": "Exempt From Privacy Regulations",
            "description": "This toggle indicates whether the system is exempt from privacy regulation if they do process personal data.",
            "default": false
          },
          "reason_for_exemption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason For Exemption",
            "description": "The reason that the system is exempt from privacy regulation."
          },
          "uses_profiling": {
            "type": "boolean",
            "title": "Uses Profiling",
            "description": "Whether the vendor uses data to profile a consumer in a way that has a legal effect.",
            "default": false
          },
          "legal_basis_for_profiling": {
            "items": {
              "$ref": "#/components/schemas/LegalBasisForProfilingEnum"
            },
            "type": "array",
            "title": "Legal Basis For Profiling",
            "description": "The legal basis (or bases) for performing profiling that has a legal effect."
          },
          "does_international_transfers": {
            "type": "boolean",
            "title": "Does International Transfers",
            "description": "Whether this system transfers data to other countries or international organizations.",
            "default": false
          },
          "legal_basis_for_transfers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Legal Basis For Transfers",
            "description": "The legal basis (or bases) under which the data is transferred."
          },
          "requires_data_protection_assessments": {
            "type": "boolean",
            "title": "Requires Data Protection Assessments",
            "description": "Whether this system requires data protection impact assessments.",
            "default": false
          },
          "dpa_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Location",
            "description": "Location where the DPAs or DIPAs can be found."
          },
          "dpa_progress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Progress",
            "description": "The optional status of a Data Protection Impact Assessment"
          },
          "privacy_policy": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privacy Policy",
            "description": "A URL that points to the system's publicly accessible privacy policy."
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name",
            "description": "The legal name for the business represented by the system."
          },
          "legal_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Address",
            "description": "The legal address for the business represented by the system."
          },
          "responsibility": {
            "items": {
              "$ref": "#/components/schemas/DataResponsibilityTitle"
            },
            "type": "array",
            "title": "Responsibility",
            "description": "\n    The model defining the responsibility or role over\n    the system that processes personal data.\n\n    Used to identify whether the organization is a\n    Controller, Processor, or Sub-Processor of the data\n    "
          },
          "dpo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpo",
            "description": "The official privacy contact address or DPO."
          },
          "joint_controller_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joint Controller Info",
            "description": "The party or parties that share the responsibility for processing personal data."
          },
          "data_security_practices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Security Practices",
            "description": "The data security practices employed by this system."
          },
          "cookie_max_age_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cookie Max Age Seconds",
            "description": "The maximum storage duration, in seconds, for cookies used by this system."
          },
          "uses_cookies": {
            "type": "boolean",
            "title": "Uses Cookies",
            "description": "Whether this system uses cookie storage.",
            "default": false
          },
          "cookie_refresh": {
            "type": "boolean",
            "title": "Cookie Refresh",
            "description": "Whether the system's cookies are refreshed after being initially set.",
            "default": false
          },
          "uses_non_cookie_access": {
            "type": "boolean",
            "title": "Uses Non Cookie Access",
            "description": "Whether the system uses non-cookie methods of storage or accessing information stored on a user's device.",
            "default": false
          },
          "legitimate_interest_disclosure_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legitimate Interest Disclosure Url",
            "description": "A URL that points to the system's publicly accessible legitimate interest disclosure."
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "system_type",
          "privacy_declarations"
        ],
        "title": "System",
        "description": "The System resource model.\n\nDescribes an application and includes a list of PrivacyDeclaration resources."
      },
      "SystemMetadata": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id",
            "description": "The external resource id for the system being modeled."
          },
          "endpoint_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Address",
            "description": "The host of the external resource for the system being modeled."
          },
          "endpoint_port": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Port",
            "description": "The port of the external resource for the system being modeled."
          }
        },
        "type": "object",
        "title": "SystemMetadata",
        "description": "The SystemMetadata resource model.\n\nObject used to hold application specific metadata for a system"
      },
      "SystemResponse": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "An optional property to store any extra information for a resource. Data can be structured in any way: simple set of `key: value` pairs or deeply nested objects."
          },
          "fidesctl_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    The SystemMetadata resource model.\n\n    Object used to hold application specific metadata for a system\n    "
          },
          "system_type": {
            "type": "string",
            "title": "System Type",
            "description": "A required value to describe the type of system being modeled, examples include: Service, Application, Third Party, etc."
          },
          "egress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Egress",
            "description": "The resources to which the system sends data."
          },
          "ingress": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DataFlow"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingress",
            "description": "The resources from which the system receives data."
          },
          "privacy_declarations": {
            "items": {
              "$ref": "#/components/schemas/PrivacyDeclarationResponse"
            },
            "type": "array",
            "title": "Privacy Declarations",
            "description": "Extension of base pydantic model to include DB `id` field in the response"
          },
          "administrating_department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Administrating Department",
            "description": "An optional value to identify the owning department or group of the system within your organization",
            "default": "Not defined"
          },
          "vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Id",
            "description": "The unique identifier for the vendor that's associated with this system."
          },
          "previous_vendor_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Vendor Id",
            "description": "If specified, the unique identifier for the vendor that was previously associated with this system."
          },
          "vendor_deleted_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor Deleted Date",
            "description": "The deleted date of the vendor that's associated with this system."
          },
          "dataset_references": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dataset References",
            "description": "Referenced Dataset fides keys used by the system."
          },
          "processes_personal_data": {
            "type": "boolean",
            "title": "Processes Personal Data",
            "description": "This toggle indicates whether the system stores or processes personal data.",
            "default": true
          },
          "exempt_from_privacy_regulations": {
            "type": "boolean",
            "title": "Exempt From Privacy Regulations",
            "description": "This toggle indicates whether the system is exempt from privacy regulation if they do process personal data.",
            "default": false
          },
          "reason_for_exemption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason For Exemption",
            "description": "The reason that the system is exempt from privacy regulation."
          },
          "uses_profiling": {
            "type": "boolean",
            "title": "Uses Profiling",
            "description": "Whether the vendor uses data to profile a consumer in a way that has a legal effect.",
            "default": false
          },
          "legal_basis_for_profiling": {
            "items": {
              "$ref": "#/components/schemas/LegalBasisForProfilingEnum"
            },
            "type": "array",
            "title": "Legal Basis For Profiling",
            "description": "The legal basis (or bases) for performing profiling that has a legal effect."
          },
          "does_international_transfers": {
            "type": "boolean",
            "title": "Does International Transfers",
            "description": "Whether this system transfers data to other countries or international organizations.",
            "default": false
          },
          "legal_basis_for_transfers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Legal Basis For Transfers",
            "description": "The legal basis (or bases) under which the data is transferred."
          },
          "requires_data_protection_assessments": {
            "type": "boolean",
            "title": "Requires Data Protection Assessments",
            "description": "Whether this system requires data protection impact assessments.",
            "default": false
          },
          "dpa_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Location",
            "description": "Location where the DPAs or DIPAs can be found."
          },
          "dpa_progress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpa Progress",
            "description": "The optional status of a Data Protection Impact Assessment"
          },
          "privacy_policy": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Privacy Policy",
            "description": "A URL that points to the system's publicly accessible privacy policy."
          },
          "legal_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Name",
            "description": "The legal name for the business represented by the system."
          },
          "legal_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legal Address",
            "description": "The legal address for the business represented by the system."
          },
          "responsibility": {
            "items": {
              "$ref": "#/components/schemas/DataResponsibilityTitle"
            },
            "type": "array",
            "title": "Responsibility",
            "description": "\n    The model defining the responsibility or role over\n    the system that processes personal data.\n\n    Used to identify whether the organization is a\n    Controller, Processor, or Sub-Processor of the data\n    "
          },
          "dpo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dpo",
            "description": "The official privacy contact address or DPO."
          },
          "joint_controller_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joint Controller Info",
            "description": "The party or parties that share the responsibility for processing personal data."
          },
          "data_security_practices": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Security Practices",
            "description": "The data security practices employed by this system."
          },
          "cookie_max_age_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cookie Max Age Seconds",
            "description": "The maximum storage duration, in seconds, for cookies used by this system."
          },
          "uses_cookies": {
            "type": "boolean",
            "title": "Uses Cookies",
            "description": "Whether this system uses cookie storage.",
            "default": false
          },
          "cookie_refresh": {
            "type": "boolean",
            "title": "Cookie Refresh",
            "description": "Whether the system's cookies are refreshed after being initially set.",
            "default": false
          },
          "uses_non_cookie_access": {
            "type": "boolean",
            "title": "Uses Non Cookie Access",
            "description": "Whether the system uses non-cookie methods of storage or accessing information stored on a user's device.",
            "default": false
          },
          "legitimate_interest_disclosure_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legitimate Interest Disclosure Url",
            "description": "A URL that points to the system's publicly accessible legitimate interest disclosure."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "connection_configs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionConfigurationResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "\n    Describes the returned schema for a ConnectionConfiguration.\n    "
          },
          "data_stewards": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Stewards",
            "description": "System managers of the current system"
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "system_type",
          "privacy_declarations",
          "created_at",
          "connection_configs",
          "data_stewards"
        ],
        "title": "SystemResponse",
        "description": "Extension of base pydantic response model to include additional relationship fields that\nmay require extra DB queries, like `privacy_declarations`, connection_config fields and cookies.\n\nThis response model is generally useful for an API that returns a detailed view of _single_\nSystem record. Attempting to return bulk results with this model can lead to n+1 query issues."
      },
      "SystemType": {
        "type": "string",
        "enum": [
          "data_catalog",
          "database",
          "email",
          "manual",
          "saas",
          "system",
          "website"
        ],
        "title": "SystemType"
      },
      "TaskDetails": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "args": {
            "items": {},
            "type": "array",
            "title": "Args"
          },
          "keyword_args": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keyword Args"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "task_name",
          "args"
        ],
        "title": "TaskDetails"
      },
      "TestMessagingStatusMessage": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg"
          },
          "test_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessagingConnectionTestStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Reason"
          }
        },
        "type": "object",
        "required": [
          "msg"
        ],
        "title": "TestMessagingStatusMessage",
        "description": "A schema for testing functionality of a messaging config."
      },
      "TestPrivacyRequest": {
        "properties": {
          "privacy_request_id": {
            "type": "string",
            "title": "Privacy Request Id"
          }
        },
        "type": "object",
        "required": [
          "privacy_request_id"
        ],
        "title": "TestPrivacyRequest",
        "description": "Schema containing the data for a test privacy request"
      },
      "TestStatus": {
        "type": "string",
        "enum": [
          "passed",
          "failed",
          "untested"
        ],
        "title": "TestStatus"
      },
      "TestStatusMessage": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Msg"
          },
          "test_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConnectionTestStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Reason"
          }
        },
        "type": "object",
        "required": [
          "msg"
        ],
        "title": "TestStatusMessage",
        "description": "A schema for checking status."
      },
      "TimeBasedPartitioning": {
        "properties": {
          "field": {
            "type": "string",
            "title": "Field",
            "description": "Column name to partition on (e.g., `created_at`, `updated_at`)"
          },
          "start": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "Start time expression. Supported formats: `NOW()`, `TODAY()`, `TIMESTAMP(TODAY())`, `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS`, or arithmetic expressions like `NOW() - 30 DAYS`, `TIMESTAMP(TODAY() - 30 DAYS)`."
          },
          "end": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "End time expression. Same formats as start field."
          },
          "interval": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval",
            "description": "Interval expression defining the size of each partition in `DAY(S)`, `WEEK(S)`, `MONTH(S)`, or `YEAR(S)`."
          }
        },
        "type": "object",
        "required": [
          "field"
        ],
        "title": "TimeBasedPartitioning",
        "description": "Allows you to partition data based on time ranges using various\ntime expressions and intervals.",
        "examples": [
          {
            "end": "NOW()",
            "field": "created_at",
            "interval": "7 DAYS",
            "start": "NOW() - 30 DAYS"
          },
          {
            "end": "2024-12-31",
            "field": "order_date",
            "interval": "1 MONTH",
            "start": "2024-01-01"
          },
          {
            "field": "event_timestamp",
            "interval": "1 WEEK",
            "start": "TODAY() - 1 YEAR"
          },
          {
            "end": "TIMESTAMP(TODAY())",
            "field": "created_at",
            "interval": "1 DAY",
            "start": "TIMESTAMP(TODAY() - 7 DAYS)"
          }
        ]
      },
      "TimescaleDocsSchema": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host",
            "description": "The hostname or IP address of the server where the database is running."
          },
          "port": {
            "type": "integer",
            "title": "Port",
            "description": "The network port number on which the server is listening for incoming connections (default: 5432).",
            "default": 5432
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The user account used to authenticate and access the database."
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "The password used to authenticate and access the database.",
            "sensitive": true
          },
          "ssh_required": {
            "type": "boolean",
            "title": "SSH required",
            "description": "Indicates whether an SSH tunnel is required for the connection. Enable this option if your PostgreSQL server is behind a firewall and requires SSH tunneling for remote connections.",
            "default": false
          },
          "dbname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Database",
            "description": "The name of the specific database within the database server that you want to connect to."
          },
          "db_schema": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "The default schema to be used for the database connection (defaults to public)."
          },
          "ssl_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "SSL Mode"
          }
        },
        "type": "object",
        "required": [
          "host"
        ],
        "title": "TimescaleDocsSchema",
        "description": "TimescaleDB Secrets Schema for API Docs"
      },
      "UnlabeledIdentities": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UnlabeledIdentities",
        "description": "A model for validating identity dictionaries where standard fields use Identity's validation\nbut custom fields just need to be valued."
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "email_address": {
            "type": "string",
            "format": "email",
            "title": "Email Address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "email_address"
        ],
        "title": "UserCreate",
        "description": "Data required to create a FidesUser."
      },
      "UserCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserCreateResponse",
        "description": "Response after creating a FidesUser"
      },
      "UserEmailInviteStatus": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "UserEmailInviteStatus"
      },
      "UserForcePasswordReset": {
        "properties": {
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "new_password"
        ],
        "title": "UserForcePasswordReset",
        "description": "Only a new password, for the case where the user does not remember their password"
      },
      "UserLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserLogin",
        "description": "Similar to UserCreate except we do not need the extra validation on\nusername and password."
      },
      "UserLoginResponse": {
        "properties": {
          "user_data": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "token_data": {
            "$ref": "#/components/schemas/AccessToken"
          }
        },
        "type": "object",
        "required": [
          "user_data",
          "token_data"
        ],
        "title": "UserLoginResponse",
        "description": "Similar to UserResponse except with an access token"
      },
      "UserPasswordReset": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "UserPasswordReset",
        "description": "Contains both old and new passwords when resetting a password"
      },
      "UserPermissionsCreate": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleRegistryEnum"
            },
            "type": "array",
            "title": "Roles"
          }
        },
        "type": "object",
        "required": [
          "roles"
        ],
        "title": "UserPermissionsCreate",
        "description": "Data required to create a FidesUserPermissions record\n\nUsers will be assigned role(s) directly which are associated with a list of scopes. Scopes\ncannot be assigned directly to users."
      },
      "UserPermissionsEdit": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleRegistryEnum"
            },
            "type": "array",
            "title": "Roles"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "roles"
        ],
        "title": "UserPermissionsEdit",
        "description": "Data required to edit a FidesUserPermissions record."
      },
      "UserPermissionsResponse": {
        "properties": {
          "roles": {
            "items": {
              "$ref": "#/components/schemas/RoleRegistryEnum"
            },
            "type": "array",
            "title": "Roles"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "total_scopes": {
            "items": {
              "$ref": "#/components/schemas/ScopeRegistryEnum"
            },
            "type": "array",
            "title": "Total Scopes"
          }
        },
        "type": "object",
        "required": [
          "roles",
          "id",
          "user_id",
          "total_scopes"
        ],
        "title": "UserPermissionsResponse",
        "description": "Response after creating, editing, or retrieving a FidesUserPermissions record."
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "email_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled",
            "default": false
          },
          "disabled_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disabled Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "created_at",
          "email_address"
        ],
        "title": "UserResponse",
        "description": "Response after requesting a User"
      },
      "UserUpdate": {
        "properties": {
          "email_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Data required to update a FidesUser"
      },
      "ValidTargets": {
        "type": "string",
        "enum": [
          "aws",
          "db",
          "okta",
          "bigquery",
          "dynamodb",
          "scylla"
        ],
        "title": "ValidTargets",
        "description": "Validation of targets attempted to generate resources from"
      },
      "ValidateDatasetResponse": {
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/Dataset"
          },
          "traversal_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatasetTraversalDetails"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "dataset",
          "traversal_details"
        ],
        "title": "ValidateDatasetResponse",
        "description": "Response model for validating a dataset, which includes both the dataset\nitself (if valid) plus a details object describing if the dataset is\ntraversable or not."
      },
      "ValidateRequest": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AWSConfig"
              },
              {
                "$ref": "#/components/schemas/BigQueryConfig"
              },
              {
                "$ref": "#/components/schemas/OktaConfig"
              }
            ],
            "title": "Config"
          },
          "target": {
            "$ref": "#/components/schemas/ValidationTarget"
          }
        },
        "type": "object",
        "required": [
          "config",
          "target"
        ],
        "title": "ValidateRequest",
        "description": "Validate endpoint request object"
      },
      "ValidateResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ValidationStatus"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "ValidateResponse",
        "description": "Validate endpoint response object"
      },
      "ValidateSaaSConfigResponse": {
        "properties": {
          "saas_config": {
            "$ref": "#/components/schemas/SaaSConfig"
          },
          "validation_details": {
            "$ref": "#/components/schemas/SaaSConfigValidationDetails"
          }
        },
        "type": "object",
        "required": [
          "saas_config",
          "validation_details"
        ],
        "title": "ValidateSaaSConfigResponse",
        "description": "Response model for validating a SaaS config, which includes both the SaaS config\nitself (if valid) plus a details object describing any validation errors."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValidationStatus": {
        "type": "string",
        "enum": [
          "success",
          "failure"
        ],
        "title": "ValidationStatus",
        "description": "Validate endpoint response status"
      },
      "ValidationTarget": {
        "type": "string",
        "enum": [
          "aws",
          "okta",
          "bigquery"
        ],
        "title": "ValidationTarget",
        "description": "Allowed targets for the validate endpoint"
      },
      "VerificationCode": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "VerificationCode",
        "description": "Request Body for the user to supply their identity verification code"
      },
      "Violation": {
        "properties": {
          "violating_attributes": {
            "$ref": "#/components/schemas/ViolationAttributes"
          },
          "detail": {
            "type": "string",
            "title": "Detail",
            "description": "A human-readable string detailing the evaluation violation."
          }
        },
        "type": "object",
        "required": [
          "violating_attributes",
          "detail"
        ],
        "title": "Violation",
        "description": "The model for violations within an evaluation."
      },
      "ViolationAttributes": {
        "properties": {
          "data_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Categories",
            "description": "A list of data categories which led to an evaluation violation."
          },
          "data_subjects": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Subjects",
            "description": "A list of data subjects which led to an evaluation violation."
          },
          "data_uses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Uses",
            "description": "A list of data uses which led to an evaluation violation."
          }
        },
        "type": "object",
        "required": [
          "data_categories",
          "data_subjects",
          "data_uses"
        ],
        "title": "ViolationAttributes",
        "description": "The model for attributes which led to an evaluation violation"
      },
      "WebhookDirection": {
        "type": "string",
        "enum": [
          "one_way",
          "two_way"
        ],
        "title": "WebhookDirection",
        "description": "The webhook direction"
      },
      "WebhookOrder": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          }
        },
        "type": "object",
        "required": [
          "key",
          "order"
        ],
        "title": "WebhookOrder",
        "description": "Schema for displaying a minimal amount of information about the webhook and its order"
      },
      "WebsiteSchema": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "URL"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebsiteSchema",
        "description": "Schema to validate the secrets needed for a generic website connector"
      },
      "WorkerHealthCheck": {
        "properties": {
          "workers_enabled": {
            "type": "boolean",
            "title": "Workers Enabled"
          },
          "workers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Workers"
          },
          "queue_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Queue Counts"
          }
        },
        "type": "object",
        "required": [
          "workers_enabled",
          "workers",
          "queue_counts"
        ],
        "title": "WorkerHealthCheck",
        "description": "Worker Healthcheck Schema"
      },
      "WorkerInfo": {
        "properties": {
          "active_task": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "reserved_tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskDetails"
            },
            "type": "array",
            "title": "Reserved Tasks",
            "default": []
          },
          "registered_tasks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Registered Tasks",
            "default": []
          }
        },
        "type": "object",
        "title": "WorkerInfo"
      },
      "WorkerStats": {
        "properties": {
          "queues": {
            "additionalProperties": {
              "$ref": "#/components/schemas/QueueInfo"
            },
            "type": "object",
            "title": "Queues"
          },
          "workers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkerInfo"
            },
            "type": "object",
            "title": "Workers"
          }
        },
        "type": "object",
        "required": [
          "queues",
          "workers"
        ],
        "title": "WorkerStats"
      },
      "fides__api__schemas__connection_configuration__connection_secrets_bigquery__KeyfileCreds": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project ID"
          },
          "private_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private key ID"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private key",
            "sensitive": true
          },
          "client_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client email"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client ID"
          },
          "auth_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth URI"
          },
          "token_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token URI"
          },
          "auth_provider_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth provider X509 cert URL"
          },
          "client_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client X509 cert URL"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "KeyfileCreds",
        "description": "Schema that holds BigQuery keyfile key/vals"
      },
      "fides__api__schemas__connection_configuration__connection_secrets_google_cloud_sql_mysql__KeyfileCreds": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project ID"
          },
          "private_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private key ID"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private Key",
            "sensitive": true
          },
          "client_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Email"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client ID"
          },
          "auth_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth URI"
          },
          "token_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token URI"
          },
          "auth_provider_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth provider X509 cert URL"
          },
          "client_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client X509 cert URL"
          },
          "universe_domain": {
            "type": "string",
            "title": "Universe domain"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "universe_domain"
        ],
        "title": "KeyfileCreds",
        "description": "Schema that holds Google Cloud SQL for MySQL keyfile key/vals"
      },
      "fides__api__schemas__connection_configuration__connection_secrets_google_cloud_sql_postgres__KeyfileCreds": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project ID"
          },
          "private_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private key ID"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private Key",
            "sensitive": true
          },
          "client_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Email"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client ID"
          },
          "auth_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth URI"
          },
          "token_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token URI"
          },
          "auth_provider_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth provider X509 cert URL"
          },
          "client_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client X509 cert URL"
          },
          "universe_domain": {
            "type": "string",
            "title": "Universe domain"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "universe_domain"
        ],
        "title": "KeyfileCreds",
        "description": "Schema that holds Google Cloud SQL for Postgres keyfile key/vals"
      },
      "fides__api__schemas__policy__Policy": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "drp_action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DrpAction"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_timeframe": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Timeframe"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Policy",
        "description": "An external representation of a Fidesops Policy"
      },
      "fides__connectors__models__KeyfileCreds": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "private_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private Key Id"
          },
          "private_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Private Key"
          },
          "client_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Email"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "auth_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Uri"
          },
          "token_uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Uri"
          },
          "auth_provider_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Provider X509 Cert Url"
          },
          "client_x509_cert_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client X509 Cert Url"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "KeyfileCreds",
        "description": "The model for BigQuery credential keyfiles."
      },
      "fideslang__models__Policy": {
        "properties": {
          "fides_key": {
            "type": "string",
            "title": "Fides Key",
            "description": "A unique key used to identify this resource."
          },
          "organization_fides_key": {
            "type": "string",
            "title": "Organization Fides Key",
            "description": "Defines the Organization that this resource belongs to.",
            "default": "default_organization"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Human-Readable name for this resource."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what this resource is."
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/PolicyRule"
            },
            "type": "array",
            "title": "Rules",
            "description": "\n    The PolicyRule resource model.\n\n    Describes the allowed combination of the various privacy data types.\n    "
          }
        },
        "type": "object",
        "required": [
          "fides_key",
          "rules"
        ],
        "title": "Policy",
        "description": "The Policy resource model.\n\nAn object used to organize a list of PolicyRules."
      }
    },
    "securitySchemes": {
      "OAuth2ClientCredentialsBearer": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "/api/v1/oauth/token"
          }
        }
      }
    }
  }
}