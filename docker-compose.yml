services:
  fidesops:
    container_name: fidesops
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    expose:
      - 8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1s
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./
        target: /fidesops
        read_only: False
      - /fidesops/src/fidesops.egg-info
    environment:
      - FIDESOPS__DEV_MODE=${FIDESOPS__DEV_MODE}
      - FIDESOPS__LOG_PII=${FIDESOPS__LOG_PII}
      - FIDESOPS__HOT_RELOAD=${FIDESOPS__HOT_RELOAD}

  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=216f4b49bea5da4f84f05288258471852c3e325cd336821097e1e65ff92b528a
      - POSTGRES_DB=app

    expose:
      - 5432
    ports:
      - "0.0.0.0:5432:5432"
    deploy:
      placement:
        constraints:
          - node.labels.fidesops.app-db-data == true

  redis:
    image: "redis:6.2.5-alpine"
    command: redis-server --requirepass testpassword
    environment:
      - REDIS_PASSWORD=testpassword
    expose:
      - 6379
    ports:
      - "0.0.0.0:6379:6379"

  docs:
    build:
      context: docs/fidesops/
      dockerfile: Dockerfile
    volumes:
      - ./docs/fidesops:/docs
    expose:
      - 8000
    ports:
      - "8000:8000"

volumes:
  app-db-data:
