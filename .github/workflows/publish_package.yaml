name: Publish Fides

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  upload_to_pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # This is required to properly tag packages

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install node modules
        run: |
          cd clients
          npm install

      - name: Build and export frontend files
        run: |
          cd clients
          npm run prod-export-admin-ui

      - name: Install Twine and wheel
        run: pip install twine wheel

      # The git reset is required here because the build modifies
      # egg-info and the wheel becomes a dirty version
      - name: Build the sdist
        run: |
          python setup.py sdist
          git reset --hard

      - name: Build the wheel
        run: python setup.py bdist_wheel

      # If the tag matches either a release tag or a beta tag, allow publishing to PyPi, e.g.:
      #   2.10.0 --> match (production release tag)
      #   2.10.0b1 --> match (beta release tag, used on main)
      #   2.10.0.a0 --> no match (alpha tag, used on feature branches)
      #   2.10.0.dev0 --> no match (arbitrary development tag)
      - name: Check Prod Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+(b[0-9]*)?$ ]]; then
              echo ::set-output name=match::true
          fi

      # We only upload to Test PyPI if it is a non-"prod" tag (not release or beta)
      - name: Upload to test pypi
        if: steps.check-tag.outputs.match != 'true'
        run: twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

      # Upload to PyPI if it is a "prod" tag (release or beta)
      - name: Upload to pypi
        if: steps.check-tag.outputs.match == 'true'
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      # Notify Fidesplus about a feature (non-prod) tag to trigger an integrated build
      - name: Send Repository Dispatch Event
        # ensure this is a non-prod tag, but NOT an untagged commit to 'main'
        if: steps.check-tag.outputs.match != 'true' && github.ref_name != 'main'
        uses: peter-evans/repository-dispatch@v2
        with:
          client-payload: '{"tag": "${{ github.ref_name }}"}'
          event-type: new-fides-feature-tag
          repository: ethyca/fidesplus
          token: ${{ secrets.DISPATCH_ACCESS_TOKEN }}
