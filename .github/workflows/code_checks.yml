name: Code Checks

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

env:
  CONTAINER: fidesctl-local
  IMAGE: ethyca/fidesctl:local

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build fidesctl container
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          target: prod
          outputs: type=docker,dest=/tmp/${{ env.CONTAINER }}.tar
          push: false
          tags: ${{ env.IMAGE }}

      - name: Upload fidesctl container
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/${{ env.CONTAINER }}.tar
          retention-days: 1

  Fidesctl:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Check fidesctl installation
        run: nox -s check_install -- docker

      - name: Run fidesctl evaluation
        run: nox -s fidesctl -- docker

      - name: Scan fidesctl db
        run: nox -s fidesctl_db_scan -- docker

  isort:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run sorter
        run: nox -s isort -- docker

  Black:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run formatter
        run: nox -s black -- docker

  Docs:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Check that the docs can build
        run: nox -s docs_check

  Pylint:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run linter
        run: nox -s pylint -- docker

  Mypy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run typechecker
        run: nox -s mypy -- docker

  Xenon:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run cyclomatic complexity check
        run: nox -s xenon -- docker

  Pytest-Unit:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run unit test suite
        run: nox -s "pytest(unit)"

  Pytest-Integration:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run integration test suite
        run: nox -s "pytest(integration)"

  Pytest-External:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nox
        run: pip install nox>=2022

      - name: Run external test suite
        run: nox -s pytest_external
        env:
          SNOWFLAKE_FIDESCTL_PASSWORD: ${{ secrets.SNOWFLAKE_FIDESCTL_PASSWORD }}
          REDSHIFT_FIDESCTL_PASSWORD: ${{ secrets.REDSHIFT_FIDESCTL_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_FIDESCTL_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_FIDESCTL_ACCESS_KEY }}
          OKTA_CLIENT_TOKEN: ${{ secrets.OKTA_FIDESCTL_CLIENT_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
          BIGQUERY_CONFIG: ${{ secrets.BIGQUERY_CONFIG }}
