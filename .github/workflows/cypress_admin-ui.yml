name: Admin UI Cypress Tests

on:
  pull_request:
    paths:
      - "clients/admin-ui/**"
      - ".github/workflows/cypress_admin-ui.yml"
  push:
    branches:
      - "main"
      - "release-**"

env:
  CI: true

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      spec_groups: ${{ steps.set-matrix.outputs.spec_groups }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set matrix
        id: set-matrix
        shell: bash
        run: |
          cd clients/admin-ui/cypress/e2e
          # Group test files into balanced groups based on file size
          echo "spec_groups=$(find . -name "*.cy.ts" | python3 -c '
          import sys, os, json, math

          # Number of groups to create (adjust based on your needs)
          NUM_GROUPS = 6

          # Get all test files with their sizes
          files = []
          for line in sys.stdin:
              filepath = line.strip()
              if os.path.exists(filepath):
                  size = os.path.getsize(filepath)
                  files.append((filepath.replace("./", ""), size))

          # Sort files by size in descending order
          files.sort(key=lambda x: x[1], reverse=True)

          # Initialize groups
          groups = [[] for _ in range(NUM_GROUPS)]
          group_sizes = [0] * NUM_GROUPS

          # Distribute files using greedy algorithm (largest file first)
          for file, size in files:
              # Find the group with the smallest total size
              min_group_idx = group_sizes.index(min(group_sizes))
              groups[min_group_idx].append(file)
              group_sizes[min_group_idx] += size

          # Format for GitHub Actions
          print(json.dumps([",".join(group) for group in groups]))
          ')" >> $GITHUB_OUTPUT

  Admin-UI-Cypress:
    needs: prepare-matrix
    strategy:
      matrix:
        spec_group: ${{ fromJson(needs.prepare-matrix.outputs.spec_groups) }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clients
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Build FidesJS
        working-directory: clients/fides-js
        run: npm run build

      - name: Cypress Admin UI E2E Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: clients/admin-ui
          install: false
          start: npm run cy:start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 180
          spec: cypress/e2e/{${{ matrix.spec_group }}}

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos-admin-ui
          path: /home/runner/work/fides/fides/clients/admin-ui/cypress/videos/*.mp4
