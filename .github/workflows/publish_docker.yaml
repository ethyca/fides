name: Publish Docker Images

on:
  push:
    branches:
      - main
    tags:
      - "*"

env:
  DOCKER_USER: ethycaci
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

jobs:
  push-fides:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # This is required to properly tag images

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_TOKEN }}

      - name: Install Dev Requirements
        run: pip install -r dev-requirements.txt


      - name: Check Prod Tag
        id: check-prod-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          else
              echo ::set-output name=match::false
          fi
      - name: Check RC Tag
        id: check-rc-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+rc[0-9]+$ ]]; then
              echo ::set-output name=match::true
          else
              echo ::set-output name=match::false
          fi
      - name: Check alpha Tag
        id: check-alpha-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+a[0-9]+$ ]]; then
              echo ::set-output name=match::true
          else
              echo ::set-output name=match::false
          fi
      - name: Check beta Tag
        id: check-beta-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+b[0-9]+$ ]]; then
              echo ::set-output name=match::true
          else
              echo ::set-output name=match::false
          fi

      # if neither prod, rc, beta or alpha git tag, then push images with the ":dev" tag
      - name: Push Fides Dev Tag
        if: steps.check-prod-tag.outputs.match == 'false' && steps.check-rc-tag.outputs.match == 'false' && steps.check-beta-tag.outputs.match == 'false' && steps.check-alpha-tag.outputs.match == 'false'
        run: nox -s "push(dev)"

      # if a prod git tag, then we run the prod job to publish images tagged with the version number and a constant ":latest" tag
      - name: Push Fides Prod Tags
        if: steps.check-prod-tag.outputs.match == 'true'
        run: nox -s "push(prod)"

      # if an RC git tag, then we run the rc job to publish images with an ":rc" tag
      - name: Push Fides RC Tags
        if: steps.check-rc-tag.outputs.match == 'true'
        run: nox -s "push(rc)"

      # if an RC git tag, also notify Fidesinfra to trigger a redeploy of rc env, to pick up our newly published images
      - name: Send Repository Dispatch Event (RC redeploy)
        if: steps.check-rc-tag.outputs.match == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: trigger-fidesinfra-deploy-fides-rc
          repository: ethyca/fidesinfra
          token: ${{ secrets.DISPATCH_ACCESS_TOKEN }}

      # if an alpha or beta git tag, then we run the prerelease job to publish images with an ":prerelease" tag
      - name: Push Fides prerelease Tags
        if: steps.check-alpha-tag.outputs.match == 'true' || steps.check-beta-tag.outputs.match == 'true'
        run: nox -s "push(prerelease)"

      # if not a prod git tag, then we run the git-tag job to publish images with a git tag
      # if one exists on the current commit. the job is a no-op if the commit hasn't been tagged
      - name: Push Fides Commit Tags
        if: steps.check-prod-tag.outputs.match == 'false'
        run: nox -s "push(git-tag)"
