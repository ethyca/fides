"""create privacy declarations table

Revision ID: 48d9caacebd4
Revises: 144d9b85c712
Create Date: 2023-04-14 14:16:50.700532

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "48d9caacebd4"
down_revision = "144d9b85c712"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "privacydeclaration",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("data_categories", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("data_qualifier", sa.String(), nullable=True),
        sa.Column("data_subjects", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("dataset_references", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("egress", sa.JSON(), nullable=True),
        sa.Column("ingress", sa.JSON(), nullable=True),
        sa.Column("system_id", sa.String(), nullable=False),
        sa.Column("data_use", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_use"],
            ["ctl_data_uses.fides_key"],
        ),
        sa.ForeignKeyConstraint(
            ["system_id"],
            ["ctl_systems.fides_key"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_privacydeclaration_data_use"),
        "privacydeclaration",
        ["data_use"],
        unique=False,
    )
    op.create_index(
        op.f("ix_privacydeclaration_id"), "privacydeclaration", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_privacydeclaration_system_id"),
        "privacydeclaration",
        ["system_id"],
        unique=False,
    )

    # TODO: migrate data - pull from systems table JSON, populate privacy declarations table.

    op.drop_column("ctl_systems", "privacy_declarations")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "ctl_systems",
        sa.Column(
            "privacy_declarations",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )

    # TODO: migrate data - pull from privacy declarations table, populate systems table with JSON.

    op.drop_index(
        op.f("ix_privacydeclaration_system_id"), table_name="privacydeclaration"
    )
    op.drop_index(op.f("ix_privacydeclaration_id"), table_name="privacydeclaration")
    op.drop_index(
        op.f("ix_privacydeclaration_data_use"), table_name="privacydeclaration"
    )
    op.drop_table("privacydeclaration")
    # ### end Alembic commands ###
