
from loguru import logger

from fides.api.common_exceptions import FidesopsException
from fides.api.schemas.saas.shared_schemas import IdentityParamRef
from fides.api.schemas.saas.strategy_configuration import (
    ErrorValidationPostProcessorConfiguration,
)
from fides.api.service.processors.post_processor_strategy.post_processor_strategy import (
    PostProcessorStrategy,
)

class  ErrorValidationPostProcessorStrategy(PostProcessorStrategy):
    """
    Expands on the ignore_errors flag.Validates that a Given error is a non-critical error that can be ignored
    There are some API's where diferent errors have the same error code (I.E 400). 
    For those cases, we need to check the message in order to figure out if the error is ignorable
    
    E.g:
    ignorable_response = [
        "HttpCode" : 400
        "status" : "error",
        "message" : "example@email.com is already unsubscribed from subscription 1234567",
    ]
    v/s
    non_ignorable_response = [
        "HttpCode" : 400
        "status" : "error",
        "message" : "Given account does not have permissions to remove the content ",
    ]
    """

    name = "error_validation"
    ##TODO: Check configuration model 
    configuration_model = ErrorValidationPostProcessorConfiguration

    def __init__(self, configuration : ErrorValidationPostProcessorConfiguration):
        self.http_code = configuration.http_code

