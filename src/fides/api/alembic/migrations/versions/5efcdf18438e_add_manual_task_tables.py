"""add manual task tables

Revision ID: 5efcdf18438e
Revises: 440a5b9a3493
Create Date: 2025-06-04 17:24:00.300170

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import func

# revision identifiers, used by Alembic.
revision = "5efcdf18438e"
down_revision = "440a5b9a3493"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "manual_task",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "task_type", sa.String(), nullable=False, server_default="privacy_request"
        ),
        sa.Column("parent_entity_id", sa.String(), nullable=False),
        sa.Column("parent_entity_type", sa.String(), nullable=False),
        sa.Column("due_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_config",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("config_type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_reference",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=True),
        sa.Column("reference_id", sa.String(), nullable=True),
        sa.Column("reference_type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_config_field",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("config_id", sa.String(), nullable=True),
        sa.Column("field_key", sa.String(), nullable=False),
        sa.Column("field_type", sa.String(), nullable=False),
        sa.Column(
            "field_metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
            server_default="{}",
        ),
        sa.CheckConstraint(
            "field_type IN ('form', 'checkbox', 'attachment')", name="valid_field_type"
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["manual_task_config.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_instance",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("config_id", sa.String(), nullable=False),
        sa.Column("entity_id", sa.String(), nullable=False),
        sa.Column("entity_type", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False, server_default="pending"),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("completed_by_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["manual_task_config.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_log",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=False),
        sa.Column("config_id", sa.String(), nullable=True),
        sa.Column("instance_id", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=True),
        sa.Column("details", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["manual_task_config.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["instance_id"],
            ["manual_task_instance.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "manual_task_submission",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column(
            "updated_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("task_id", sa.String(), nullable=True),
        sa.Column("config_id", sa.String(), nullable=True),
        sa.Column("field_id", sa.String(), nullable=True),
        sa.Column("instance_id", sa.String(), nullable=True),
        sa.Column("submitted_by", sa.Integer(), nullable=False),
        sa.Column(
            "submitted_at", sa.DateTime(), nullable=False, server_default=func.now()
        ),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("completed_by_id", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False, server_default="pending"),
        sa.ForeignKeyConstraint(
            ["config_id"],
            ["manual_task_config.id"],
        ),
        sa.ForeignKeyConstraint(
            ["field_id"],
            ["manual_task_config_field.id"],
        ),
        sa.ForeignKeyConstraint(
            ["instance_id"],
            ["manual_task_instance.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["manual_task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create indexes for manual_task
    op.create_index("ix_manual_task_task_type", "manual_task", ["task_type"])
    op.create_index(
        "ix_manual_task_parent_entity",
        "manual_task",
        ["parent_entity_id", "parent_entity_type"],
    )
    op.create_index("ix_manual_task_due_date", "manual_task", ["due_date"])

    # Create indexes for manual_task_config
    op.create_index("ix_manual_task_config_task_id", "manual_task_config", ["task_id"])
    op.create_index(
        "ix_manual_task_config_config_type", "manual_task_config", ["config_type"]
    )

    # Create indexes for manual_task_reference
    op.create_index(
        "ix_manual_task_reference_task_id", "manual_task_reference", ["task_id"]
    )
    op.create_index(
        "ix_manual_task_reference_reference",
        "manual_task_reference",
        ["reference_id", "reference_type"],
    )

    # Create indexes for manual_task_config_field
    op.create_index(
        "ix_manual_task_config_field_config_id",
        "manual_task_config_field",
        ["config_id"],
    )
    op.create_index(
        "ix_manual_task_config_field_field_key",
        "manual_task_config_field",
        ["field_key"],
    )
    op.create_index(
        "ix_manual_task_config_field_task_id", "manual_task_config_field", ["task_id"]
    )

    # Create indexes for manual_task_instance
    op.create_index(
        "ix_manual_task_instance_task_id", "manual_task_instance", ["task_id"]
    )
    op.create_index(
        "ix_manual_task_instance_config_id", "manual_task_instance", ["config_id"]
    )
    op.create_index(
        "ix_manual_task_instance_entity",
        "manual_task_instance",
        ["entity_id", "entity_type"],
    )
    op.create_index(
        "ix_manual_task_instance_status", "manual_task_instance", ["status"]
    )
    op.create_index(
        "ix_manual_task_instance_completed_at", "manual_task_instance", ["completed_at"]
    )

    # Create indexes for manual_task_log
    op.create_index("ix_manual_task_log_task_id", "manual_task_log", ["task_id"])
    op.create_index("ix_manual_task_log_config_id", "manual_task_log", ["config_id"])
    op.create_index(
        "ix_manual_task_log_instance_id", "manual_task_log", ["instance_id"]
    )
    op.create_index("ix_manual_task_log_status", "manual_task_log", ["status"])
    op.create_index("ix_manual_task_log_created_at", "manual_task_log", ["created_at"])

    # Create indexes for manual_task_submission
    op.create_index(
        "ix_manual_task_submission_task_id", "manual_task_submission", ["task_id"]
    )
    op.create_index(
        "ix_manual_task_submission_config_id", "manual_task_submission", ["config_id"]
    )
    op.create_index(
        "ix_manual_task_submission_field_id", "manual_task_submission", ["field_id"]
    )
    op.create_index(
        "ix_manual_task_submission_instance_id",
        "manual_task_submission",
        ["instance_id"],
    )
    op.create_index(
        "ix_manual_task_submission_status", "manual_task_submission", ["status"]
    )
    op.create_index(
        "ix_manual_task_submission_submitted_by",
        "manual_task_submission",
        ["submitted_by"],
    )
    op.create_index(
        "ix_manual_task_submission_submitted_at",
        "manual_task_submission",
        ["submitted_at"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes first
    op.drop_index(
        "ix_manual_task_submission_submitted_at", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_submitted_by", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_status", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_instance_id", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_field_id", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_config_id", table_name="manual_task_submission"
    )
    op.drop_index(
        "ix_manual_task_submission_task_id", table_name="manual_task_submission"
    )
    op.drop_index("ix_manual_task_log_created_at", table_name="manual_task_log")
    op.drop_index("ix_manual_task_log_status", table_name="manual_task_log")
    op.drop_index("ix_manual_task_log_instance_id", table_name="manual_task_log")
    op.drop_index("ix_manual_task_log_config_id", table_name="manual_task_log")
    op.drop_index("ix_manual_task_log_task_id", table_name="manual_task_log")
    op.drop_index(
        "ix_manual_task_instance_completed_at", table_name="manual_task_instance"
    )
    op.drop_index("ix_manual_task_instance_status", table_name="manual_task_instance")
    op.drop_index("ix_manual_task_instance_entity", table_name="manual_task_instance")
    op.drop_index(
        "ix_manual_task_instance_config_id", table_name="manual_task_instance"
    )
    op.drop_index("ix_manual_task_instance_task_id", table_name="manual_task_instance")
    op.drop_index(
        "ix_manual_task_config_field_task_id", table_name="manual_task_config_field"
    )
    op.drop_index(
        "ix_manual_task_config_field_field_key", table_name="manual_task_config_field"
    )
    op.drop_index(
        "ix_manual_task_config_field_config_id", table_name="manual_task_config_field"
    )
    op.drop_index(
        "ix_manual_task_reference_reference", table_name="manual_task_reference"
    )
    op.drop_index(
        "ix_manual_task_reference_task_id", table_name="manual_task_reference"
    )
    op.drop_index("ix_manual_task_config_config_type", table_name="manual_task_config")
    op.drop_index("ix_manual_task_config_task_id", table_name="manual_task_config")
    op.drop_index("ix_manual_task_due_date", table_name="manual_task")
    op.drop_index("ix_manual_task_parent_entity", table_name="manual_task")
    op.drop_index("ix_manual_task_task_type", table_name="manual_task")

    # Then drop tables
    op.drop_table("manual_task_submission")
    op.drop_table("manual_task_log")
    op.drop_table("manual_task_instance")
    op.drop_table("manual_task_config_field")
    op.drop_table("manual_task_reference")
    op.drop_table("manual_task_config")
    op.drop_table("manual_task")
    # ### end Alembic commands ###
