"""notice and experience translations

Revision ID: 5a19fae35aab
Revises: 956d21f13def
Create Date: 2024-01-25 18:29:29.904138

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5a19fae35aab"
down_revision = "956d21f13def"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "experienceconfigtemplate",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("regions", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("component", sa.String(), nullable=False),
        sa.Column("privacy_notices", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "translations",
            postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
            nullable=True,
        ),
        sa.Column("banner_enabled", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_experienceconfigtemplate_banner_enabled"),
        "experienceconfigtemplate",
        ["banner_enabled"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experienceconfigtemplate_id"),
        "experienceconfigtemplate",
        ["id"],
        unique=False,
    )
    op.create_table(
        "experiencenotices",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("notice_id", sa.String(), nullable=False),
        sa.Column("experience_config_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["experience_config_id"],
            ["privacyexperienceconfig.id"],
        ),
        sa.ForeignKeyConstraint(
            ["notice_id"],
            ["privacynotice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_experiencenotices_experience_config_id"),
        "experiencenotices",
        ["experience_config_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experiencenotices_id"), "experiencenotices", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_experiencenotices_notice_id"),
        "experiencenotices",
        ["notice_id"],
        unique=False,
    )
    op.create_table(
        "experiencetranslation",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("accept_button_label", sa.String(), nullable=True),
        sa.Column("acknowledge_button_label", sa.String(), nullable=True),
        sa.Column("banner_description", sa.String(), nullable=True),
        sa.Column("banner_title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("privacy_policy_link_label", sa.String(), nullable=True),
        sa.Column("privacy_policy_url", sa.String(), nullable=True),
        sa.Column("privacy_preferences_link_label", sa.String(), nullable=True),
        sa.Column("reject_button_label", sa.String(), nullable=True),
        sa.Column("save_button_label", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("experience_config_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["experience_config_id"],
            ["privacyexperienceconfig.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "language", "experience_config_id", name="experience_translation"
        ),
    )
    op.create_index(
        op.f("ix_experiencetranslation_id"),
        "experiencetranslation",
        ["id"],
        unique=False,
    )
    op.create_table(
        "noticetranslation",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("privacy_notice_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["privacy_notice_id"],
            ["privacynotice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("language", "privacy_notice_id", name="notice_translation"),
    )
    op.create_index(
        op.f("ix_noticetranslation_id"), "noticetranslation", ["id"], unique=False
    )
    op.add_column(
        "privacyexperience", sa.Column("disabled", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "privacyexperienceconfig", sa.Column("origin", sa.String(), nullable=True)
    )
    op.add_column(
        "privacyexperienceconfig",
        sa.Column("dismissable", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "privacyexperienceconfig",
        sa.Column("allow_language_selection", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "privacyexperienceconfig",
        sa.Column("custom_asset_id", sa.String(), nullable=True),
    )
    op.create_foreign_key(
        None,
        "privacyexperienceconfig",
        "plus_custom_asset",
        ["custom_asset_id"],
        ["id"],
    )
    op.create_foreign_key(
        None, "privacyexperienceconfig", "experienceconfigtemplate", ["origin"], ["id"]
    )
    op.drop_column("privacyexperienceconfig", "is_default")
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("language", sa.String(), nullable=False),
    )
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("origin", sa.String(), nullable=True),
    )
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("dismissable", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("allow_language_selection", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("custom_asset_id", sa.String(), nullable=True),
    )
    op.add_column(
        "privacyexperienceconfighistory",
        sa.Column("translation_id", sa.String(), nullable=True),
    )
    op.alter_column(
        "privacyexperienceconfighistory",
        "experience_config_id",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.create_foreign_key(
        None,
        "privacyexperienceconfighistory",
        "experiencetranslation",
        ["translation_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        None,
        "privacyexperienceconfighistory",
        "plus_custom_asset",
        ["custom_asset_id"],
        ["id"],
    )
    op.create_foreign_key(
        None,
        "privacyexperienceconfighistory",
        "experienceconfigtemplate",
        ["origin"],
        ["id"],
    )
    op.alter_column(
        "privacynotice",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.add_column(
        "privacynoticehistory", sa.Column("language", sa.String(), nullable=False)
    )
    op.add_column(
        "privacynoticehistory", sa.Column("title", sa.String(), nullable=False)
    )
    op.add_column(
        "privacynoticehistory", sa.Column("translation_id", sa.String(), nullable=True)
    )
    op.alter_column(
        "privacynoticehistory",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    op.alter_column(
        "privacynoticehistory",
        "privacy_notice_id",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.create_foreign_key(
        None,
        "privacynoticehistory",
        "noticetranslation",
        ["translation_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.add_column(
        "privacynoticetemplate",
        sa.Column(
            "translations",
            postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
            nullable=True,
        ),
    )
    op.alter_column(
        "privacynoticetemplate",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "privacynoticetemplate",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.drop_column("privacynoticetemplate", "translations")
    op.drop_constraint(None, "privacynoticehistory", type_="foreignkey")
    op.alter_column(
        "privacynoticehistory",
        "privacy_notice_id",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "privacynoticehistory",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.drop_column("privacynoticehistory", "translation_id")
    op.drop_column("privacynoticehistory", "title")
    op.drop_column("privacynoticehistory", "language")
    op.alter_column(
        "privacynotice",
        "regions",
        existing_type=postgresql.ARRAY(sa.VARCHAR()),
        nullable=False,
    )
    op.drop_constraint(None, "privacyexperienceconfighistory", type_="foreignkey")
    op.drop_constraint(None, "privacyexperienceconfighistory", type_="foreignkey")
    op.drop_constraint(None, "privacyexperienceconfighistory", type_="foreignkey")
    op.alter_column(
        "privacyexperienceconfighistory",
        "experience_config_id",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.drop_column("privacyexperienceconfighistory", "translation_id")
    op.drop_column("privacyexperienceconfighistory", "custom_asset_id")
    op.drop_column("privacyexperienceconfighistory", "allow_language_selection")
    op.drop_column("privacyexperienceconfighistory", "dismissable")
    op.drop_column("privacyexperienceconfighistory", "origin")
    op.drop_column("privacyexperienceconfighistory", "language")
    op.add_column(
        "privacyexperienceconfig",
        sa.Column("is_default", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "privacyexperienceconfig", type_="foreignkey")
    op.drop_constraint(None, "privacyexperienceconfig", type_="foreignkey")
    op.drop_column("privacyexperienceconfig", "custom_asset_id")
    op.drop_column("privacyexperienceconfig", "allow_language_selection")
    op.drop_column("privacyexperienceconfig", "dismissable")
    op.drop_column("privacyexperienceconfig", "origin")
    op.drop_column("privacyexperience", "disabled")
    op.drop_index(op.f("ix_noticetranslation_id"), table_name="noticetranslation")
    op.drop_table("noticetranslation")
    op.drop_index(
        op.f("ix_experiencetranslation_id"), table_name="experiencetranslation"
    )
    op.drop_table("experiencetranslation")
    op.drop_index(
        op.f("ix_experiencenotices_notice_id"), table_name="experiencenotices"
    )
    op.drop_index(op.f("ix_experiencenotices_id"), table_name="experiencenotices")
    op.drop_index(
        op.f("ix_experiencenotices_experience_config_id"),
        table_name="experiencenotices",
    )
    op.drop_table("experiencenotices")
    op.drop_index(
        op.f("ix_experienceconfigtemplate_id"), table_name="experienceconfigtemplate"
    )
    op.drop_index(
        op.f("ix_experienceconfigtemplate_banner_enabled"),
        table_name="experienceconfigtemplate",
    )
    op.drop_table("experienceconfigtemplate")
    # ### end Alembic commands ###
