services:
  fides:
    container_name: fides
    image: ${FIDES_DEPLOY_IMAGE:-ethyca/fides:local}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/health" ]
      interval: 20s
      timeout: 5s
      retries: 10
    ports:
      - "8080:8080"
    depends_on:
      fides-db:
        condition: service_healthy
      postgres-test:
        condition: service_healthy
      mongodb-test:
        condition: service_started
    # WARNING: This env_file option is specified so that we can provide an
    # alternate ENV file via 'fides deploy up --env-file <some path>' as a
    # convenient way for users to provide their own ENV files to the 'fides'
    # at runtime. However, since Docker Compose doesn't support optional
    # env_file specifications, we also need to provide a default 'sample.env'
    # as a placeholder.
    # (see https://github.com/compose-spec/compose-spec/issues/240)
    #
    # This seems fine, but it also leads to some gotchas when calling
    # 'docker compose' from different working directories, like we do in the
    # 'fides' nox build commands. Beware!
    env_file:
      - ${FIDES_DEPLOY_ENV_FILE:-sample.env}
    environment:
      FIDES__CONFIG_PATH: ${FIDES_DEPLOY_CONFIG_PATH:-/fides/src/fides/data/sample_project/fides.toml}
      # Configure sample connection secrets for Postgres & Mongo (see services below)
      FIDES_DEPLOY__CONNECTORS__POSTGRES__HOST: postgres-test
      FIDES_DEPLOY__CONNECTORS__POSTGRES__PORT: 5432
      FIDES_DEPLOY__CONNECTORS__POSTGRES__DBNAME: postgres_example
      FIDES_DEPLOY__CONNECTORS__POSTGRES__USERNAME: postgres
      FIDES_DEPLOY__CONNECTORS__POSTGRES__PASSWORD: postgres
      FIDES_DEPLOY__CONNECTORS__MONGO_HOST: mongodb-test
      FIDES_DEPLOY__CONNECTORS__MONGO_PORT: 27017
      FIDES_DEPLOY__CONNECTORS__MONGO_DEFAULTAUTHDB: mongo_test
      FIDES_DEPLOY__CONNECTORS__MONGO_USERNAME: mongo_user
      FIDES_DEPLOY__CONNECTORS__MONGO_PASSWORD: mongo_pass
    # Mount a local volume so the user can see their privacy requests
    volumes:
      - type: bind
        source: ${FIDES_DEPLOY_UPLOADS_DIR:-./fides_uploads}
        target: /fides/fides_uploads
        read_only: False

  sample-app:
    container_name: sample-app
    image: ethyca/fides-sample-app:local
    env_file:
      - ${FIDES_DEPLOY_ENV_FILE:-sample.env}
    environment:
      - PORT=3000
      - FIDES_SAMPLE_APP__DATABASE_HOST=postgres-test
      - FIDES_SAMPLE_APP__DATABASE_PORT=5432
      - FIDES_SAMPLE_APP__DATABASE_USER=postgres
      - FIDES_SAMPLE_APP__DATABASE_PASSWORD=postgres
      - FIDES_SAMPLE_APP__DATABASE_DB=postgres_example
      - FIDES_SAMPLE_APP__PRIVACY_CENTER_URL=http://localhost:3001
    ports:
      - 3000:3000
    depends_on:
      - postgres-test

  fides-pc:
    container_name: fides-privacy-center
    image: ethyca/fides-privacy-center:local
    env_file:
      - ${FIDES_DEPLOY_ENV_FILE:-sample.env}
    environment:
      - FIDES_PRIVACY_CENTER__FIDES_API_URL=http://localhost:8080/api/v1
      - FIDES_PRIVACY_CENTER__SERVER_SIDE_FIDES_API_URL=http://fides:8080/api/v1
      - FIDES_PRIVACY_CENTER__PRIVACY_CENTER_URL=http://localhost:3001
    ports:
      - "3001:3000"
    volumes:
      - type: bind
        source: ./privacy_center/config
        target: /app/config
        read_only: False

  fides-db:
    container_name: fides-db
    image: postgres:12
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - "7432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "fides"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    container_name: fides-redis
    image: redis:6.2.5-alpine
    command: redis-server --requirepass redispassword
    ports:
      - "7379:6379"

  postgres-test:
    container_name: fides-postgres-example-db
    image: postgres:12
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - "6432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres_example"
    volumes:
      - ./postgres_sample.sql:/docker-entrypoint-initdb.d/postgres_sample.sql:ro

  mongodb-test:
    container_name: fides-redis-example-db
    image: mongo:5.0.3
    environment:
      - MONGO_INITDB_DATABASE=mongo_test
      - MONGO_INITDB_ROOT_USERNAME=mongo_user
      - MONGO_INITDB_ROOT_PASSWORD=mongo_pass
    ports:
      - "37017:27017"
    volumes:
      - ./mongo_sample.js:/docker-entrypoint-initdb.d/mongo_sample.js:ro

volumes:
  postgres: null
